#!/bin/sh

# Hacky JNI mix of matmul and CudaDP

SCALA_HOME=/Developer/Scala
JAVA_INCLUDE="$JAVA_HOME/include"
if [ "$OSTYPE" = "darwin" ]; then
	JAVA_INCLUDE="/System/Library/Frameworks/JavaVM.framework/Headers"
fi

BASE="/Documents/EPFL/MasterProj/lamp-dp-mt/src/main/c"

# cleanup
rm -r "$BASE/bin" 2>/dev/null
mkdir -p "$BASE/bin"

#printf "Build:"

# compile scala
#printf " Scala"
scalac -d "$BASE/bin" "$BASE/"Toy.scala || exit

# compile C library in the classpath
#printf " C"
#nvcc -m64 -arch=sm_30 -O2 --linker-options -rpath,/usr/local/cuda/lib -shared \
#	-I"$JAVA_INCLUDE" "$BASE/matmul.cu" -o "$BASE/bin/libCudaDP.jnilib" || exit

g++ CudaDP.cpp -I"$JAVA_INCLUDE" -c -o bin/CudaDP.o
nvcc -m64 -arch=sm_30 -O2 matmul.cu -c -o bin/matmul.o
g++ bin/matmul.o bin/CudaDP.o -L/usr/local/cuda/lib -lcudart -shared -Wl,-rpath,/usr/local/cuda/lib -o bin/libCudaDP.jnilib

printf ".\n"
# and execute
scala -cp "$BASE/bin" Toy


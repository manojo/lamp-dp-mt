/*****************************************
  Emitting Generated Code                  
*******************************************/
class test1 extends ((Int)=>(Int)) {
def apply(x0:Int): Int = {
var x1: Int = 0
val x4 = 1 < 11
val x12 = if (x4) {
var x5 : Int = 1
val x10 = while (x5 < 11) {
val x6 = x1
val x7 = x6 + x5
x1 = x7
()
x5 = x5 + 1
}
x10
} else {
()
}
val x13 = x1
x13
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
55
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test2 extends ((Int)=>(Int)) {
def apply(x27:Int): Int = {
var x28: Int = 0
val x4 = 1 < 11
val x37 = if (x4) {
var x30 : Int = 1
val x35 = while (x30 < 11) {
val x31 = x28
val x32 = x31 + x30
x28 = x32
()
x30 = x30 + 1
}
x35
} else {
()
}
val x45 = if (x4) {
var x38 : Int = 1
val x43 = while (x38 < 11) {
val x39 = x28
val x40 = x39 + x38
x28 = x40
()
x38 = x38 + 1
}
x43
} else {
()
}
val x46 = x28
x46
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
110
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test3 extends ((Int)=>(Int)) {
def apply(x68:Int): Int = {
var x69: Int = 0
val x71 = x69
val x72 = x71 + 10
x69 = x72
val x74 = x69
val x75 = x74 + 23
x69 = x75
val x77 = x69
val x78 = x77 + 42
x69 = x78
val x80 = x69
x80
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
75
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test4 extends ((Int)=>(Int)) {
def apply(x95:Int): Int = {
var x96: Int = 0
val x97 = x95 > 10
val x110 = if (x97) {
val x100 = x96
val x101 = x100 + 10
x96 = x101
val x103 = x96
val x104 = x103 + 23
x96 = x104
val x106 = x96
val x107 = x106 + 42
x96 = x107
()
} else {
()
}
val x111 = x96
x111
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
0
75
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test5 extends ((Int)=>(Int)) {
def apply(x130:Int): Int = {
var x131: Int = 0
val x4 = 1 < 11
val x143 = if (x4) {
var x135 : Int = 1
val x141 = while (x135 < 11) {
val x137 = x131
val x132 = x135
val x133 = x132 * 2
val x136 = x133
val x138 = x137 + x136
x131 = x138
()
x135 = x135 + 1
}
x141
} else {
()
}
val x144 = x131
x144
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
110
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test6 extends ((Int)=>(Int)) {
def apply(x162:Int): Int = {
var x163: Int = 0
val x4 = 1 < 11
val x178 = if (x4) {
var x168 : Int = 1
val x176 = while (x168 < 11) {
val x164 = x168
val x165 = x164 % 2
val x166 = x165 == 1
val x169 = x166
val x174 = if (x169) {
val x170 = x163
val x171 = x170 + x168
x163 = x171
()
} else {
()
}
x174
x168 = x168 + 1
}
x176
} else {
()
}
val x179 = x163
x179
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
25
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test7 extends ((Int)=>(Int)) {
def apply(x200:Int): Int = {
var x201: Int = 0
val x4 = 1 < 11
val x222 = if (x4) {
var x207 : Int = 1
val x220 = while (x207 < 11) {
val x202 = x207
val x203 = x202 + 1
val x208 = 1 < x203
val x216 = if (x208) {
var x209 : Int = 1
val x214 = while (x209 < x203) {
val x210 = x201
val x211 = x210 + x209
x201 = x211
()
x209 = x209 + 1
}
x214
} else {
()
}
val x218 = x216
x218
x207 = x207 + 1
}
x220
} else {
()
}
val x223 = x201
x223
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
220

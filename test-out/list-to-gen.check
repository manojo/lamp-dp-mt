/*****************************************
  Emitting Generated Code                  
*******************************************/
class test1 extends ((Int)=>(Int)) {
def apply(x0:Int): Int = {
var x1: Int = 0
var x4 : Int = 1
val x9 = while (x4 < 11) {
val x5 = x1
val x6 = x5 + x4
x1 = x6
()
x4 = x4 + 1
}
val x10 = x1
x10
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
55
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test2 extends ((Int)=>(Int)) {
def apply(x22:Int): Int = {
var x23: Int = 0
var x25 : Int = 1
val x30 = while (x25 < 11) {
val x26 = x23
val x27 = x26 + x25
x23 = x27
()
x25 = x25 + 1
}
var x31 : Int = 1
val x36 = while (x31 < 11) {
val x32 = x23
val x33 = x32 + x31
x23 = x33
()
x31 = x31 + 1
}
val x37 = x23
x37
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
110
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test3 extends ((Int)=>(Int)) {
def apply(x55:Int): Int = {
var x56: Int = 0
val x58 = x56
val x59 = x58 + 10
x56 = x59
val x61 = x56
val x62 = x61 + 23
x56 = x62
val x64 = x56
val x65 = x64 + 42
x56 = x65
val x67 = x56
x67
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
75
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test4 extends ((Int)=>(Int)) {
def apply(x82:Int): Int = {
var x83: Int = 0
val x84 = x82 > 10
val x97 = if (x84) {
val x87 = x83
val x88 = x87 + 10
x83 = x88
val x90 = x83
val x91 = x90 + 23
x83 = x91
val x93 = x83
val x94 = x93 + 42
x83 = x94
()
} else {
()
}
val x98 = x83
x98
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
0
75
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test5 extends ((Int)=>(Int)) {
def apply(x117:Int): Int = {
var x118: Int = 0
var x122 : Int = 1
val x128 = while (x122 < 11) {
val x124 = x118
val x119 = x122
val x120 = x119 * 2
val x123 = x120
val x125 = x124 + x123
x118 = x125
()
x122 = x122 + 1
}
val x129 = x118
x129
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
110
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test6 extends ((Int)=>(Int)) {
def apply(x145:Int): Int = {
var x146: Int = 0
var x151 : Int = 1
val x159 = while (x151 < 11) {
val x147 = x151
val x148 = x147 % 2
val x149 = x148 == 1
val x152 = x149
val x157 = if (x152) {
val x153 = x146
val x154 = x153 + x151
x146 = x154
()
} else {
()
}
x157
x151 = x151 + 1
}
val x160 = x146
x160
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
25
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test7 extends ((Int)=>(Int)) {
def apply(x179:Int): Int = {
var x180: Int = 0
var x182 : Int = 1
val x193 = while (x182 < 11) {
val x183 = x182 + 1
var x186 : Int = 1
val x191 = while (x186 < x183) {
val x187 = x180
val x188 = x187 + x186
x180 = x188
()
x186 = x186 + 1
}
()
x182 = x182 + 1
}
val x194 = x180
x194
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
220

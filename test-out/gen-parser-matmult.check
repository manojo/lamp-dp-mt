/*****************************************
  Emitting Generated Code                  
*******************************************/
class gen-parser-matmult extends ((Array[scala.Tuple2[Int, Int]])=>(scala.Tuple3[Int, Int, Int])) {
def apply(x0:Array[scala.Tuple2[Int, Int]]): scala.Tuple3[Int, Int, Int] = {
val x1 = x0.length
val x2 = x1 + 1
val x3 = x2 * x2
val x4 = new Array[scala.Tuple3[Int, Int, Int]](x3)
val x5 = (0,100000,0)
val x17 = 0 == 0
var x7 : Int = 1
val x90 = while (x7 < x2) {
val x8 = x2 - x7
var x10 : Int = 0
val x88 = while (x10 < x8) {
var x12: scala.Tuple3[Int, Int, Int] = x5
val x11 = x10 + x7
val x13 = x10 < x11
val x30 = x10 * x2
val x31 = x30 + x11
val x84 = if (x13) {
val x14 = x10 + 1
val x15 = x14 == x11
val x41 = if (x15) {
val x16 = x0(x10)
val x27 = x16._1
val x28 = x16._2
val x29 = (x27,0,x28)
val x32 = x4(x31) = x29
val x33 = x12
val x35 = x33._2
val x37 = 0 < x35
val x38 = if (x37) {
x29
} else {
x33
}
x12 = x38
()
} else {
()
}
val x82 = if (x13) {
val x20 = if (x17) {
x14
} else {
val x18 = x11 - 0
val x19 = java.lang.Math.max(x14, x18)
x19
}
val x24 = if (x17) {
val x21 = x11 - 1
x21
} else {
val x21 = x11 - 1
val x22 = x10 + 0
val x23 = java.lang.Math.min(x21, x22)
x23
}
val x25 = x24 + 1
val x26 = x20 < x25
val x80 = if (x26) {
var x43 : Int = x20
val x78 = while (x43 < x25) {
val x44 = x10 < x43
val x76 = if (x44) {
val x45 = x30 + x43
val x46 = x4(x45)
val x47 = x43 < x11
val x74 = if (x47) {
val x48 = x43 * x2
val x49 = x48 + x11
val x50 = x4(x49)
val x51 = (x46,x50)
val x52 = x51._1
val x53 = x51._2
val x54 = x52._1
val x55 = x52._2
val x56 = x52._3
val x57 = x53._1
val x58 = x53._2
val x59 = x53._3
val x60 = x55 + x58
val x61 = x54 * x56
val x62 = x61 * x59
val x63 = x60 + x62
val x64 = (x54,x63,x59)
val x65 = x4(x31) = x64
val x66 = x12
val x68 = x66._2
val x70 = x63 < x68
val x71 = if (x70) {
x64
} else {
x66
}
x12 = x71
()
} else {
()
}
x74
} else {
()
}
x76
x43 = x43 + 1
}
x78
} else {
()
}
x80
} else {
()
}
()
} else {
()
}
val x85 = x12
val x86 = x4(x31) = x85
x86
x10 = x10 + 1
}
x88
x7 = x7 + 1
}
val x91 = 0 * x2
val x92 = x91 + x1
val x93 = x4(x92)
x93
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
(10,7500,50)

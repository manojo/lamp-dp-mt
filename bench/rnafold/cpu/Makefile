OS := $(uname -s)

# project: RNAfold ==================================================================
PROGNAME    = RNAfold
# adpc base ============================================================================
PREFIX      = /usr/local

# compiler and linker flags ============================================================

ifeq ($(OS),SunOS)
LDFLAGS_EXTRA = -R/vol/gnu/lib -L/vol/gnu/lib -lcurses
endif

# LDFLAGS = -R/vol/gnu/lib -L/vol/gnu/lib
# CC = purify gcc -g
CC = gcc-mp-4.7

# modules generated by adpc ============================================================
ADPCMODULES = RNAfold_mfe.cu

# some paths ===========================================================================
BINPATH    = $(PREFIX)/bin
PACKPATH   = $(PREFIX)/share/adpc/lib/distr
ADPC       = $(BINPATH)/adpc
ADPCOMPILE = $(BINPATH)/adpcompile
GENMAN     = $(BINPATH)/man2c
SHARELIB   = $(PREFIX)/share/adpc/src

CFLAGS = -O2
CPPFLAGS = -I.

# standard target: binary ==============================================================
all: $(PROGNAME) # manual
	echo "No problems detected. Type ./RNAfold to start."

adplib.o: adplib.c config.h options.h
	$(CC) $(CPPFLAGS) $(CFLAGS) -c adplib.c

rnalib.o: rnalib.c options.h
	$(CC) $(CPPFLAGS) $(CFLAGS) -c rnalib.c

RNALIB  = rnalib.o
LIBFLAG = -l rna
CUDAFLAG =

$(PROGNAME).o: config.h $(PROGNAME)-man.c $(PROGNAME).c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(PROGNAME).c

# targets for adpc =====================================================================
# ======================================================================================

#targets for algebra mfe
RNAfold_mfe.adpc: RNAfold.lhs RNAfold.xml
	$(ADPCOMPILE) -c $< -al mfe enum -cs mfe -alpp pp -O -lcf -ta bt -bt so -gc cc  -iuc -cto -tadd 3 -taddc 30  -W -o $@

RNAfold_mfe.c: RNAfold_mfe.adpc RNAfold_mfe.sed
	sed -f RNAfold_mfe.sed $< > $@

RNAfold_mfe.o: RNAfold_mfe.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $<



# interface definition: RNAfold.xml =================================================
$(PROGNAME).xml: # (no dependencies)
	$(ADPC) $(LIBFLAG) $(CUDAFLAG) $(PROGNAME).lhs


# Main C Module: RNAfold.c ==========================================================
$(PROGNAME).c config.h options.h $(PROGNAME).pod $(PROGNAME).sed : $(PROGNAME).xml $(PROGNAME).lhs
	$(ADPC) $(LIBFLAG) $(CUDAFLAG) $(PROGNAME).xml


# linking it all together: RNAfold ==================================================
$(PROGNAME): $(PROGNAME).o RNAfold_mfe.o adplib.o $(RNALIB)
	$(CC) $(LDFLAGS) $(PROGNAME).o adplib.o $(RNALIB) \
              RNAfold_mfe.o $(LDFLAGS_EXTRA) -lreadline -lm -o $(PROGNAME)

# man-page and manual ====== ===============================================================
$(PROGNAME).1: $(PROGNAME).pod
	pod2man -c $(PROGNAME) -r $(PROGNAME) -q '<>' $(PROGNAME).pod  > $(PROGNAME).1

$(PROGNAME).tex: $(PROGNAME).pod
	pod2latex $(PROGNAME).pod

$(PROGNAME).pdf: $(PROGNAME).tex
	pdflatex $(PROGNAME).tex
	pdflatex $(PROGNAME).tex

$(PROGNAME).dvi: $(PROGNAME).tex
	latex $(PROGNAME).tex
	latex $(PROGNAME).tex

$(PROGNAME).ps: $(PROGNAME).dvi
	dvips $(PROGNAME).dvi -o $(PROGNAME).ps

$(PROGNAME).2.ps: $(PROGNAME).ps
	psnup -n 2 $(PROGNAME).ps $(PROGNAME).2.ps

manual: $(PROGNAME).1 $(PROGNAME).pdf $(PROGNAME).ps $(PROGNAME).2.ps

# temporary .txt file for interactive help mode generation: RNAfold.txt =============
$(PROGNAME).txt: $(PROGNAME).pod
	pod2text -q '<>' $(PROGNAME).pod > $(PROGNAME).txt

# interactive help mode (-H): RNAfold-man.c =========================================
$(PROGNAME)-man.c: $(PROGNAME).txt
	$(GENMAN) '1' $(PROGNAME).txt $(PROGNAME)-man.c

# clean up =============================================================================
clean:
	rm -f $(PROGNAME) *.o

# start from scratch ===================================================================
cleanall: clean
	  rm -rf $(PROGNAME).xml

# update interfacer libs ===============================================================
update: cleanall
	$(ADPC) $(LIBFLAG) $(CUDAFLAG) $(PROGNAME).lhs
	make


# make distribution: ===================================================================
DISTFILES = src/Makefile.am man/Makefile.am configure.ac Makefile.am README COPYING AUTHORS examples/Makefile.am

packagedir:
	cp -a $(PACKPATH)/ $(PROGNAME)-distr

$(DISTFILES): packagedir $(PROGNAME).sed
	sed -f $(PROGNAME).sed <$(PROGNAME)-distr/$@ > adpc_sed_temp
	mv adpc_sed_temp $(PROGNAME)-distr/$@

distdir:  $(DISTFILES) $(PROGNAME).c $(PROGNAME)-man.c $(PROGNAME).1
	cp $(PROGNAME).c $(PROGNAME)-distr/src
	cp $(PROGNAME).h $(PROGNAME)-distr/src
	cp $(PROGNAME)-man.c $(PROGNAME)-distr/src
	cp $(ADPCMODULES) $(PROGNAME)-distr/src
	cp options.h $(PROGNAME)-distr/src
	cp $(PROGNAME).1 $(PROGNAME)-distr/man
	cp $(PROGNAME).pdf $(PROGNAME)-distr/

dist-gzip: distdir
	cd $(PROGNAME)-distr/ ; autoheader ; aclocal ; autoconf ; automake -a -i --foreign
	cd $(PROGNAME)-distr/ ; ./configure
	cd $(PROGNAME)-distr/ ; make dist-gzip
	mv $(PROGNAME)-distr/*.tar.gz .
	rm -rf $(PROGNAME)-distr/

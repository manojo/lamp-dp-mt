system prodmat1 (a : {i,j | 0<=i<=3; 0<=j<=3} of boolean; 
                 b : {i | 0<=i<=3} of boolean)
       returns  (c : {i | 0<=i<=3} of boolean);
var
  B11 : {t,p | p<=t<=p+3; 0<=p<=1} of boolean;
  B12 : {t,p | p<=t<=p+3; 2<=p<=3} of boolean;
  A : {t,p | p<=t<=p+3; 0<=p<=3} of boolean;
  C : {t,p | p-1<=t<=p+3; 0<=p<=3} of boolean;
  loadC : {t,p | p-1<=t<=p+3; 0<=p<=3} of boolean;
let
  B11[t,p] = 
      case
        {| 0<=t<=3; p=0} : b[t-p];
        {| 1<=t<=4; p=1} : B11[t-1,p-1];
      esac;
  B12[t,p] = 
      case
        {| 2<=t<=5; p=2} : B11[t-1,p-1];
        {| 3<=t<=6; p=3} : B12[t-1,p-1];
      esac;
  A[t,p] = a[p,t-p];
  C[t,p] = 
      case
        {| t=p-1; 0<=p<=3} : (if (loadC) then False[] else True[]);
        {| p<=t<=p+3; 0<=p<=1} : 
           (if (not loadC) then C[t-1,p] + A * B11 else False[]);
        {| p<=t<=p+3; 2<=p<=3} : 
           (if (not loadC) then C[t-1,p] + A * B12 else False[]);
      esac;
  loadC[t,p] = 
      case
        {| t=p-1; 0<=p<=3} : True[];
        {| p<=t<=p+3; 0<=p<=3} : False[];
      esac;
  c[i] = C[i+3,i];
tel;

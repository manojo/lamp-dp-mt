-- Alphard programm  for the big mux of the first  
-- cell of the spolisation circuit.

system multiplex:{Tinit,Duration| Tinit>=0; Duration > 1}
  (RRlam1,RRx1,RRy1 : {t|Tinit<=t<=Tinit+Duration-1} of integer; 
	RRlam2,RRx2,RRy2 : {t|Tinit+1<=t<=Tinit+Duration-1} of integer;
	ck2 :  {t|Tinit<=t<=Tinit+Duration-1} of boolean )
  returns (Olam1,Olam2,Ox,Oy : {t|Tinit<=t<=Tinit+Duration-1} of integer);
let
Olam1[t] = if (ck2[t]) then
	case 
	{| Tinit+Duration>=t>= Tinit}  : RRlam1[t];
	{| t=Tinit+Duration+1} : False[];
	esac
	else
	case 
	{| t=Tinit} : False[];
	{| Tinit+Duration+1>=t>= Tinit+1} :RRlam2[t];
	esac;
	

Olam2[t] = 0 [];

Ox[t] = if (ck2[t]) then
	case 
	{| Tinit+Duration>=t>= Tinit}  : RRx1[t];
	{| t=Tinit+Duration+1} : False[];
	esac
	else
	case 
	{| t=Tinit} : False[];
	{| Tinit+Duration+1>=t>= Tinit+1} :RRx2[t];
	esac;
	
Oy[t] = if (ck2[t]) then
	case 
	{| Tinit+Duration>=t>= Tinit}  : RRy1[t];
	{| t=Tinit+Duration+1} : False[];
	esac
	else
	case 
	{| t=Tinit} : False[];
	{| Tinit+Duration+1>=t>= Tinit+1} :RRy2[t];
	esac;
tel;



/* system foo */

/* C-Code generated by Alpha Code Generator version 1.2 */

#include <math.h>
typedef struct { int value;
		 int computed; } intvar;
typedef struct { int value;
		 int computed; } boolvar;
typedef struct { double value;
		 int computed; } realvar;
double atof();
int    atoi();

#define min(x,y) ((x)<(y)?(x):(y))
#define max(x,y) ((x)>(y)?(x):(y))
#define INFINITY 0x7fffffff

/* parameters */
#define n 3
#define m 5

/* no input variables */

/* output variables */
intvar  _R[25];
#define R(i,j)	_R[(i)+5*(j)-6]

/* no local variables */

/* --let equations */
int compute_R(i,j)
int i,j;
{
  intvar *tmp;
/* printf("Computing: R[%d,%d]\n" ,i,j); */
  tmp = &(R(i,j));
  if (!tmp->computed) {
          tmp->value = -2;
     tmp->computed = 1;}
  return tmp->value;
}

int main()
{
   int j, i ;
   
   for (i=1; i<=n-1; i++)
   {  if ( -i+n-1>=0 )
      {  for (j=1; j<=m; j++)
         {  printf("R[%d,%d]= %d\n", i,j, compute_R(i,j) );
         }
      }
   }
}

(* ALPHA Tree produced by read_alpha v.3.3.4 (Doran) *){
Alpha`system["pdscal",
    (* parameter space *)
    Alpha`domain[0, {}, {
        Alpha`pol[1, 1, 0, 0, {
            {1, 1}},{
            {1, 1}}]}],
    { (* input variables *)
    Alpha`decl["V", Alpha`real, 
        Alpha`domain[2, {"i", "p"}, {
            Alpha`pol[3, 2, 1, 0, {
                {0, 0, 1, -2},
                {1, 1, 0, -1},
                {1, -1, 0, 3}},{
                {1, 3, 2, 1},
                {1, 1, 2, 1}}],
            Alpha`pol[3, 2, 1, 0, {
                {0, 0, 1, -1},
                {1, 1, 0, -1},
                {1, -1, 0, 4}},{
                {1, 4, 1, 1},
                {1, 1, 1, 1}}]}]], 
    Alpha`decl["pivot", Alpha`real, 
        Alpha`domain[0, {}, {
            Alpha`pol[1, 1, 0, 0, {
                {1, 1}},{
                {1, 1}}]}]]},
    { (* output variables *)
    Alpha`decl["Vdiv", Alpha`real, 
        Alpha`domain[2, {"i", "p"}, {
            Alpha`pol[3, 2, 1, 0, {
                {0, 0, 1, -2},
                {1, 1, 0, -1},
                {1, -1, 0, 3}},{
                {1, 3, 2, 1},
                {1, 1, 2, 1}}],
            Alpha`pol[3, 2, 1, 0, {
                {0, 0, 1, -1},
                {1, 1, 0, -1},
                {1, -1, 0, 4}},{
                {1, 4, 1, 1},
                {1, 1, 1, 1}}]}]]},
    { (* local variables *)},
    { (* let *)
    Alpha`equation["Vdiv", 
        Alpha`case[{
            Alpha`restrict[
                Alpha`domain[2, {"i", "p"}, {
                    Alpha`pol[2, 3, 0, 1, {
                        {1, 0, -1, 1},
                        {1, 0, 0, 1}},{
                        {0, 1, 0, 0},
                        {1, 0, -1, 0},
                        {1, 0, 1, 1}}]}], 
                Alpha`affine[Alpha`var["V"], 
                    Alpha`matrix[3, 3, {"i", "p"}, {
                        {1, 0, 0},
                        {0, 1, 0},
                        {0, 0, 1}}]]], 
            Alpha`restrict[
                Alpha`domain[2, {"i", "p"}, {
                    Alpha`pol[2, 2, 1, 1, {
                        {0, 0, 1, -2},
                        {1, 0, 0, 1}},{
                        {0, 1, 0, 0},
                        {1, 0, 2, 1}}]}], 
                Alpha`case[{
                    Alpha`restrict[
                        Alpha`domain[2, {"i", "p"}, {
                            Alpha`pol[2, 3, 0, 1, {
                                {1, 1, 0, -3},
                                {1, -1, 0, 4}},{
                                {0, 0, 1, 0},
                                {1, 3, 0, 1},
                                {1, 4, 0, 1}}]}], 
                        Alpha`binop[Alpha`div, 
                            Alpha`affine[Alpha`var["V"], 
                                Alpha`matrix[3, 3, {"i", "p"}, {
                                    {1, 0, 0},
                                    {0, 1, 0},
                                    {0, 0, 1}}]], 
                            Alpha`affine[Alpha`var["pivot"], 
                                Alpha`matrix[1, 3, {"i", "p"}, {
                                    {0, 0, 1}}]]]], 
                    Alpha`restrict[
                        Alpha`domain[2, {"i", "p"}, {
                            Alpha`pol[2, 3, 0, 1, {
                                {1, 1, 0, -1},
                                {1, -1, 0, 2}},{
                                {0, 0, 1, 0},
                                {1, 1, 0, 1},
                                {1, 2, 0, 1}}]}], 
                        Alpha`affine[Alpha`var["V"], 
                            Alpha`matrix[3, 3, {"i", "p"}, {
                                {1, 0, 0},
                                {0, 1, 0},
                                {0, 0, 1}}]]]}]], 
            Alpha`restrict[
                Alpha`domain[2, {"i", "p"}, {
                    Alpha`pol[2, 3, 0, 1, {
                        {1, 0, 1, -3},
                        {1, 0, 0, 1}},{
                        {0, 1, 0, 0},
                        {1, 0, 1, 0},
                        {1, 0, 3, 1}}]}], 
                Alpha`binop[Alpha`div, 
                    Alpha`affine[Alpha`var["V"], 
                        Alpha`matrix[3, 3, {"i", "p"}, {
                            {1, 0, 0},
                            {0, 1, 0},
                            {0, 0, 1}}]], 
                    Alpha`affine[Alpha`var["pivot"], 
                        Alpha`matrix[1, 3, {"i", "p"}, {
                            {0, 0, 1}}]]]]}]]}]
}

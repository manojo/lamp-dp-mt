(* ALPHA Tree produced by read_alpha v.3.3.4 (Doran) *){
Alpha`system["foo",
    (* parameter space *)
    Alpha`domain[2, {"n", "m"}, {
        Alpha`pol[3, 3, 0, 0, {
            {1, 1, 0, -2},
            {1, 0, 1, -1},
            {1, 0, 0, 1}},{
            {1, 0, 1, 0},
            {1, 1, 0, 0},
            {1, 2, 1, 1}}]}],
    { (* input variables *)},
    { (* output variables *)
    Alpha`decl["R", Alpha`integer, 
        Alpha`domain[4, {"i", "j", "n", "m"}, {
            Alpha`pol[5, 5, 0, 0, {
                {1, 1, 0, 0, 0, -1},
                {1, -1, 0, 1, 0, -1},
                {1, 0, 1, 0, 0, -1},
                {1, 0, -1, 0, 1, 0},
                {1, 0, 0, 0, 0, 1}},{
                {1, 0, 0, 0, 1, 0},
                {1, 0, 1, 0, 1, 0},
                {1, 0, 0, 1, 0, 0},
                {1, 1, 0, 1, 0, 0},
                {1, 1, 1, 2, 1, 1}}],
            Alpha`pol[5, 5, 0, 0, {
                {1, 1, 0, -1, 0, -1},
                {1, -1, 0, 2, 0, -1},
                {1, 0, 1, 0, 0, -1},
                {1, 0, -1, 0, 1, 0},
                {1, 0, 0, 0, 0, 1}},{
                {1, 0, 0, 0, 1, 0},
                {1, 0, 1, 0, 1, 0},
                {1, 1, 0, 1, 0, 0},
                {1, 2, 0, 1, 0, 0},
                {1, 3, 1, 2, 1, 1}}]}]]},
    { (* local variables *)},
    { (* let *)
    Alpha`equation["R", 
        Alpha`unop[Alpha`neg, 
            Alpha`affine[Alpha`const[2], 
                Alpha`matrix[1, 5, {"i", "j", "n", "m"}, {
                    {0, 0, 0, 0, 1}}]]]]}]
}

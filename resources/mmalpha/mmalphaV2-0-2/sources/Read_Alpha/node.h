/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Wed Jul 14 09:43:05 1999
 */
#ifndef _node_
#define _node_
#if __STDC__

extern node *add_id_to_list ( node *n, node *e );
extern node *add_to_front ( node *e, node *n );
extern node *add_to_list ( node *n, node *e );
extern void all_old_nodes ( void );
extern void check_no_param ( node *l, node *p );
extern void check_no_variable ( node *l, node *p );
extern node *convert_constraints ( node *n, int dim, int dim2 );
extern node *convert_matrix ( node *n );
extern node *convert_suite ( node *s );
extern node *declare_vars ( node *ids, node *t, varclass iot, node *d );
extern node *get_indices ( node *d, node *n, node *p );
extern int id_lookup ( node *d, node *n );
extern int id_strcmp ( const char *a, const char *b );
extern void keep_list ( node *a );
extern void keep_node ( node *n );
extern void keep_tree ( node *n );
extern int matrix_equal ( Value **m1, Value **m2, int NbRows, int NbCols );
extern int Matrix_is_Identity ( Matrix *m );
extern node *merge_list ( node *a, node *b );
extern node *new_id ( char *s );
extern node *new_list ( node *e );
extern node *new_node ( nodetype t );
extern void old_node ( node *n );
extern void old_pol_node ( node *n );
extern void param_lookup ( node *p, node *n );
extern void preallocate_nodes ( int n );
extern void print_alpha ( node *n, int t );
extern void print_var ( node *n, node *d );
extern void print_var_alpha ( node *n, node *d );
extern node *search_list ( node *a, char *s );
extern int var_equal ( node *v1, node *v2, node *d );

#else /* __STDC__ */

extern node *add_id_to_list (/* node *n, node *e */);
extern node *add_to_front (/* node *e, node *n */);
extern node *add_to_list (/* node *n, node *e */);
extern void all_old_nodes (/* void */);
extern void check_no_param (/* node *l, node *p */);
extern void check_no_variable (/* node *l, node *p */);
extern node *convert_constraints (/* node *n, int dim, int dim2 */);
extern node *convert_matrix (/* node *n */);
extern node *convert_suite (/* node *s */);
extern node *declare_vars (/* node *ids, node *t, varclass iot, node *d */);
extern node *get_indices (/* node *d, node *n, node *p */);
extern int id_lookup (/* node *d, node *n */);
extern int id_strcmp (/* const char *a, const char *b */);
extern void keep_list (/* node *a */);
extern void keep_node (/* node *n */);
extern void keep_tree (/* node *n */);
extern int matrix_equal (/* int **m1, int **m2, int NbRows, int NbCols */);
extern int Matrix_is_Identity (/* Matrix *m */);
extern node *merge_list (/* node *a, node *b */);
extern node *new_id (/* char *s */);
extern node *new_list (/* node *e */);
extern node *new_node (/* nodetype t */);
extern void old_node (/* node *n */);
extern void old_pol_node (/* node *n */);
extern void param_lookup (/* node *p, node *n */);
extern void preallocate_nodes (/* int n */);
extern void print_alpha (/* node *n, int t */);
extern void print_var (/* node *n, node *d */);
extern void print_var_alpha (/* node *n, node *d */);
extern node *search_list (/* node *a, char *s */);
extern int var_equal (/* node *v1, node *v2, node *d */);

#endif /* __STDC__ */
#endif /* _node_ */

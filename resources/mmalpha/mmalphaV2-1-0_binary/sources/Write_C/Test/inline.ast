(* ALPHA Tree produced by read_alpha v.3.3.4 (Doran) *){
Alpha`system["dotprod1",
    (* parameter space *)
    Alpha`domain[1, {"N"}, {
        Alpha`pol[2, 2, 0, 0, {
            {1, 1, -1},
            {1, 0, 1}},{
            {1, 1, 0},
            {1, 1, 1}}]}],
    { (* input variables *)
    Alpha`decl["in", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -2},
                {1, -1, 0, 0, 3},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 2, 1, 1, 1},
                {1, 3, 1, 1, 1}}],
            Alpha`pol[4, 3, 1, 0, {
                {0, 0, 1, 0, -1},
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 3},
                {1, 0, 0, 1, -1}},{
                {1, 0, 0, 1, 0},
                {1, 3, 1, 1, 1},
                {1, 1, 1, 1, 1}}]}]]},
    { (* output variables *)
    Alpha`decl["out", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[3, 2, 2, 1, {
                {0, 1, 0, 0, -1},
                {0, 0, 1, -1, -1},
                {1, 0, 0, 0, 1}},{
                {0, 0, 1, 1, 0},
                {1, 1, 0, -1, 1}}]}]]},
    { (* local variables *)
    Alpha`decl["aux0", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -2},
                {1, -1, 0, 0, 3},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 2, 1, 1, 1},
                {1, 3, 1, 1, 1}}],
            Alpha`pol[4, 3, 1, 0, {
                {0, 0, 1, 0, -1},
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 3},
                {1, 0, 0, 1, -1}},{
                {1, 0, 0, 1, 0},
                {1, 3, 1, 1, 1},
                {1, 1, 1, 1, 1}}],
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -2},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 2, 2, 1}}]}]], 
    Alpha`decl["aux1", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1}}]}]], 
    Alpha`decl["aux2", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -2},
                {1, 0, -1, 1, 1},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 2, 1, 1}}]}]], 
    Alpha`decl["recinter", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -2},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 2, 2, 1}}]}]], 
    Alpha`decl["in_addmul1", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 3},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1},
                {1, 3, 1, 1, 1}}]}]], 
    Alpha`decl["out_addmul1", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1}}]}]], 
    Alpha`decl["aux1_addmul1", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1}}]}]], 
    Alpha`decl["aux2_addmul1", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 2},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1},
                {1, 2, 1, 1, 1}}]}]], 
    Alpha`decl["in_mul2", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 2},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1},
                {1, 2, 1, 1, 1}}]}]], 
    Alpha`decl["out_mul2", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1}}]}]], 
    Alpha`decl["in_add3", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 4, 0, 0, {
                {1, 1, 0, 0, -1},
                {1, -1, 0, 0, 2},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1},
                {1, 2, 1, 1, 1}}]}]], 
    Alpha`decl["out_add3", Alpha`real, 
        Alpha`domain[3, {"arg", "i", "N"}, {
            Alpha`pol[4, 3, 1, 0, {
                {0, 1, 0, 0, -1},
                {1, 0, 1, 0, -1},
                {1, 0, -1, 1, 0},
                {1, 0, 0, 0, 1}},{
                {1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0},
                {1, 1, 1, 1, 1}}]}]]},
    { (* let *)
    Alpha`equation["aux0", 
        Alpha`case[{
            Alpha`restrict[
                Alpha`domain[3, {"arg", "i", "N"}, {
                    Alpha`pol[4, 4, 0, 0, {
                        {1, 1, 0, 0, -2},
                        {1, -1, 0, 0, 3},
                        {1, 0, 1, 0, -1},
                        {1, 0, -1, 1, 0}},{
                        {1, 0, 0, 1, 0},
                        {1, 0, 1, 1, 0},
                        {1, 2, 1, 1, 1},
                        {1, 3, 1, 1, 1}}],
                    Alpha`pol[4, 3, 1, 0, {
                        {0, 0, 1, 0, -1},
                        {1, 1, 0, 0, -1},
                        {1, -1, 0, 0, 3},
                        {1, 0, 0, 1, -1}},{
                        {1, 0, 0, 1, 0},
                        {1, 3, 1, 1, 1},
                        {1, 1, 1, 1, 1}}]}], Alpha`var["in"]], 
            Alpha`restrict[
                Alpha`domain[3, {"arg", "i", "N"}, {
                    Alpha`pol[4, 3, 1, 0, {
                        {0, 1, 0, 0, -1},
                        {1, 0, 1, 0, -2},
                        {1, 0, -1, 1, 0},
                        {1, 0, 0, 0, 1}},{
                        {1, 0, 0, 1, 0},
                        {1, 0, 1, 1, 0},
                        {1, 1, 2, 2, 1}}]}], Alpha`var["recinter"]]}]], 
    Alpha`equation["in_addmul1", Alpha`var["aux0"]], 
    Alpha`equation["in_mul2", 
        Alpha`restrict[
            Alpha`domain[3, {"arg", "i", "N"}, {
                Alpha`pol[4, 4, 0, 0, {
                    {1, 1, 0, 0, -1},
                    {1, -1, 0, 0, 2},
                    {1, 0, 1, 0, -1},
                    {1, 0, -1, 1, 0}},{
                    {1, 0, 0, 1, 0},
                    {1, 0, 1, 1, 0},
                    {1, 1, 1, 1, 1},
                    {1, 2, 1, 1, 1}}]}], 
            Alpha`affine[Alpha`var["in_addmul1"], 
                Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                    {1, 0, 0, 1},
                    {0, 1, 0, 0},
                    {0, 0, 1, 0},
                    {0, 0, 0, 1}}]]]], 
    Alpha`equation["out_mul2", 
        Alpha`binop[Alpha`mul, 
            Alpha`affine[Alpha`var["in_mul2"], 
                Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                    {1, 0, 0, 0},
                    {0, 1, 0, 0},
                    {0, 0, 1, 0},
                    {0, 0, 0, 1}}]], 
            Alpha`affine[Alpha`var["in_mul2"], 
                Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                    {1, 0, 0, 1},
                    {0, 1, 0, 0},
                    {0, 0, 1, 0},
                    {0, 0, 0, 1}}]]]], 
    Alpha`equation["aux1_addmul1", Alpha`var["out_mul2"]], 
    Alpha`equation["aux2_addmul1", 
        Alpha`case[{
            Alpha`restrict[
                Alpha`domain[3, {"arg", "i", "N"}, {
                    Alpha`pol[4, 3, 1, 0, {
                        {0, 1, 0, 0, -1},
                        {1, 0, 1, 0, -1},
                        {1, 0, -1, 1, 0},
                        {1, 0, 0, 0, 1}},{
                        {1, 0, 0, 1, 0},
                        {1, 0, 1, 1, 0},
                        {1, 1, 1, 1, 1}}]}], Alpha`var["in_addmul1"]], 
            Alpha`restrict[
                Alpha`domain[3, {"arg", "i", "N"}, {
                    Alpha`pol[4, 3, 1, 0, {
                        {0, 1, 0, 0, -2},
                        {1, 0, 1, 0, -1},
                        {1, 0, -1, 1, 0},
                        {1, 0, 0, 0, 1}},{
                        {1, 0, 0, 1, 0},
                        {1, 0, 1, 1, 0},
                        {1, 2, 1, 1, 1}}]}], 
                Alpha`affine[Alpha`var["aux1_addmul1"], 
                    Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                        {1, 0, 0, -1},
                        {0, 1, 0, 0},
                        {0, 0, 1, 0},
                        {0, 0, 0, 1}}]]]}]], 
    Alpha`equation["in_add3", Alpha`var["aux2_addmul1"]], 
    Alpha`equation["out_add3", 
        Alpha`binop[Alpha`add, 
            Alpha`affine[Alpha`var["in_add3"], 
                Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                    {1, 0, 0, 0},
                    {0, 1, 0, 0},
                    {0, 0, 1, 0},
                    {0, 0, 0, 1}}]], 
            Alpha`affine[Alpha`var["in_add3"], 
                Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                    {1, 0, 0, 1},
                    {0, 1, 0, 0},
                    {0, 0, 1, 0},
                    {0, 0, 0, 1}}]]]], 
    Alpha`equation["out_addmul1", Alpha`var["out_add3"]], 
    Alpha`equation["aux1", Alpha`var["out_addmul1"]], 
    Alpha`equation["aux2", 
        Alpha`affine[Alpha`var["aux1"], 
            Alpha`matrix[4, 4, {"arg", "i", "N"}, {
                {1, 0, 0, 0},
                {0, 1, 0, -1},
                {0, 0, 1, 0},
                {0, 0, 0, 1}}]]], 
    Alpha`equation["recinter", 
        Alpha`restrict[
            Alpha`domain[3, {"arg", "i", "N"}, {
                Alpha`pol[4, 3, 1, 0, {
                    {0, 1, 0, 0, -1},
                    {1, 0, 1, 0, -2},
                    {1, 0, -1, 1, 0},
                    {1, 0, 0, 0, 1}},{
                    {1, 0, 0, 1, 0},
                    {1, 0, 1, 1, 0},
                    {1, 1, 2, 2, 1}}]}], Alpha`var["aux2"]]], 
    Alpha`equation["out", 
        Alpha`restrict[
            Alpha`domain[3, {"arg", "i", "N"}, {
                Alpha`pol[3, 2, 2, 1, {
                    {0, 1, 0, 0, -1},
                    {0, 0, 1, -1, -1},
                    {1, 0, 0, 0, 1}},{
                    {0, 0, 1, 1, 0},
                    {1, 1, 0, -1, 1}}]}], Alpha`var["aux2"]]]}]
}

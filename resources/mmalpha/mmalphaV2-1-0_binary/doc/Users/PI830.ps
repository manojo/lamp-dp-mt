%!PS-Adobe-2.0
%%Creator: dvips 5.46 Copyright 1986-91 Radical Eye Software
%%Title: irisa.dvi
%%Pages: 12 1
%%BoundingBox: 0 0 596 843
%%DocumentFonts: Helvetica
%%EndComments
%%BeginProcSet: texc.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id ch-image N
/rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{rc 0 ne{rc 1 sub
/rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get /gp gp 1 add N dup 18 mod
S 18 idiv pl S get exec}loop}B /adv{cp add /cp X}B /chg{rw cp id gp 4 index
getinterval putinterval dup gp add /gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw
cp 2 copy get dup 0 eq{pop 1}{dup 255 eq{pop 254}{dup dup add 255 and S 1 and
or}ifelse}ifelse put 1 adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255
eq{pop 127}{dup 2 idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2
index string putinterval adv}B /set{rw cp fillstr 0 4 index getinterval
putinterval adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv
1 chg}bind{adv 1 chg nd}bind{1 add chg}bind{1 add chg nd}bind{adv lsh}bind{
adv lsh nd}bind{adv rsh}bind{adv rsh nd}bind{1 add adv}bind{/rc X nd}bind{1
add set}bind{1 add clr}bind{adv 2 chg}bind{adv 2 chg nd}bind{pop nd}bind]N /D{
/cc X dup type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S
ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr
ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI
save N @rigin 0 0 moveto}N /eop{clear SI restore showpage userdict /eop-hook
known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}if
/VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE S 1
string dup 0 3 index put cvn put}for}N /p /show load N /RMat[1 0 0 -1 0 0]N
/BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
statusdict begin /product where{pop product 0 7 getinterval(Display)eq}{false}
ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley scale 1 1 false RMat{
BDot}imagemask grestore}}ifelse B /a{moveto}B /delta 0 N /tail{dup /delta X 0
rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B
/f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4
w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p
4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B /eos{clear SS
restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{/foo X[1 0 foo 1 0 0]
TransFont}N /ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0
0]TransFont}N /TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop /por true def por{noflips{
pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}
if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90
rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub
neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg
sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll
add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm
restore}N end}if}if}N /normalscale{Resolution 72 div VResolution 72 div neg
scale magscale{DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{
/psf$SavedState save N userdict maxlength dict begin /magscale false def
normalscale currentpoint TR /psf$ury psfts /psf$urx psfts /psf$lly psfts
/psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X /psf$cx X
/psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div
N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury
sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll
moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath moveto}N
/endTexFig{end psf$SavedState restore}N /@beginspecial{SDict begin
/SpecialSave save N gsave normalscale currentpoint TR @SpecialDefaults}N
/@setspecial{CLIP{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0
rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate BBcalc{rwi urx llx
sub div dup scale llx neg lly neg TR}if /showpage{}N /erasepage{}N /copypage{}
N newpath}N /@endspecial{grestore clear SpecialSave restore end}N /@defspecial
{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B
/np{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X /startangle
X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad yrad scale 0 0 1
startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa 3 68 df<1418A3143CA2147EA314BF149FA29038
010F80A390380207C0A201067FEB0403A201087F1401A2496C7EA349137C90383FFFFC497F9038
40003EA249133F81A248C7EA0F80A348EC07C05AD81F80EB0FE0D8FFF090B5FCA228297EA82D>
65 D<B67E15F03907E000FC0003147E81ED1F80150FA216C0A51680151F1600153E5D4A5A90B5
12E09038E000F8153E81ED0F80ED07C016E0150316F0A6ED07E0A2ED0FC0ED1F80ED3F00000714
FEB612F815E024297EA82A>I<9138FF80100107EBE03090391FC0787090387E000C01F8EB02F0
4848130148481300485A4848147048C81230A2123E1610127EA2007C150012FCA9127C127E1610
123EA27E16206C7E6C6C14406C6C14C06C6C14806C6CEB0300017E130690381FC03C903807FFF0
0100138024297DA82B>I E /Fb 2 62 df<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8
FCB3A7151838387BB143>43 D<007FB812FEBAFCA3CCFCAEBAFCA36C17FE38167BA043>61
D E /Fc 2 111 df<13781318A21330A31207EA18E0EA30601260A2EAC0C0A213C81241EA62D0
EA3C700D117E9010>100 D<EA71F0EA9A18129C12981218EA3030A213321362EA606413380F0B
7E8A13>110 D E /Fd 2 51 df<120C123C12CC120CACEAFF8009107E8F0F>49
D<121FEA6180EA40C0EA806012C01200A213C0EA0180EA030012065AEA10201220EA7FC012FF0B
107F8F0F>I E /Fe 2 121 df<EA01E0EA1FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA3
127112E2A312621264121C0B237DA20F>108 D<3801E0F03806310C38081A1C0010133CEA201C
14181400C65AA45BA314083860E01012F0142038E1704038423080383C1F0016157E941C>120
D E /Ff 1 47 df<124012E0124003037D8208>46 D E /Fg 4 64 df<1306131E137EEA03FE12
1F12FFA2121F1203EA007E131E13060F0C7E8500>27 D<12C012F012FCEAFF8013F013FEA213F0
1380EAFC0012F012C00F0C678500>45 D<1206A3120FA3EA1F80A3EA3FC0A2EA7FE0A2EAFFF0A2
0C0F86A700>54 D<EAFFF0A2EA7FE0A2EA3FC0A2EA1F80A3EA0F00A31206A30C0F869000>63
D E /Fh 20 126 df<136013F0A7387FFFC0B512E0A26C13C03800F000A7136013147E9718>43
D<123C127E127FA3123F120F120E121E127C12F81270080C788518>I<EA7FFFB51280A26C1300
11047D8F18>I<EA01F0EA07FC487EEA1F1FEA1C0738380380007813C0EA7001A238E000E0A9EA
F001007013C0A2EA780300381380381C0700EA1F1FEA0FFE6C5AEA01F0131C7E9B18>48
D<127812FCA412781200A8127812FCA412780614779318>58 D<123C127EA4123C1200A8123812
7C127EA3123E120E121E123C127812F01260071A789318>I<387FFFC0B512E0A3C8FCA4B512E0
A36C13C0130C7E9318>61 D<126012F87E127E6C7E6C7EEA07E06C7EEA01FC6C7E133FEB1F80A2
EB3F0013FE485AEA03F0485AEA1FC0485A007EC7FC5A5A126011187D9918>I<EA7FF8EAFFFE6C
7E381C0F80EB03C0A2EB01E01300A214F01470A814F014E0A2130114C01303EB0F80387FFF0048
5AEA7FF8141C7F9B18>68 D<B512F0A3381C0070A41400A2130EA3EA1FFEA3EA1C0EA390C7FCA2
1438A5B512F8A3151C7F9B18>I<38FC01F8EAFE03A2383B06E0A4138EA2EA398CA213DCA3EA38
D8A213F81370A21300A638FE03F8A3151C7F9B18>77 D<387E07F038FF0FF8387F07F0381D81C0
A313C1121CA213E1A313611371A213311339A31319A2131D130DA3EA7F07EAFF87EA7F03151C7F
9B18>I<EA0FF8EA3FFE487EEA780FEA700700F01380EAE003B0EAF00700701300EA780FEA7FFF
6C5AEA0FF8111C7D9B18>I<3807F380EA1FFF5AEA7C1FEA7007EAF00312E0A290C7FC7E127812
3FEA1FF0EA0FFEEA01FF38001F80EB03C0EB01E01300A2126012E0130100F013C0EAFC07B51280
1400EAE7FC131C7E9B18>83 D<EA0380487EA36C5AC8FCA4EA7FC012FF127F1201AEB5FC148014
00111D7C9C18>105 D<1338137CA313381300A4EA0FFC121F120FEA001CB3A3133CEA6038EAF0
78EAFFF0EA7FE0EA3FC00E277E9C18>I<12FEA3120EA5EB3FF0137F133FEB0780EB0F00131E5B
5B5BEA0FF87F139C131EEA0E0FEB0780130314C038FFC7F8A3151C7F9B18>I<EB07E0133F137F
EBFC0013E0AB1201EA7FC0485AA26C7EEA01E01200AB13FCEB7FE0133F130713247E9F18>123
D<126012F0B3B012600424769F18>I<127CB47E7FEA07E01200AB7FEB7FC0EB3FE0A2EB7FC0EB
F0005BAB1207B45A5B007CC7FC13247E9F18>I E /Fi 3 111 df<120313801300C7FCA6121C12
241246A25A120C5AA31231A21232A2121C09177F960C>105 D<1318133813101300A6EA01C0EA
0220EA0430A2EA08601200A313C0A4EA0180A4EA630012E312C612780D1D80960E>I<EA383CEA
44C6EA47021246EA8E06120CA25B1218144013181480EA3008EB0F00120E7F8D15>110
D E /Fj 5 53 df<1330ABB512FCA238003000AB16187E931B>43 D<EA07C0EA1830EA3018EA70
1CEA600CA2EAE00EA9EA600CA2EA701CEA3018EA1C70EA07C00F157F9412>48
D<12035AB4FC1207B1EA7FF00C157E9412>I<EA0F80EA30E0EA4070EA8030EAC03812E0124012
001370A2136013C0EA0180EA03001206EA0C081208EA1018EA3FF0127F12FF0D157E9412>I<13
30A2137013F012011370120212041208121812101220124012C0EAFFFEEA0070A5EA03FE0F157F
9412>52 D E /Fk 4 34 df<1306130C131813301370136013C012011380120313005A1206120E
120C121CA212181238A312301270A65AB21270A612301238A31218121CA2120C120E120612077E
1380120113C012001360137013301318130C13060F4A788119>16 D<12C012607E7E121C120C7E
12077E1380120113C0120013E013601370A213301338A31318131CA6130EB2131CA613181338A3
13301370A2136013E013C012011380120313005A12065A121C12185A5A5A0F4A7F8119>I<1418
1430146014E014C0EB01801303EB07001306130E130C131C5BA25BA25BA212015BA2485AA31207
90C7FCA25A120EA2121EA3121CA2123CA412381278A8127012F0B3A812701278A81238123CA412
1CA2121EA3120EA2120F7EA27F1203A36C7EA27F1200A21370A27FA27F130C130E13061307EB03
801301EB00C014E0146014301418157C768121>32 D<12C012607E123812187E120E7E7E7F1201
7F6C7EA21370A27FA2133C131CA27FA3130F7FA214801303A214C0A31301A214E0A4130014F0A8
14701478B3A8147014F0A814E01301A414C0A21303A31480A213071400A25B130EA35BA2133C13
38A25BA25BA2485A5B120390C7FC5A120E120C5A123812305A5A157C7F8121>I
E /Fl 33 123 df<1238127C12FEA3127C123807077C8610>46 D<13181378EA01F812FFA21201
B3A7387FFFE0A213207C9F1C>49 D<EA03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A2
1301127CEA3803120014F0A2EB07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA07
00000E1338380FFFF05A5A5AB5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB
81F8A3EA1F0314F0120014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13
FE127EB4FCA314FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E0130113
03A21307130F131FA21337137713E7EA01C71387EA03071207120E120C12181238127012E0B512
FEA2380007E0A7EBFFFEA217207E9F1C>I<1470A214F8A3497EA2497EA3EB06FF80010E7FEB0C
3FA201187F141F01387FEB300FA201607F140701E07F90B5FCA239018001FCA200038090C7FCA2
0006147FA23AFFE00FFFF8A225227EA12A>65 D<B67E15E03907F001F86E7E157EA2157FA5157E
15FE5DEC03F890B55AA29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F8
15C022227EA128>I<B67E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8
A916F0A3ED07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>68
D<B512E0A23803F800B3ACB512E0A213227FA115>73 D<B512E0A2D807F0C7FCB31518A41538A2
1570A215F014011407B6FCA21D227EA122>76 D<B512FEECFFC03907F007F0EC01F86E7E157E15
7FA6157E5D4A5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803F
F8ED0FF027227EA12A>82 D<3801FC043807FF8C381F03FC383C007C007C133C0078131CA200F8
130CA27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003FEB03FFEB007F143F
A200C0131FA36C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<007FB61280A2
397E03F80F00781407007014030060140100E015C0A200C01400A400001500B3A20003B512F8A2
22227EA127>I<EA07FC381FFF80383F07C0EB03E0130114F0121E1200A2133FEA03FDEA1FC1EA
3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B>97 D<B4FCA2121FABEB0FE0EB
3FF8EBF07CEB801EEB001FEC0F80A215C0A81580141F01801300EBC03E381EE07C381C3FF83818
0FC01A237EA21F>I<EBFF80000713E0380F83F0EA1F03123E127E387C01E090C7FC12FCA6127C
127EA2003E13306C1360380FC0E03807FF803800FE0014167E9519>I<EB01FEA2EB003EABEA01
FC3807FFBE380F81FE381F007E003E133E127E127C12FCA8127CA26C137E001E13FE380F83BE39
07FF3FC0EA01FC1A237EA21F>I<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FC
A2B5FCA200FCC7FCA3127CA2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<
EB3F80EBFFC03801E3E0EA03C71207EA0F87EB83C0EB8000A6EAFFFCA2EA0F80B2EA7FF8A21323
7FA211>I<3803FC1E380FFF7F381F0F8F383E07CF383C03C0007C13E0A5003C13C0EA3E07381F
0F80EBFF00EA13FC0030C7FCA21238383FFF806C13F06C13F84813FCEA380048133E00F0131EA4
0078133C007C137C383F01F8380FFFE00001130018217E951C>I<B4FCA2121FABEB07E0EB1FF8
EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123F5AA37E121CC7FCA7B4
FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FB3ADEAFFE0A20B237EA210>108
D<3AFF07F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0FFE0FF
E0A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A167E
951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C137CA26C13F8
381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF8381FF07CEB803E497E
1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E
951F>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>114
D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF120138000F
80EAC007130312E0A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487EA41203A21207A212
0F123FB5FCA2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA238
1F003EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2390F800600A2
EBC00E0007130CEBE01C00031318A26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2
130CA25B1278EAFC3813305BEA69C0EA7F80001FC8FC1B207F951E>121
D<387FFFF0A2387C03E0387007C0EA600F38E01F8000C01300133E137EC65A5B485A00031330EA
07E013C0380F8070121F383F0060003E13E0EA7C03B5FCA214167E9519>I
E /Fm 15 122 df<1410143014381478A214F8A2EB017C143C1302A21304143EEB081EA21310A2
132080134090B5FCEB800FEA0100158000021307A25AA2000C14C0003E130F39FF807FFC1E1F7E
9E22>65 D<0007B5FC39007C01E090383C00F0157849133CA2151EA3151F5BA64848131E153EA3
153C157C4848137815F0A2EC01E0EC03C0EC07803907800F00143CB512E0201F7E9E23>68
D<3807FFFC38007C0790383C03C0EC01E0137815F0A415E0EBF00315C0EC0780EC0F00143CEBFF
F03801E030143880A3141E3803C03EA515023907801E049038C01F0839FFFC07F01F1F7E9E21>
82 D<EB3F04EBE0CC3801803C3803001C48131800061308120EA31400120FA213E0EA07FE3803
FF806C13C038007FE013071301EB00F0A3004013E0A314C0EA6001148038F00300EACE0EEA81F8
161F7D9E19>I<EA07F8EA0C0CEA1E061307121C1200A313FFEA07C7EA1E07EA3C0E127800F013
10A3131EEB2E2038784F40381F878014147D9317>97 D<1470EB03F013001470A214E0A6EB01C0
13F9EA0305EA0E03121CEA380138780380127012F0A438E00700A5EA700FEA301EEA186F380F8F
E014207C9F19>100 D<EB0780EB18C0EB31E01361EBE1C0EBC0001201A5485AEA7FF8EA0380A4
48C7FCA6120EA65A121EEAFFE013207E9F0E>102 D<EA01C0EA03E0A3EA01C0C7FCA6EA038012
1F12071203A2EA0700A6120EA65A121EEAFF800B1F7F9E0C>105 D<13E0120712011200A2EA01
C0A6EA0380A6EA0700A6120EA65A121EEAFFC00B207F9F0C>108 D<390387C07C391F98618639
07A072073903C03403EB80380007EB7807EB0070A5000EEBE00EA64848485A001EEBE01E3AFFCF
FCFFC022147E9326>I<38038F80381F90E0EA07A03803C0601380000713E01300A5380E01C0A6
381C0380001E13C038FFCFF815147E9319>I<13FCEA0387380E0180381C00C04813E0A24813F0
12F0A438E001E0A214C0130300F0138038700700EA380E6C5AEA07E014147D9317>I<EBE3E038
07EC383800F01CEBE01E140EEA01C0140FA53803801EA2141C143C14381470380740E0EB21C0EB
1F0090C7FCA3120EA4121EEAFFC0181D809319>I<EA01F2EA060EEA080612181302EA38041300
121EEA1FE0EA0FF0EA03F8EA003CEA401C130CA212601318EAE010EAD060EA8FC00F147E9312>
115 D<390FF83F803901E00E00EBC00C14083800E01814105CA26D5A13705CA20171C7FC133913
3A133E133C133813181310A25BA25BEA70C0EAF08000F1C8FC12E2127C191D809318>121
D E /Fn 12 104 df<B612C0A21A027C8B23>0 D<127012F8A3127005057C8D0D>I<00C0130C6C
131C007013386C13706C13E0380E01C000061380EA070338038700EA01CEEA00FC1378A213FCEA
01CEEA038738070380EA0601000E13C0381C00E048137048133848131C48130C16187A9623>I<
B57E14E0C71278141C8080801580140115C01400A714011580140315005C140E5C1478B512E014
80C9FCA7B61280A21A247C9C23>19 D<12C012F0123C120FEA03C0EA00F0133C130E6D7EEB01E0
EB0078141EEC0780EC01C0EC0780EC1E001478EB01E0EB0780010EC7FC133C13F0EA03C0000FC8
FC123C12F012C0C9FCA7B612C0A21A247C9C23>21 D<B57E14E0C71278141C80808015801401A2
15C01400A614011580A2140315005C140E5C1478B512E014801A1C7C9823>27
D<15C0A314011580140315005C140E5C1478EB03E0EB7F80D8FFFCC7FCA238007F80EB03E0EB00
78141C8080EC0380140115C01400A31A1B7C9823>30 D<1306B3A8B612F0A21C1C7D9B23>63
D<EB3FFF48B512E039071E0FF8000CEB01FC0038EB007C0070143EA200E0141FEA001C150F133C
A31338150E1378151E0170131CA201F013384913301570000114E04913C0EC030000031306495A
1430380703C048B4C7FCEA1FF0201F7F9E23>68 D<13FE3807FFC0381F01F03838003848131C00
60130C00E0130E481306B3171A7D991E>92 D<130F1338136013E0EA01C0AFEA0380EA0700121E
12F8121E1207EA0380EA01C0AFEA00E013601338130F102D7DA117>102
D<12F8121E1207EA0380EA01C0AFEA00E013601338130F1338136013E0EA01C0AFEA0380EA0700
121E12F8102D7DA117>I E /Fo 20 121 df<127012F812FCA212741204A31208A21210A21220
1240060E7C840D>59 D<EC01C0EC0780EC1E001478EB01E0EB0780010EC7FC133C13F0EA03C000
0FC8FC123C12F0A2123C120FEA03C0EA00F0133C130E6D7EEB01E0EB0078141EEC0780EC01C01A
1A7C9723>I<12E01278121EEA0780EA01E0EA0078131C130FEB03C0EB00F0143C140FEC03C0A2
EC0F00143C14F0EB03C0010FC7FC131C1378EA01E0EA0780001EC8FC127812E01A1A7C9723>62
D<1406A2140EA2141E143EA2145F144F148FEB010FA21302A213041308A20110138014071320EB
7FFFEB40071380A2EA0100120215C0481303120C001E130739FF807FFC1E1F7E9E22>65
D<90B512E090380F0078153C151C151E131EA449133CA2157815F090387803C090387FFF809038
7803C0EC01E09038F000F0A31570484813F0A315E03803C001EC03C01580EC0F003807801EB512
F01F1F7E9E22>I<ECFE02903807010490381C00CC0170133C5B48481318485A48C7FC5A000E14
10121E481400A212381278A3127012F0A300701480A36CEB0100140200185B6C5B6C1330380380
C0C6B4C7FC1F1F7E9E21>I<EBFFFCEB0F8091C7FCA3131EA45BA45BA45BA3154048481380A214
01150048485AA21406140E3807803CB512FC1A1F7E9E1F>76 D<397FFC1FF83907C003C0903880
0100A3380F0002A4001E5BA4485BA4485BA4485BA35C00705BA2D83003C7FCEA3804EA0C18EA07
E01D1F7C9E1F>85 D<EBF180380389C038070780EA0E03121C123C383807001278A3EAF00EA314
10EB1C20A2EA703CEB5C40EA308C380F078014147E9318>97 D<EA0780123FEA0700A4120EA45A
A213F0EA1D0CEA3A0E123CEA380FA21270A4EAE01EA3131C133C1338EA607013E0EA31C0EA1F00
10207E9F14>I<1478EB03F8EB0070A414E0A4EB01C0A213F1EA038938070780EA0E03121C123C
383807001278A3EAF00EA31410EB1C20A2EA703CEB5C40EA308C380F078015207E9F18>100
D<13E01201A2EA00C01300A7120E1213EA23801243A3EA87001207A2120EA25AA21320EA3840A3
1380EA1900120E0B1F7E9E10>105 D<14C0EB01E0A214C090C7FCA7131E1363EB43801383EA01
03A2380207001200A3130EA45BA45BA45BA21230EA78E0EAF1C0EA6380003EC7FC1328819E13>
I<EA01E0120FEA01C0A4485AA448C7FCA2EB01E0EB0610380E0870EB10F01320EB4060381C8000
001DC7FC121EEA1FC0EA38707FA2EB1C2038703840A3EB188012E038600F0014207E9F18>I<EA
03C0121FEA0380A4EA0700A4120EA45AA45AA45AA3127112E2A4126412380A207E9F0E>I<391E
07C07C39231861869038A032033843C034D980381380A23A87007007001207A3000EEBE00EA3ED
1C10261C01C01320153816401518263803801380D81801EB0F0024147E9328>I<381E07803823
18C0EBA0603843C0701380A2388700E01207A3380E01C0A3EB0382001C1384EB07041408130300
381310381801E017147E931B>I<3803C1E038046218EB741CEA0878EB701EA2EA10E01200A338
01C03CA3143838038078147014E0EBC1C038072380EB1E0090C7FCA2120EA45AA2EAFFC0171D81
9317>112 D<000F136038118070002113E013C01241EA4380388381C0EA0701A3380E0380A314
84EB0708120CA2380E0F10EA06133803E1E016147E931A>117 D<3803C1C0380C622038103470
EB38F012201460384070001200A35BA314203861C04012F1148012E238446300EA383C14147E93
1A>120 D E /Fp 53 123 df<91393FC0FF809139E0E38040903A0181E600E00103EBEC01EC00
DC4990381C00C0031813001538130EA35D90B7128090391C007003EE0700A315E0160E5BA34A48
5AA213701740EE3880EC0380A213E0EE1900ED000E4A90C7FC13C000011306A23831860E38798F
0C38F31E1838620C30383C07C02B29829F28>14 D<1206120F120E121C12381260124012800808
709F17>19 D<130113021304130813101320136013C0EA0180A2EA03005A1206120E120C121C12
181238A212301270A21260A212E0A25AAD12401260A212207EA27E102E79A113>40
D<13107F7F130613021303A37F1480A71303A31400A35BA21306A2130E130CA2131C1318133813
301370136013E05B485A90C7FC5A12065A5A5A5A1280112E80A113>I<121C123CA41204A21208
A212101220A212401280060E7D840E>44 D<EA7FF0EAFFE0127F0C037D8A10>I<127012F8A212
F012E005057B840E>I<1207120F121FA2120E1200AA127012F8A212F012E008147B930E>58
D<1406A2140EA2141EA2143E145EA2149F148FEB010F1302A21304A2130813181310132090383F
FF80EB4007A21380EA0100A21202A21206001E130F39FF807FF81D1F7E9E22>65
D<48B512C039001E00F015781538153C5BA4491378A215F0EC01E09038F007809038FFFE009038
F00F80EC03C03801E00115E0A3EA03C0A315C038078003EC0780EC0F00141E380F0078B512E01E
1F7D9E20>I<ECFE02903807010490381C00CC0170133C5B48481318485A48C7FC5A000E141012
1E481400A212381278A3127012F0A300701480A36CEB0100140200185B6C5B6C1330380380C0C6
B4C7FC1F1F7A9E21>I<48B5128039001E00E015701538151C5B150EA35BA449131EA44848133C
A3157848481370A215E0EC01C0EA0780EC0380EC0E005C380F0070B512C01F1F7D9E22>I<48B5
12FE39001E001C150C1504A25BA490387808081500A21418495AEBFFF0EBF030A23801E020A3EC
001048481320A21540A248481380140115001407380F001FB512FE1F1F7D9E1F>I<48B512FC39
001E003815181508A25BA4491310EC0800A3495A1430EBFFF0EBF0303801E020A44848C7FCA448
5AA4120FEAFFF81E1F7D9E1E>I<903801FC04903807030890381C0098017013785B4848133048
5A48C7FC5A000E1420121E481400A25AA45AECFFF0EC0780A20070EB0F00A46C131E1218001C13
3E6C134E3803818C3800FE041E1F7A9E23>I<3A01FFF3FFE03A001F003E00011E133CA3495BA4
495BA449485A90B5FCEBF001A24848485AA44848485AA4484848C7FCA4000F5B39FFF1FFE0231F
7D9E22>I<3801FFF038001F00131EA35BA45BA45BA4485AA4485AA4485AA4120FEAFFF8141F7D
9E12>I<EB1FFFEB00F814F0A3EB01E0A4EB03C0A4EB0780A4EB0F00A4131EA212301278EAF83C
A2485AEA4070EA61E0001FC7FC181F7D9E18>I<3A01FFF03FE03A001F000F80011EEB0E001508
5D495B5D4AC7FC1402495A5C5C1430EBF0F0EBF1F8EBF27813F448487E13F013E080EA03C0A280
A2EA07806E7EA3000F8039FFF03FF8231F7D9E23>I<3801FFF8D8001FC7FC131EA35BA45BA45B
A4485AA315803903C00100A25C140238078006A25C141C380F0078B512F8191F7D9E1D>I<D801
FEEC7FC0D8001EECFC005E0117EB0178A20127EB02F01504A215080147EB09E015111521A20187
495AEB83801583A23A01038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C
1380001C143E3AFF8103FFC02A1F7D9E29>I<48B4EB7FE0D8001FEB0F001504EB1780A201275B
EB23C0A3903841E010A214F0134001805B1478A348486C5AA3141E00025CA2140FA24891C7FC80
A2120C001C1302EAFF80231F7D9E22>I<EB01FCEB0F0790381801C090387000E0491360484813
70485A48C712385A121EA25AA2003814781278A34814F0A215E0140115C000701303EC07800078
14000038130E5C6C5B6C13E038078380D800FEC7FC1D1F7A9E23>I<48B5128039001E00E01570
1538153C5BA4491378A215F015E09038F003C0EC0F00EBFFFC01F0C7FC485AA4485AA4485AA412
0FEAFFF01E1F7D9E1F>I<48B5FC39001E03C0EC00E0157015785BA44913F0A2EC01E015C09038
F00700141EEBFFF0EBF03848487E141E140E140F3803C01EA448485A1508A2EC1C10000FEB1E20
39FFF007C01D1F7D9E21>82 D<903807E04090381C1880EB3005EB600313C039018001001203A3
000790C7FCA26C7E13F8EBFF806C13E06C6C7EEB1FF81301EB00781438A31220A2143000601370
146000705B38780180D8C607C7FCEA81FC1A1F7D9E1A>I<000FB512F0391E0780E00018142012
101220EB0F0012601240A2D8801E134000001400A35BA45BA45BA4485AA41203B5FC1C1F789E21
>I<39FFF007FC390F8000E090C712C01580EC0100A214025C138000075B141814105CA25C5CA2
01C1C7FC120313C213C4A213C8A213D013E0A26C5AA25B90C8FC1E1F779E22>86
D<3BFFF1FFC0FF803B1F003E001C00023C13186C1510A25E023E136016405E145EDADE01C7FC14
9E9038011E02A201025B150C010413085D130801185B1390D807A05BA201C05B141F496CC8FC14
0E1300140C120600041308291F779E2D>I<EBF180380389C038070780EA0E03121C123C383807
001278A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070013147C9317>97
D<EA0780123FEA0700A4120EA45AA213F0EA1D0CEA3A0E123CEA380FA21270A4EAE01EA3131C13
3C1338EA607013E0EA31C0EA1F0010207B9F15>I<137EEA01C138030080EA0E07121E001C1300
EA3C0248C7FCA35AA5EA70011302EA3004EA1838EA07C011147C9315>I<1478EB03F8EB0070A4
14E0A4EB01C0A213F1EA038938070780EA0E03121C123C383807001278A3EAF00EA31420EB1C40
A2EA703C135C38308C80380F070015207C9F17>I<137CEA01C2EA0701120E121C123CEA3802EA
780CEA7BF0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C9315>I<1478EB019CEB
033CA2EB07181400A2130EA53801FFE038001C00A45BA55BA65BA45B1201A25B1231007BC7FC12
F31266123C1629829F0E>I<EB3C60EBE2703801C1E0EA0380EA07005A380E01C0121EA3383C03
80A4EB0700A2EA1C0F1317EA0C2EEA03CEEA000EA25BA21230EA7838485AEA60E0EA3F80141D7E
9315>I<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180380F01C0120EA2381C0380
A438380700A3EB0E1000701320130C131CEB0C4000E013C03860070014207D9F17>I<13C0EA01
E0A213C0C7FCA7120E12331223EA4380130012471287120EA35AA3EA3840138012301270EA3100
1233121C0B1F7C9E0E>I<EB0180EB03C0A2148090C7FCA7133C13461387A2EA0107A2EA020E12
00A35BA45BA45BA45BA21230EA79C0EAF1800063C7FC123C1228829E0E>I<EA01E0120FEA01C0
A4485AA448C7FCA2EB03C0EB0420380E08E013111321EB40C0381C8000001DC7FC121EEA1FC0EA
38E01370A2EB384038707080A3EB310012E0EA601E13207D9F15>I<EA03C0121FEA0380A4EA07
00A4120EA45AA45AA45AA3127112E2A4126412380A207C9F0C>I<391C0F80F0392630C3183947
40640C903880680EEB0070A2008E495A120EA34848485AA3ED70803A3803807100156115E11562
3970070066D83003133821147C9325>I<381C0F80382630C0384740601380EB0070A2008E13E0
120EA3381C01C0A3EB03840038138814081307EB031000701330383001C016147C931A>I<137C
EA01C338030180000E13C0121E001C13E0123C1278A338F003C0A3EB07801400EA700F130EEA30
18EA1870EA07C013147C9317>I<3801C1E0380262183804741C1378EB701EA2EA08E01200A338
01C03CA3143838038078147014E0EBC1C038072380EB1E0090C7FCA2120EA45AA2EAFFC0171D80
9317>I<EA1C1EEA26613847838013871307EB0300008EC7FC120EA35AA45AA45A123011147C93
13>114 D<13FCEA0302EA0601EA0C03130713061300EA0F8013F0EA07F8EA03FCEA003E130E12
70EAF00CA2EAE008EA4010EA2060EA1F8010147D9313>I<EA018013C0EA0380A4EA0700A2EAFF
F0EA0700120EA45AA45AA31320EA7040A21380A2EA3100121E0C1C7C9B0F>I<000E13C0003313
E0382301C0EA43811301124738870380120EA3381C0700A31410EB0E201218A2EA1C1E380C2640
3807C38014147C9318>I<380E0380EA3307002313C0EA43831301EA470000871380120EA3381C
0100A31302A25BA25BEA0E30EA03C012147C9315>I<38038380380CC440381068E013711220EB
70C03840E0001200A3485AA314403863808012F3EB810012E5EA84C6EA787813147D9315>120
D<000E13C0003313E0382301C0EA43811301124738870380120EA3381C0700A4130E1218A2EA1C
1EEA0C3CEA07DCEA001CA25B12F05BEAE060485AEA4380003EC7FC131D7C9316>I<3801C04038
03E080EA07F1380C1F00EA0802C65A5B5B5B5B5B48C7FC1202485AEA08021210EA3E0CEA63FCEA
41F8EA80E012147D9313>I E /Fq 35 126 df<EA01C0A7B51280A33801C000A711117F9314>
43 D<127012F812FCA2127C121C1218123812F012C0060A798414>I<EAFFFEA30F037E8C14>I<
127012F8A312700505798414>I<EA07C0EA0FE0EA1C70EA3838EA3018EA701CA2EAE00EA9EA70
1CA2EA3838A2EA1C70EA0FE0EA07C00F177E9614>48 D<127012F8A312701200A6127012F8A312
700510798F14>58 D<127012F8A312701200A6127012F8A3127812181238127012E012C0051579
8F14>I<1304130E133E137CEA01F8EA03E0EA07C0EA1F00123E12FC12F012FC123E7EEA07C0EA
03E0EA01F8EA007C133E130E13040F157E9514>I<B51280A3C8FCA3B51280A311097F8F14>I<12
4012E012F8127C123FEA0F80EA07C0EA01F0EA00F8137E131E137E13F8EA01F0EA07C0EA0F80EA
3F00127C5A12E012400F157E9514>I<EA01E0EA07F8EA1E38EA3C1CEA38FCEA71FEEA739E12F3
EAE70EA7EAF39C1273EA71F8EA38F0EA3C0EEA1E1EEA07FCEA01F00F177E9614>64
D<38FE0FE0A2003E1380EA3B1BA413BBA2EA39B3A313F3EA38E3A21303A638FE0FE0A213178096
14>77 D<38FE3F80A2383E0E00123BA4138E1239A213CEA31238A213EE136EA4133E12FEA21117
7F9614>I<EA0FCCEA3FFCEA787CEAF03C12E0131CA2EAF000A2127EEA3FE0EA0FF8EA01FCEA00
3C131E130E12E0A3EAF01CEAF83CEAFFF8EAC7E00F177E9614>83 D<EA1FC0EA7FF0EA7078EA20
3CEA001CA2EA07FC121FEA7C1C12F012E0A3EA707C383FFF80EA0F8F11107E8F14>97
D<12FCA2121CA513F8EA1FFE130F381E0780EA1C0314C01301A41303001E13801307381F0F0013
FEEA1CF81217809614>I<EA03F8EA0FFCEA3C1CEA7808EA700012F05AA47E1270EA780EEA3C1E
EA0FFCEA03F00F107E8F14>I<137EA2130EA5EA07CEEA1FFEEA3C3EEA781EEA700E12F012E0A4
12F0EA701E1278EA3C3E381FFFC0EA07CF12177F9614>I<EA07E0EA1FF8EA3C3CEA781CEA701E
EAF00E12E0EAFFFEA2EAE0007E1270EA780EEA3C1EEA0FFCEA03F00F107E8F14>I<137CEA01FE
EA03CE13841380A3EAFFFEA2EA0380ACEA7FFCA20F177F9614>I<EA07CF381FFF80EA3C7B3878
3C00EA701CA3EA783C6C5AEA3FF0EA77C00070C7FCA2EA3FF813FE7F38700F80EAF007EAE003A3
38700700EA7C1FEA1FFCEA07F011197F8F14>I<1203EA0780A2EA0300C7FCA4EAFF80A21203AC
EAFFFEA20F187D9714>105 D<136013F0A213601300A4EA1FF0A2EA0070B2EAE0E012E1EAFFC0
EA3F000C207E9714>I<12FCA2121CA5381DFF80A2381C3C005B5BEA1DE0EA1FC07FA2EA1EF0EA
1C7013787F131C38FF3F80A211177F9614>I<EAFF80A21203B3EAFFFEA20F177E9614>I<EAFB8E
B51280EA3EFBEA3CF3EA38E3AA38FEFBE0A21310808F14>I<EAFC78EAFDFEEA1F8FEA1E07A212
1CA938FF9FE0A21310808F14>I<EA07C0EA1FF0EA3C78EA701CA2EAE00EA6EA701CEA783CEA3C
78EA1FF0EA07C00F107E8F14>I<38FF0F80EB3FC0EA07F1EBC08014005B90C7FCA8EAFFFCA212
10808F14>114 D<EA0FD8EA7FF8EAE078EAC038A2EAF000EA7F80EA3FF0EA07FCEA001EEAE00E
130612F0EAF81CEAFFF8EACFE00F107E8F14>I<38FF7F80A2381C1C00A46C5AA3EA0630EA0770
A36C5AA311107F8F14>118 D<38FF7F80A238380E00A4EA39CEA2EA19CCEA1B6CA2121AA2EA1E
7CEA0E78A211107F8F14>I<133EEA01FEEA03E01380A91207EA7F0012FE127FEA07801203A913
E0EA01FEEA003E0F1D7E9914>123 D<12E0B3AB031D789914>I<12F8B4FCEA0F801203A913C0EA
01FCEA00FEEA01FCEA03C01380A9120FEAFF0012F80F1D7E9914>I E /Fr
54 122 df<121CA2123C1270126012C012800607789913>19 D<1380EA010012025A120C120812
185AA35AA412E0AA1260A47EA37E1208120C12047E7EEA008009267D9B0F>40
D<7E12407E7E12181208120C7EA37EA41380AA1300A41206A35A1208121812105A5A5A09267E9B
0F>I<126012F0A212701210A31220A212401280040B7D830B>44 D<EAFFC0A20A0280880D>I<12
6012F0A2126004047D830B>I<EA0780EA1860EA3030A2EA6018A2EAE01CACEA6018A2EA7038EA
3030EA1860EA07800E187E9713>48 D<12035AB4FC1207B3A2EAFFF00C187D9713>I<EA0F80EA
1060EA2030EA4038EA803CEAC01C12E01240EA003C1338A21370136013C0EA018013001202EA04
0412081210EA3008EA3FF8127F12FF0E187E9713>I<EA0F80EA10E0EA2070EA6078EA70381220
EA00781370A2136013C0EA0F80EA00E013701338133CA212E0A212C0EA40381370EA30E0EA0F80
0E187E9713>I<1330A2137013F0A2EA0170120312021204120C1208121012301220124012C0B5
FCEA0070A6EA07FF10187F9713>I<EA3018EA3FF013E013C0EA2000A5EA27C0EA3860EA2030EA
00381318131CA2124012E0A2EA8018EA40381330EA30E0EA0F800E187E9713>I<EA01E0EA0610
EA0C18EA1838123013001270126012E0EAE7C0EAE860EAF030131812E0131CA31260A2EA701812
301330EA1860EA07C00E187E9713>I<EA0780EA1860EA3030EA20181260A3EA7010EA3C30EA3E
60EA0F80EA07C0EA19F0EA30F8EA6038EA401CEAC00CA4EA6008EA2010EA1860EA0FC00E187E97
13>56 D<EA0780EA1860EA30301270EA601812E0A2131CA31260133C1230EA185CEA0F9CEA001C
1318A21338EA70301360EA6040EA2180EA1F000E187E9713>I<126012F0A212601200A8126012
F0A2126004107D8F0B>I<130CA3131EA2133F1327A2EB4380A3EB81C0A348C67EA213FF380200
70A20006137800041338A2487FA2001C131EB4EBFFC01A1A7F991D>65 D<B5FC380E01C0EB00E0
14701478A514F014E0EB03C0380FFF80380E01E0EB00701478143CA51438147814F0EB01E0B512
80161A7E991B>I<EB3F023801C0C63803002E000E131E48130E14065A007813021270A200F013
00A600701302A21278003813047E14087E000313303801C0C038003F00171A7E991C>I<B512F0
380E00701430141014181408A3EB0400A3130CEA0FFCEA0E0C1304A3EB0004A21408A314181438
1470B512F0161A7E991A>69 D<B512E0EA0E001460142014301410A3EB0400A3130CEA0FFCEA0E
0C1304A390C7FCA8EAFFF0141A7E9919>I<EB3F023801C0C63803002E000E131E48130E14065A
007813021270A200F090C7FCA5903801FFC03970000E00A2127812387EA27E000313163801C066
38003F821A1A7E991E>I<38FFE7FF380E0070AB380FFFF0380E0070AC38FFE7FF181A7E991D>I<
EAFFE0EA0E00B3A6EAFFE00B1A7F990E>I<B4EB03FC000F14C0A2380B8005A33809C009A33808
E011A3EB7021A2EB3841A3EB1C81A3EB0F01A31306121C39FF861FFC1E1A7E9923>77
D<38FE01FF380F00381410EA0B80A2EA09C0EA08E0A21370A21338131CA2130EA21307EB0390A2
EB01D0A2EB00F01470A21430121C38FF8010181A7E991D>I<B5FC380E03C0EB00E01470A21478
A41470A214E0EB03C0380FFF00000EC7FCABEAFFE0151A7E991A>80 D<EAFFFC380E0780EB01C0
6D7E80A55C495AEB0780D80FFCC7FCEA0E067F6D7E80A380A31580EB00F0EC710038FFE03E191A
7E991C>82 D<EA0FC2EA1836EA200EEA600612C01302A3EAE0001270127EEA3FE0EA1FF8EA07FC
EA003E130E130713031280A3EAC0021306EAE004EAD818EA87E0101A7E9915>I<007FB5FC3870
1C0700401301A200C0148000801300A300001400B13803FFE0191A7F991C>I<3AFF83FF0FF03A
3C007801C0001CEC0080A26CEC0100A2149C6C1402A2EB010EA2D803815BEB8207A2D801C25B90
38C40388A2D800E41390A29038E801D0017813E0A2EB7000A201305B01201340241A7F9927>87
D<EA3F80EA70C013E0EA20701200A2EA07F0EA1C701230127012E01371A213F1EA71FBEA1E3C10
107E8F13>97 D<12FC121CA913F8EA1F0EEA1E07381C0380130114C0A6EB03801400EA1E07EA1B
0CEA10F0121A7F9915>I<EA07F8EA0C1C1238EA3008EA70005AA61270EA3004EA3808EA0C18EA
07E00E107F8F11>I<137E130EA9EA03CEEA0C3EEA380E1230127012E0A612601270EA381EEA1C
2E3807CFC0121A7F9915>I<EA07C0EA1C30EA30181270EA600C12E0EAFFFCEAE000A41260EA30
04EA3808EA0C18EA07E00E107F8F11>I<EA01F0EA0318EA0738EA0E101300A6EAFFC0EA0E00AE
EA7FE00D1A80990C>I<EA0FCEEA1873EA3030EA7038A4EA3030EA1860EA2FC0EA200012601270
EA3FF013FCEA1FFEEA600FEAC003A4EA6006EA381CEA07E010187F8F13>I<12FC121CA913F8EA
1D0CEA1E0EA2121CAB38FF9FC0121A7F9915>I<1218123CA21218C7FCA612FC121CAEEAFF8009
1A80990A>I<12FC121CA9EB3F80EB1E00131813105B5BEA1DC0EA1FE0121C1370137813387F13
1E131F38FF3FC0121A7F9914>107 D<12FC121CB3A6EAFF80091A80990A>I<38FC7C1F391D8E63
80391E0781C0A2001C1301AB39FF9FE7F81D107F8F20>I<EAFCF8EA1D0CEA1E0EA2121CAB38FF
9FC012107F8F15>I<EA07E0EA1C38EA300CEA700EEA6006EAE007A6EA6006EA700EEA381CEA1C
38EA07E010107F8F13>I<EAFCF8EA1F0EEA1E07381C0380A2EB01C0A6EB03801400EA1E07EA1F
0CEA1CF090C7FCA6B47E12177F8F15>I<EA03C2EA0C26EA381EEA300E127012E0A61270A2EA38
1EEA1C2EEA07CEEA000EA6EB7FC012177F8F14>I<EAFCE0EA1D70121E1320EA1C00ABEAFFC00C
107F8F0F>I<EA1F20EA60E0EA402012C0A2EAF000127FEA3FC0EA1FE0EA00F0EA8070133012C0
1320EAF040EA8F800C107F8F0F>I<1204A3120CA2121C123CEAFFC0EA1C00A81320A5EA0E40EA
03800B177F960F>I<EAFC7EEA1C0EAC131EEA0C2E3807CFC012107F8F15>I<38FF1F80383C0600
EA1C04A2EA1E0CEA0E08A26C5AA21390EA03A0A2EA01C0A36C5A11107F8F14>I<39FF3F9F8039
3C0E070000381306381C16041317001E130C380E23081488000F13983807419014D03803C1E013
80A200015BEB004019107F8F1C>I<38FF1F80383C0600EA1C04A2EA1E0CEA0E08A26C5AA21390
EA03A0A2EA01C0A36C5AA248C7FCA212E112E212E4127811177F8F14>121
D E /Fs 1 4 df<120CA2EA8C40EAEDC0EA7F80EA0C00EA7F80EAEDC0EA8C40EA0C00A20A0B7D
8B10>3 D E /Ft 12 119 df<1206120E121C12381230126012800707739914>19
D<130413181330136013C013801201EA0300A21206120E120C121C1218A212381230A21270A212
60A312E0A35AA51260A31220123012107E0E267B9B10>40 D<134013601320133013101318AB13
38A21330A21370A2136013E013C0A212011380120313001206A25A5A12105A5A5A0D267F9B10>
I<1206120F121E120C1200A81230127812F0126008107C8F0C>58 D<3803FFF03800701C140E14
0713E0A43801C00E141C143814E03803FF80EB80C014601470EA0700A4000E13E0A214E114E248
136238FFC03C181A7D991C>82 D<EA01E0EA0618EA1C08123812701310EAFFE0EAE000A41308EA
60101320EA30C0EA1F000D107C8F12>101 D<38307C1E38598663399E0783801403129CA23938
0E0700A3140ED8701C1340A2141C158038E0380C39601807001A107C8F1F>109
D<EA030F380590C0EA09E0EBC060A3380380E0A4380701C0148013031400EA0E8E137890C7FCA2
5AA4B4FC1317808F14>112 D<EA03E0EA04301208EA18701360EA1C00EA1F8013C0EA0FE01200
136012E0A2EA80C0EA4180EA3E000C107D8F10>115 D<1206120EA45AA2EAFFC0EA1C005AA45A
A412E1A312E2126412380A177C960D>I<EA3806EA4C07EA4E0E128E129CA2EA1C1C1238A3EA70
39A3EA3079EA389AEA0F0C10107C8F15>I<EA3818EA4C1C124EEA8E0C129CA2EA1C081238A3EA
7010A21320EA3040EA18C0EA0F000E107C8F12>I E /Fu 8 110 df<5B497EA3497EA2497E1309
A2EB10F0A3EB2078A2EB407C143CA2497EA20001131F90B5FCEB000F0002EB0780A348EB03C0A2
000C14E01401003EEB03F039FF801FFE1F1F7D9E25>65 D<90380FF0109038780C309038E00270
39038001F048C7FC481470001E14305A1510127C1278150012F8A71278A2007C1410123CA26C14
207E6C14406C6C13803900E00100EB780EEB0FF01C1F7C9E24>67 D<EAFFFCEA0FC0EA0780B3A9
EA0FC0EAFFFC0E1F7E9E12>73 D<B512C0380F80780007131E801580140715C0A41580140F1500
141E1478EBFFC0EB80E01430143880141EA3141FA315011581140F390FC007C639FFFC01F8201F
7D9E24>82 D<3803F020380C0E60381801E0EA3000481360A200E01320A36C1300A2127CEA7F80
EA3FFC6CB4FC00071380000113C038000FE01303EB00F0A214707EA36C136014E06C13C038F001
8038CE0300EA81FC141F7C9E1C>I<1318A3133CA2134EA31387A2000113801303A2380201C0A2
EA03FF380400E0A2481370A21218003C137838FE01FF18177F961C>97 D<EAFFC0EA1C00AD1301
A4130313021306130EEAFFFE10177D9617>108 D<00FCEB1FC0001CEB1E00A20016132EA30013
134EA33811808EA23810C10EA31362A31334A31318123800FEEB7FC01A177D9622>I
E /Fv 24 122 df<120F121FA2123F127E127812F012E00808759F1A>19
D<EAFFF0A40C047F8B11>45 D<1238127C12FEA3127C12381200A61238127C12FEA3127C123807
147C930F>58 D<14E0A2497EA3497EA2EB06FCA2EB0EFEEB0C7EA2497EA201307F141F01707FEB
600FA2496C7E90B5FC4880EB8003A248486C7EA20006801400000E803AFFE00FFFE0A2231F7E9E
28>65 D<B5EBFFE0A2D807E0EB1E005D15705D4A5A4A5A4AC7FC141E14385C14F0EBE1F8EBE3FC
13EFEBFCFEEBF87F496C7EEBE01F816E7E6E7E1403816E7E6E7E157E157FB53803FFF0A2241F7E
9E29>75 D<D8FFE0EC3FF86D147F00071600D806F814DFA3017CEB019FA26DEB031FA26D1306A2
90380F800CA2903807C018A3903803E030A2903801F060A2903800F8C0A2EC7D80A2EC3F00A314
1ED8FFF0903803FFF8140C2D1F7E9E32>77 D<B512F814FF3907E01FC0EC07E06E7EA281A45DA2
4A5AEC1FC090B5C7FC14FCEBE03E80816E7EA381A3163015F01670913807F860B53801FFE09138
007F80241F7E9E27>82 D<EA07FCEA1FFF383F0F80EB07C0EB03E0A2120C1200137FEA07FBEA1F
03123C127C12F8A3EAFC05EA7E0D383FF9FE380FE07E17147F9319>97 D<B4FCA2121FAAEB1FC0
EB7FF0EBE0F8EB807CEB007E143EA2143FA6143EA2147C1380381EC1F8381C7FE038181F801820
7E9F1D>I<EA01FE3807FF80381F0FC0123EA2127CEB030000FCC7FCA6127C127E003E1360003F
13C0EA1F813807FF00EA01FC13147E9317>I<EB07F8A21300AAEA01F8EA0FFEEA1F83EA3E01EA
7E00127CA212FCA6127CA2127EEA3E01EA1F07380FFEFFEA03F818207E9F1D>I<EA01FE3807FF
80381F83E0383F01F0EA7E0014F85AA2B5FCA200FCC7FCA3127C127E003E1318003F1338380F80
703807FFE0C6138015147F9318>I<3801FC3C3807FFFE380F079E381E03DE003E13E0A5001E13
C0380F0780EBFF00EA09FC0018C7FCA2121C381FFF806C13F06C13F8001F13FC383C007C007013
3E00F0131EA30078133CA2383F01F8380FFFE000011300171E7F931A>103
D<B4FCA2121FAAEB01FEA2EB00F0EB01C0EB0380EB0700131E1338137C13FE7F131F381E0F80EB
07C014E0EB03F01301EB00F838FFC3FFA218207E9F1C>107 D<B4FCA2121FB3AAEAFFE0A20B20
7E9F0E>I<3AFE0FE03F8090391FF07FC03A1E70F9C3E09039407D01F0EB807E121FEB007CAC3A
FFE3FF8FFEA227147D932E>I<38FE0FC0EB3FE0381E61F0EBC0F81380EA1F00AD38FFE3FFA218
147D931D>I<48B4FC000713C0381F83F0383E00F8A248137CA200FC137EA6007C137CA26C13F8
A2381F83F03807FFC00001130017147F931A>I<EAFE3EEB7F80381ECFC0138FA2121FEB030090
C7FCABEAFFF0A212147E9316>114 D<EA0FE6EA3FFEEA701EEA600EEAE006A2EAF800EAFFC0EA
7FF8EA3FFCEA1FFE1203EA001FEAC007A212E0EAF006EAF81EEAFFFCEAC7F010147E9315>I<EA
0180A31203A31207120F123FEAFFFCA2EA0F80AA1386A5EA07CCEA03F8EA01F00F1D7F9C14>I<
38FF07F8A2EA1F00AD1301A2EA0F063807FCFF6C5A18147D931D>I<3AFFE7FE1FE0A23A1F00F0
07006E7ED80F801306A23907C1BC0CA214BE3903E31E18A23901F60F30A215B03900FC07E0A290
387803C0A3903830018023147F9326>119 D<39FFE07F80A2391F001C00380F8018A26C6C5AA2
6C6C5AA26C6C5AA213F900005B13FF6DC7FCA2133EA2131CA21318A2EA783012FC5BEAC0E0EAE1
C0EA7F80001EC8FC191D7F931C>121 D E /Fw 83 125 df<90381F83E09038F06E303901C078
78380380F8903800F03048EB7000A7B612803907007000B2387FE3FF1D20809F1B>11
D<133FEBE0C0EA01C0380381E0EA0701A290C7FCA6B512E0EA0700B2387FC3FE1720809F19>I<
EB3FE013E0EA01C1EA0381EA0700A8B5FCEA0700B2387FE7FE1720809F19>I<90381F81F89038
F04F043901C07C06390380F80FEB00F05A0270C7FCA6B7FC3907007007B23A7FE3FE3FF0242080
9F26>I<12E0A212F01238121C120C1206120308087B9F17>18 D<1207A2120F121C1238123012
6012C00808779F17>I<123E1241EA8080A4EA4100123E0908749F22>23
D<EA7038EAF87CEAFC7EA2EA743AEA0402A3EA0804A2EA1008A2EA2010EA40200F0E7E9F17>34
D<127012F812FCA212741204A31208A21210A212201240060E7C9F0D>39
D<132013401380EA0100120212065AA25AA25AA312701260A312E0AC1260A312701230A37EA27E
A27E12027EEA0080134013200B2E7DA112>I<7E12407E7E7E120C7EA27EA2EA0180A313C01200
A313E0AC13C0A312011380A3EA0300A21206A25A12085A5A5A5A0B2E7DA112>I<1306AFB612F0
A2D80006C7FCAF1C207D9A23>43 D<127012F812FCA212741204A31208A21210A212201240060E
7C840D>I<EAFFC0A20A027F8A0F>I<127012F8A3127005057C840D>I<1303A213071306A2130E
130CA2131C1318A213381330A213701360A213E013C0A212011380A312031300A25A1206A2120E
120CA2121C1218A212381230A212701260A212E05AA2102D7DA117>I<EA03F0EA0E1C487E487E
A238700380A300F013C0AD00701380A338380700A2EA1C0E6C5AEA03F0121D7E9C17>I<EA0180
1203120F12F31203B3A5EA07C0EAFFFE0F1D7C9C17>I<EA07F0EA181CEA200F487E148000F013
C0EAF803A3EA200712001480A2EB0F00130E5B5B5B13605B485A48C7FC000613405A5A00101380
EA3FFF5AB5FC121D7E9C17>I<EA07F0EA181CEA200EEA780F148013071238EA000F1400A2130E
5B5BEA03F0EA001C7F130FEB0780A214C0122012F8A2148012F038400F00EA200EEA181CEA07F0
121D7E9C17>I<1306A2130E131EA2132E136E134E138EEA010EA212021204120C120812101230
1220124012C0B512F038000E00A7EBFFE0141D7F9C17>I<EA1803EA1FFE5B5B13E00010C7FCA6
EA11F0EA160CEA1806EA100738000380A214C0A3127012F0A200E01380EA40071400EA200EEA18
1CEA07E0121D7E9C17>I<137CEA0182EA0701380E0380EA1C071218383803000078C7FC1270A2
12F0EAF1F0EAF21CEAF406EAF807EB038012F014C0A31270A300381380A238180700EA0C06EA06
1CEA03F0121D7E9C17>I<1240387FFFC01480A238400100EA80025BA2485A5BA25B1360134013
C0A212015BA21203A41207A66CC7FC121E7D9D17>I<EA03F0EA0C0CEA1006487EEB01801260A2
127038780300123EEA3F06EA1FCCEA0FF0EA03F8487EEA0C7FEA103F38200F80386003C0EAC001
A21300A300601380EB0100EA3002EA0C0CEA03F0121D7E9C17>I<EA03F0EA0E18EA1C0EEA3806
EA7007EB038012F0A314C0A3127013071238EA180BEA0E13EA03E3EA00031480A2130700301300
1278130EEA700CEA2018EA1070EA0FC0121D7E9C17>I<127012F8A312701200AA127012F8A312
7005147C930D>I<127012F8A312701200AA127012F012F8A212781208A31210A31220A2124005
1D7C930D>I<007FB512E0B612F0C9FCA8B612F06C14E01C0C7D9023>61
D<5B497EA3497EA3EB09E0A3EB10F0A3EB2078A2EB607CEB403CA2EB803E141EEBFFFE3801000F
A30002EB0780A348EB03C0120E001FEB07E039FFC03FFE1F1F7F9E22>65
D<B512E0380F80380007131E141F801580A515005C141E5CEBFFF0EB803C80801580140715C0A5
1580140F15005C000F133CB512F01A1F7E9E20>I<90381FC04090387030C03801C00D38038003
38070001120E001E13005A1540127C1278150012F8A71278A2007C1440123CA26C1480120E6CEB
0100380380026C6C5A38007018EB1FE01A1F7D9E21>I<B512E0380F803C00077F1407EC038015
C0EC01E0A215F01400A215F8A915F0A3EC01E0A2EC03C01580EC0700140E000F133CB512E01D1F
7E9E23>I<B6FC380F800F00071303A28015801400A314801500A3138113FF13811380A4EC0020
A31540A315C0A2EC0180000F130FB6FC1B1F7E9E1F>I<B6FC380F800F00071303A28015801400
A4EC8000A4138113FF13811380A491C7FCA8487EEAFFFE191F7E9E1E>I<90380FE02090387818
603901C006E03803800148C7FC120E001E14605A1520127C1278150012F8A6EC7FFC0078EB03E0
1401127C123CA27E120E7E380380033801C0023900781C6090380FE0201E1F7D9E24>I<39FFF8
FFF8390F800F8000071400AC90B5FCEB800FAE000F148039FFF8FFF81D1F7E9E22>I<EAFFFCEA
0FC0EA0780B3A9EA0FC0EAFFFC0E1F7F9E10>I<380FFFC038007C00133CB3A3122012F8A3485A
EA4070EA30E0EA0F80121F7E9E17>I<39FFFC0FFC390FC003E03907800180150014025C5C5C5C
5C5C0181C7FC1383EB8780138FEB93C0EB91E013A1EBC0F01380147880A280A280EC0780A215C0
D80FC013E039FFFC3FFC1E1F7E9E23>I<EAFFFEEA0FC06C5AB21402A414061404A2140C141C00
0F137CB512FC171F7E9E1C>I<B46CEB1FF8000F158000071500D805C0132FA3D804E0134FA201
70138FA3903838010FA3EB1C02A3EB0E04A3EB0708A3EB0390A2EB01E0A3380E00C0001FEC1F80
3AFFE0C1FFF8251F7E9E2A>I<39FF803FF83907C007C0EC03803905E00100A2EA04F01378A213
3CA2131E130FA2EB0781A2EB03C1EB01E1A2EB00F1A21479143DA2141FA28080A2000E7F121F38
FFE0011D1F7E9E22>I<EB3FC0EBE0703803C03C48487E48487E001EEB0780A248EB03C0A2007C
14E00078130100F814F0A9007814E0007C1303A2003C14C06CEB0780A26CEB0F003807801E6C6C
5A3800F0F0EB3FC01C1F7D9E23>I<B512E0380F80780007131C141E801580A61500141E141C14
78EBFFE00180C7FCAD487EEAFFFC191F7E9E1F>I<B57E380F80F0000713788080A2141FA4141E
A25C5C5CEBFF80EB81C0EB80E08014701478A3147CA31504147E143E390FC01F1839FFFC07E01E
1F7E9E21>82 D<3807E080EA1C19EA30071303EA600112E01300A36C1300A21278127FEA3FF0EA
1FFC6C7EEA03FF38001F801307EB03C0A213011280A300C01380A238E00300EAF006EACC0CEA83
F8121F7D9E19>I<007FB512E038780F010060EB006000401420A200C0143000801410A4000014
00B3497E3807FFFE1C1F7E9E21>I<39FFFC3FF8390FC007C03907800380EC0100B3A300031302
13C000015BEA00E0EB6008EB3830EB0FC01D1F7E9E22>I<3BFFF07FF81FF03B1F800FC007C03B
0F0007800380EE010015C0D807801402A2EC0FE02603C0095BA215F02601E0105BA33A00F02078
10A3903978403C20A36D486C5AA390393F000FC06D5CA2011E1307010E91C7FCA2010C7F010413
022C1F7F9E2F>87 D<39FFF003FF391F8000F8000F1460000714407F6C6C138012019038F00100
00005BEBF802EB7C04133CEB3E08131EEB1F10EB0FB0EB07A014C01303AB1307EB7FFE201F7F9E
22>89 D<387FFFF8EA7C00007013F0386001E0124038C003C0A238800780130F1400EA001EA25B
A25B13F85B485AA23803C004A2EA0780120FEB000C121E1408481318A248133838F801F8B5FC16
1F7D9E1C>I<12FEA212C0B3B3A512FEA2072D7CA10D>I<EA0804EA1008EA2010A2EA4020A2EA80
40A3EAB85CEAFC7EA2EA7C3EEA381C0F0E7B9F17>I<12FEA21206B3B3A512FEA2072D7FA10D>I<
EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E0E1238127800F01310A3131E127838
386720380F83C014147E9317>97 D<120E12FE120EAA133EEBC380380F01C0EB00E0120E1470A2
1478A61470A214E0120F380D01C0380CC300EA083E15207F9F19>I<EA03F8EA0E0CEA1C1E1238
130CEA7000A212F0A61270A2EA3801A2EA1C02EA0E0CEA03F010147E9314>I<EB0380133F1303
AAEA03E3EA061BEA1C07EA3803A21270A212F0A61270A212381307121CEA0E1B3803E3F815207E
9F19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC00F0C7FCA31270A26C1380121838
0C0100EA0706EA01F811147F9314>I<137C13C6EA018F1203EA07061300A7EAFFF0EA0700B2EA
7FF01020809F0E>I<3803E1E0380E3A30EA1C1C38380E00EA780FA5EA380E6C5AEA1E38EA33E0
0020C7FCA21230A2EA3FFE381FFF806C13C0383001E038600070481330A4006013606C13C0381C
03803803FC00141E7F9317>I<120E12FE120EAA133E1343EB8180380F01C0A2120EAE38FFE7FC
16207F9F19>I<121C121E123E121E121CC7FCA6120E127E120EB1EAFFC00A1F809E0C>I<13E0EA
01F0A3EA00E01300A61370EA07F012001370B3A31260EAF06013C0EA6180EA3F000C28829E0E>
I<120E12FE120EAAEB0FF0EB03C0140013025B5B5B1330137013F8EA0F38EA0E1C131E130E7F14
80130314C014E038FFCFF815207F9F18>I<120E12FE120EB3ABEAFFE00B20809F0C>I<390E1F01
F039FE618618390E81C81C390F00F00EA2000E13E0AE3AFFE7FE7FE023147F9326>I<EA0E3EEA
FE43380E8180380F01C0A2120EAE38FFE7FC16147F9319>I<EA01F8EA070E381C0380383801C0
A2387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317>I<
EA0E3E38FEC380380F01C0EB00E0120E14F014701478A6147014F014E0EA0F0114C0380EC30013
3E90C7FCA8EAFFE0151D7F9319>I<3803E080EA0619EA1C05EA3C07EA38031278127012F0A612
70127812381307EA1C0BEA0E13EA03E3EA0003A8EB3FF8151D7E9318>I<EA0E78EAFE8CEA0F1E
A2130CEA0E00AEEAFFE00F147F9312>I<EA1F90EA3070EA4030EAC010A3EAE0001278EA7F80EA
3FE0EA0FF0EA0070EA80381318A212C0A2EAE030EAD060EA8F800D147E9312>I<1202A31206A2
120EA2123EEAFFF8EA0E00AB1308A5EA06101203EA01E00D1C7F9B12>I<380E01C0EAFE1FEA0E
01AE13031206EA030D3801F1FC16147F9319>I<38FF83F8381E01E0381C00C06C1380A3380701
00A2EA0382A3EA01C4A213ECEA00E8A21370A3132015147F9318>I<39FF9FE1FC393C07807039
1C030060EC8020000E1440A214C0D807071380130414E039038861001471EBC8733801D032143A
3800F03CEBE01CA2EB6018EB40081E147F9321>I<387FC3FC380F01E0000713C0148038038100
EA01C2EA00E413EC13781338133C137C134E1387EA010738030380380201C0000613E0121E38FF
07FE1714809318>I<38FF83F8381E01E0381C00C06C1380A338070100A2EA0382A3EA01C4A213
ECEA00E8A21370A31320A25BA3EAF080A200F1C7FC1262123C151D7F9318>I<EA3FFFEA380E12
20131CEA403813781370EA00E0120113C0EA038012071301120E121EEA1C03EA3802EA7006130E
EAFFFE10147F9314>I<B512FC1601808C17>I<B812F02C01808C2D>I E
/Fx 5 100 df<B512F0A214027D881B>0 D<1202A3EAC218EAF278EA3AE0EA0F80A2EA3AE0EAF2
78EAC218EA0200A30D0E7E8E12>3 D<1206120FA2120E121EA2121C123C1238A212301270A212
6012E012C0124008117F910A>48 D<12C0B3AEEAFF80A209227A9810>98
D<EA0180B3AE12FFA20922809810>I E /Fy 24 119 df<1207A2120F121E121C123812601240
1280080976A218>19 D<127012F812FCA212741204A41208A21210A212201240060F7C840E>44
D<127012F8A3127005057C840E>46 D<EA03F0EA0C1EEA100700201380384003C0A200F013E0EA
F801A3EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213205A5A00181360
481340383FFFC05AB5FC13207E9F18>50 D<B512F0380F801E00071307EC03C01401EC00E015F0
1578A2157C153CA3153EA9153CA2157C1578A215F015E01401EC03C0EC0700000F131EB512F81F
227EA125>68 D<39FFFC3FFF390FC003F039078001E0AE90B5FCEB8001AF390FC003F039FFFC3F
FF20227EA125>72 D<39FFFC03FF390FC000F86C48136015405D4AC7FC14025C5C5C5C5C5C1381
EB83C0EB87E01389EB88F01390EBA078EBC03C13808080A26E7E8114036E7EA26E7E81486C7F3A
FFFC07FF8021227EA126>75 D<EAFFFEEA0FC06C5AB3A21580A41401A215005CA2140F000F133F
B6FC19227EA11E>I<D8FFF0EB7FC0D81F80EB1F00000F140C00071408A27F00035CA26C6C5BA3
6C6C5BA26D13C001785BA26D48C7FCA2EB3E03EB1E02A26D5AA21484EB0788A2EB03D0A3EB01E0
A36D5AA222227FA125>86 D<3BFFF03FFC03FE3B1F8007E000F86C486C481370172001807F0007
01011440A32703C002F01380A33B01E004780100A33A00F0083C02A3903978101E04A36D486C5A
A390391E400790A390390F8003E0A36D486C5AA36D5C010213002F227FA132>I<EA0FE0EA1838
EA3C0C130EEA18071200A313FFEA07C7EA1E07123C1278127000F01308A3130FEA7817383C2390
380FC1E015157E9418>97 D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C
141C141EA7141C143C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA0703
380C0780121C383803000078C7FC127012F0A712700078134012386C1380380C0100EA0706EA01
F812157E9416>I<14E0130F13011300ABEA01F8EA0704EA0C02EA1C01EA38001278127012F0A7
127012781238EA1801EA0C0238070CF03801F0FE17237EA21B>I<EA01FCEA0707380C0380381C
01C01238007813E0EA700012F0B5FC00F0C7FCA512700078132012386C13406C138038070300EA
00FC13157F9416>I<3801F07038071D98380E0E18381C0700A2003C1380A4001C1300A2EA0E0E
EA0F1CEA19F00010C7FCA21218A2EA1FFE380FFFC014E0383800F0006013300040131812C0A300
601330A2003813E0380E03803803FE0015207F9418>103 D<121C121E123E121E121CC7FCA812
0E12FE121E120EB1EAFFC00A227FA10E>105 D<120E12FE121E120EB3ADEAFFE00B237FA20E>
108 D<380E1F8038FE60C0381E80E0380F0070A2120EAF38FFE7FF18157F941B>110
D<EA01FCEA0707380C0180381800C0003813E0481370A200F01378A700701370007813F0003813
E0381C01C0380E038038070700EA01FC15157F9418>I<EA0E3CEAFE46EA1E8FEA0F0F13061300
120EAD120FEAFFF010157F9413>114 D<1202A41206A3120E121E123EEAFFF8EA0E00AB1304A6
EA07081203EA01F00E1F7F9E13>116 D<000E137038FE07F0EA1E00000E1370AD14F0A2380601
70380382783800FC7F18157F941B>I<38FFC1FE381E0078000E13301420A26C1340A238038080
A33801C100A2EA00E2A31374A21338A3131017157F941A>I E /Fz 38 122
df<1218127EA2B4FC1380127F13C0EA1FE0120FEA03F0120013600C0C79AA22>18
D<EA0180EA07E0A2EA0FF0121F13E0123FEA7F80130012FC12F012600C0C72AA22>I<130E131E
137EEA07FE12FFA212F81200B3AB387FFFFEA317277BA622>49 D<EBFF80000313F0000F13FC38
3F03FFD87C001380EC7FC012FE6CEB3FE0A3141F127E003C133FC7FC15C0A2EC7F80A2ECFF0049
5A5CEB03F0495A495A49C7FC133E4913E013785B3901E001C0EA0380EA070048B5FC5A5A5AB612
80A31B277DA622>I<EB7F803803FFF04813FC381F81FEEB00FF487EEC7F8013C01380A2EA1F00
C712FF1500A2495AEB03F8495AEBFFC014F0EB01FC6DB4FCEC7F8015C0143F15E0A3123C127EB4
FCA215C0147F481480007C13FFD83F011300381FFFFC000713F0C613801B277DA622>I<140E14
1E143E147E14FEA213011303EB077E130EA2131C1338137013E0A2EA01C0EA0380EA0700120EA2
5A5A5A5AB612F8A3C7EAFE00A890387FFFF8A31D277EA622>I<000C1303380F803FEBFFFEA25C
5C14E05C49C7FC000EC8FCA6EB7FC0380FFFF8EB80FE380E007F000CEB3F80C7FCEC1FC0A215E0
A21218127E12FEA415C00078133F15806CEB7F00381F01FE6CB45A000313F0C613801B277DA622
>I<91393FF00180903903FFFE07010FEBFF8F90393FF007FF9038FF80014848C7127FD807FC14
3F49141F4848140F485A003F15075B007F1503A3484891C7FCAB6C7EEE0380A2123F7F001F1507
6C6C15006C6C5C6D141ED801FE5C6C6C6C13F890393FF007F0010FB512C0010391C7FC9038003F
F829297CA832>67 D<B712E0A33903FC001FED07F01501A215001670A3913801C0781638A30203
1300A2140F90B5FCA3EBFC0F1403A20201130EA3161C91C7FCA3163C1638167816F81501150315
1FB712F0A327297DA82D>69 D<B512FCA33801FE00B3B1B512FCA316297EA81A>73
D<B512FCA3D803FCC8FCB3A3ED01C0A415031680A21507A2150FA2151F157F913801FF00B7FCA3
22297DA829>76 D<D8FFFCECFFFE7F7F00036DEB0380808013BFEB9FF0EB8FF8EB87FC801383EB
81FF01801380EC7FC015E0EC3FF0141FEC0FF8EC07FCEC03FE15FF6E138380ED7FC3ED3FE3ED1F
F316FB150FED07FF8181A281167F163F161F160FEAFFFE160716032F297DA836>78
D<B612F815FF16C03A03FC003FE0ED0FF0ED07F816FC150316FEA716FC150716F8ED0FF0ED3FE0
90B61280EDFE0001FCC8FCB0B512F0A327297DA82F>80 D<B612E015FE6F7E3A03FC007FE0ED0F
F06F7E82150382A65E4B5AA2ED1FE0ED7FC090B500FEC7FC15F09038FC01FCEC007F826F7EA26F
7EA482A4170716F8150FEEFC0FB539F007FE1E923801FFFC9238003FF030297DA834>82
D<90387F80603903FFF0E0000F13FF381F807F383F001F007E13071403127C00FC1301A214007E
A26C140013C0EA7FFEEBFFE06C13FC14FF6C1480000714C06C14E0C614F01307EB007FEC0FF814
07140312E01401A37E15F06C13036C14E0B413079038E01FC090B5120000E05B38C01FF01D297C
A826>I<007FB712C0A39039803FC03FD87E00140700781503A20070150100F016E0A2481500A5
C71500B3A4017FB512E0A32B287EA730>I<48B47E000713F0380F81FC486C7E147FA2EC3F80EA
0F80C7FCA3EB0FFF90B5FC3807FC3FEA1FE0EA3F80127F130012FEA3147F7E6CEBFFC0393F83DF
FC380FFF0F3801FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE9038E7FF809038FE07E09038
F803F8496C7E496C7EA2157FA21680A916005D5D7F4A5A6D485A90389E07E090380FFF80260E01
FCC7FC212A7EA926>I<EB1FF8EBFFFE3803F01F390FE03F80EA1FC0EA3F80A2007FEB1F0090C8
FC5AA97E7F003FEB01C013C0001F1303390FE007803903F01F003800FFFCEB1FE01A1B7E9A1F>
I<EC3FF8A31403ACEB1FE3EBFFFB3803F03F380FE00F381FC007383F8003A2127F13005AA97EA2
EA3F801407381FC00F380FE01F3A03F03FFF803800FFF3EB3FC3212A7EA926>I<EB3FE03801FF
F83803F07E380FE03F391FC01F80393F800FC0A2EA7F00EC07E05AA390B5FCA290C8FCA47E7F00
3F14E01401D81FC013C0380FE0033903F81F803900FFFE00EB1FF01B1B7E9A20>I<EB07F0EB3F
FCEBFE3E3801FC7FEA03F8A2EA07F0143E1400A7B512C0A33807F000B3A3387FFF80A3182A7EA9
15>I<9038FF81F00003EBE7FC390FC1FE7C381F80FC003F13FE9038007E1048EB7F00A66C137E
EB80FE001F5B380FC1F8381FFFE0001813800038C8FC123CA2123E383FFFF814FF6C14C06C14E0
6C14F0121F397E0007F8007C13015A1400A36C1301007EEB03F06CEB07E0390FC01F803903FFFE
0038007FF01E287E9A22>I<EAFFE0A3120FAC147F9038E1FFC09038E787E09038EE07F09038FC
03F813F813F0A313E0AF3AFFFE3FFF80A3212A7DA926>I<1207EA1FC013E0123FA3121F13C0EA
0700C7FCA7EAFFE0A3120FB3A3EAFFFEA30F2B7DAA14>I<EAFFE0A3120FB3B2EAFFFEA30F2A7D
A914>108 D<3BFFC07F800FF0903AC1FFE03FFC903AC783F0F07E3B0FCE03F9C07F903ADC01FB
803F01F8D9FF00138001F05BA301E05BAF3CFFFE1FFFC3FFF8A3351B7D9A3C>I<38FFC07F9038
C1FFC09038C787E0390FCE07F09038DC03F813F813F0A313E0AF3AFFFE3FFF80A3211B7D9A26>
I<EB3FE03801FFFC3803F07E390FC01F80391F800FC0003F14E0EB00074814F0A34814F8A86C14
F0A2393F800FE0A2001F14C0390FC01F803907F07F003801FFFC38003FE01D1B7E9A22>I<38FF
E1FE9038E7FF809038FE07E0390FF803F8496C7E01E07F140081A2ED7F80A9EDFF00A25DEBF001
4A5A01F85B9038FE0FE09038EFFF80D9E1FCC7FC01E0C8FCA9EAFFFEA321277E9A26>I<90381F
C0389038FFF0783903F83CF8380FE01F001F130F383FC0071380007F1303A2EAFF00A9EA7F80A2
123FEBC007001F130F380FE01F3803F07F3800FFF3EB3FC3EB0003A991383FFF80A321277E9A24
>I<38FFC1F0EBC7FCEBCE3E380FDC7F13D813F813F0143E14005BAFB5FCA3181B7E9A1C>I<3803
FE30380FFFF0EA3E03EA7800127000F01370A27E6C1300EAFFE013FE387FFFC06C13E06C13F000
0713F8C613FC1303130000E0137C143C7EA26C13787E38FF01F038F7FFC000C11300161B7E9A1B
>I<1370A413F0A312011203A21207381FFFF0B5FCA23807F000AD1438A73803F870000113F038
00FFE0EB1F8015267FA51B>I<39FFE03FF8A3000F1303B11407A2140F0007131F3A03F03BFF80
3801FFF338003FC3211B7D9A26>I<3AFFFE03FF80A33A07F0007000A26D13F000035CEBFC0100
015CA26C6C485AA2D97F07C7FCA2148FEB3F8E14DEEB1FDCA2EB0FF8A36D5AA26D5AA26D5A211B
7F9A24>I<39FFFC0FFFA33907F003C06C6C485AEA01FC6C6C48C7FCEBFF1E6D5AEB3FF86D5A13
0FA2130780497E497E131EEB3C7F496C7E496C7ED801E07FEBC00F00036D7E3AFFF01FFF80A321
1B7F9A24>120 D<3AFFFE03FF80A33A07F0007000A26D13F000035CEBFC0100015CA26C6C485A
A2D97F07C7FCA2148FEB3F8E14DEEB1FDCA2EB0FF8A36D5AA26D5AA26D5AA2495AA2EA3807007C
90C8FCEAFE0F130E131E5BEA7C78EA3FE0EA0FC021277F9A24>I E /FA
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 7 7 9 14 14 22 17 6 8 8 10 15 7 8 7 7 14 14 14 14 14
14 14 14 14 14 7 7 15 15 15 14 25 17 17 18 18 17 15 19 18 7
12 17 14 21 18 19 17 19 18 17 15 18 17 24 17 17 15 7 7 7 12
14 6 14 14 12 14 14 7 14 14 6 6 12 6 21 14 14 14 14 8 12 7
14 12 18 12 12 12 8 6 8 15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 14 14 4 14 14 14 14 5
8 14 8 8 12 12 0 14 14 14 7 0 13 9 6 8 8 14 25 25 0 15 0 8
8 8 8 8 8 8 8 0 8 8 0 8 8 8 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 25 0 9 0 0 0 0 14 19 25 9 0 0 0 0 0 22 0 0 0 7 0 0 6 15
24 15 0 0 0 0 ] /Helvetica 1000 393216 rf /FB [ 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12
18 18 30 22 7 11 11 13 19 9 11 9 9 18 18 18 18 18 18 18 18
18 18 9 9 19 19 19 18 34 22 22 24 24 22 20 26 24 9 17 22 18
28 24 26 22 26 24 22 20 24 22 31 22 22 20 9 9 9 16 18 7 18
18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9 18 17 24
17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18 6 11 18
11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0 20 0 11
11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0 0 30 0
0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica 1000 524288 rf /FC
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 17 17 22 35 35 55 42 14 21 21 24 36 17 21 17 17 35 35
35 35 35 35 35 35 35 35 17 17 36 36 36 35 63 42 42 45 45 42
38 48 45 17 31 42 35 52 45 48 42 48 45 42 38 45 42 59 42 42
38 17 17 17 29 35 14 35 35 31 35 35 17 35 35 14 14 31 14 52
35 35 35 35 21 31 17 35 31 45 31 31 31 21 16 21 36 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
21 35 35 10 35 35 35 35 12 21 35 21 21 31 31 0 35 35 35 17
0 33 22 14 21 21 35 62 62 0 38 0 21 21 21 21 21 21 21 21 0
21 21 0 21 21 21 62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 62 0 23
0 0 0 0 35 48 62 23 0 0 0 0 0 55 0 0 0 17 0 0 14 38 59 38 0
0 0 0 ] /Helvetica 1000 983040 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin @a4
%%EndSetup
%%Page: 0 1
bop 0 40 a @beginspecial @setspecial
%%BeginDocument: couvpi.ps



/dictlocal 20 dict def 
/Reencode { dictlocal begin
/Nouveauvect exch def
/Nomnouvellepolice exch def
/Nompolicedebase exch def
/Policedebasedict Nompolicedebase findfont def
/Nouveaudict Policedebasedict maxlength dict def

Policedebasedict
{ exch dup /FID ne
{dup /Encoding eq
{exch dup length array copy Nouveaudict 3 1 roll put }
{exch Nouveaudict 3 1 roll put } ifelse }
{ pop pop} ifelse } forall

Nouveaudict /FontName Nomnouvellepolice put

Nouveauvect aload pop
Nouveauvect length 2 idiv {Nouveaudict /Encoding get 3 1 roll put} repeat

Nomnouvellepolice Nouveaudict definefont pop end } def %dictlocal

/CMPvect [
128 /Adieresis
130 /Ccedilla
131 /Eacute
133 /Odieresis
136 /agrave
137 /acircumflex
138 /adieresis
141 /ccedilla
142 /eacute
143 /egrave
144 /ecircumflex
145 /edieresis
148 /icircumflex
149 /idieresis
153 /ocircumflex
154 /odieresis
157 /ugrave
158 /ucircumflex
159 /udieresis
229 /Acircumflex
230 /Ecircumflex
231 /Agrave
232 /Edieresis
233 /Egrave
234 /Eacute
235 /Icircumflex
236 /Idieresis
239 /Ocircumflex
243 /Ucircumflex
244 /Ugrave
] def

/Helvetica /F-Helvetica CMPvect Reencode
/Helvetica-Bold /F-Helvetica-Bold CMPvect Reencode


/pi 3.1415923 def
/strl ( ) def
/spiral {
 gsave
 /rad exch def
 /ptsize exch def
 /str exch def
 /xrad rad ptsize 4 div add def

155 rotate

str {
    % chaine
    /charcode exch def
    ( ) dup 0 charcode put placechar
    } forall
    grestore
} def

/placechar {
   /char exch def
   /angle char stringang def
   gsave
      angle 2 div neg rotate
      rad 0 translate
      -90 rotate
       char stringwidth pop 2 div neg 0 moveto
      char show
   grestore
   angle neg rotate
} def
/stringang {
   stringwidth pop
   2 xrad mul pi mul
  div 360 mul    
} def

150 neg 700 neg translate

gsave

660 190 translate
gsave
0.1 0.1 1 setrgbcolor
0 0 585 90 155 arc stroke
10 setlinewidth
0 0 580 0 110 arc stroke
grestore

0.7 setgray
/F-Helvetica-Bold findfont 90 scalefont setfont
(I   R   I   S   A) 90 590 spiral

0 setgray 
/F-Helvetica findfont [12 0 0 10 0 0] makefont setfont
(INSTITUT DE RECHERCHE EN INFORMATIQUE ET SYST\351MES AL\352ATOIRES) 
12 575  spiral
grestore

gsave
240 800 translate
0.7 setgray
newpath
0 0 moveto
0 100 lineto 233 50 lineto closepath fill
grestore

gsave
0 setgray
/F-Helvetica-Bold findfont [15 0 0 15 0 0] makefont setfont
240 500 translate 
0 0  moveto
(P) show
15 0 moveto
/F-Helvetica findfont [10 0 0 15 0 0] makefont setfont
(U  B  L  I  C  A  T  I  O  N) show
0 20 neg translate
0 0 moveto
(I  N  T  E  R  N  E) show
0 20 neg translate
/F-Helvetica findfont 15 scalefont setfont
0 0 moveto (N) show
/F-Helvetica findfont 10 scalefont setfont
11 7 moveto (o) show
0 100 neg translate
0.1 0.1 1 setrgbcolor
newpath   
0 0 moveto
0 80 lineto 200 40 lineto closepath fill    
grestore

gsave
250 30 translate
gsave
0.1 0.1 1 setrgbcolor
newpath
0 0 moveto
0 10 lineto 30 5 lineto closepath fill
grestore
35 5 translate
/F-Helvetica-Bold findfont 20 scalefont setfont
0 0 moveto
(I R I S A) show
50 neg 7.5 translate
0 0 moveto
0 10 lineto 30 5 lineto closepath fill
/F-Helvetica findfont 8 scalefont setfont
90 neg 25 neg moveto
(CAMPUS UNIVERSITAIRE DE BEAULIEU - 35042 RENNES CEDEX - FRANCE) show
gsave
160 neg 25 neg translate 90 rotate
0 0 moveto (ISSN 1166-8687) show
gsave

%%EndDocument
 @endspecial @beginspecial @setspecial
 gsave 110 240 neg translate 0 0 moveto /Helvetica findfont 15 scalefont
setfont (830) show grestore 
@endspecial 46 1581
a FC(LOOP)18 b(NEST)e(SYNTHESIS)f(USING)j(THE)f(POL)-5 b(YHEDRAL)15
b(LIBRAR)o(Y)27 1748 y(HER)o(V)210 1735 y(\302)200 1748 y(E)h(LE)h(VERGE,)51
b(VINCENT)16 b(V)-5 b(AN)17 b(DONGEN)52 b(AND)34 b(DORAN)18
b(K.)846 1831 y(WILDE)p eop
%%Page: 0 2
bop eop
%%Page: 0 3
bop 15 27 a @beginspecial @setspecial
 gsave 35 neg 0 translate gsave 0.1 0.1 1 setrgbcolor newpath 0 0 moveto
0 10 lineto 30 5 lineto closepath fill grestore 35 5 translate /Helvetica-Bold
findfont 25 scalefont setfont 0 0 moveto (I R I S A) show 50 neg 7.5
translate 0 0 moveto 0 10 lineto 30 5 lineto closepath fill grestore 
@endspecial 914 -80
a FB(I)p FA(NSTITUT)7 b(DE)f FB(R)p FA(ECHERCHE)g(EN)19 b FB(I)p
FA(NFORMA)n(TIQUE)8 b(ET)e FB(S)p FA(YST)1613 -85 y(\301)1609
-80 y(EMES)11 b FB(A)p FA(L)1733 -85 y(\302)1728 -80 y(EA)n(TOIRES)1045
-27 y FB(Campus)f(de)g(Beaulieu)j(\261)d(35042)h(Rennes)g(Cedex)f(\261)g
(France)1151 27 y(T)t(\302)-15 b(el.)14 b(:)f(\(33\))d(99)g(84)h(71)f(00)g
(\261)g(Fax)f(:)k(\(33\))e(99)f(84)g(71)g(71)190 681 y Fz(Lo)r(op)24
b(Nest)e(Syn)n(thesis)h(using)g(the)f(P)n(olyhedral)h(Library)277
841 y Fy(Herv)o(\023)-23 b(e)15 b(Le)h(V)l(erge,)47 b(Vincen)o(t)15
b(V)l(an)h(Dongen)1110 823 y Fx(\003)1160 841 y Fy(and)33 b(Doran)17
b(K.)f(Wilde)1614 823 y Fx(\003\003)45 953 y Fw(Programme)e(1)h(|)g(Arc)o
(hitectures)h(parall)o(\022)-21 b(eles,)16 b(bases)f(de)g(donn)o(\023)-21
b(ees,)15 b(r)o(\023)-21 b(eseaux)14 b(et)h(syst)o(\022)-21
b(emes)14 b(distribu)o(\023)-21 b(es)834 1020 y(Pro)s(jet)14
b(API)437 1132 y(Publication)j(in)o(terne)f(n\027830)f(|)h(Ma)o(y)e(1994)g(|)
i(7)e(pages)0 1636 y Fv(Abstract:)46 b Fw(A)21 b(new)h(metho)q(d)g(to)f(syn)o
(thesis)h(lo)q(op)g(nests)g(giv)o(en)g(a)f(p)q(olyhedral)i(domain,)h(the)d
(con)o(text)0 1702 y(domain,)i(and)e(the)g(lo)q(op)h(nesting)g(order)f(is)g
(describ)q(ed.)40 b(The)21 b(metho)q(d)h(is)f(based)h(on)f(functions)h(in)g
(the)0 1769 y Fu(IRISA)16 b Fw(p)q(olyhedral)h(library)l(.)0
1836 y Fv(Key-w)o(ords:)31 b Fw(P)o(olyhedral)16 b(scanning)g(problem)1619
2327 y Ft(\(R)o(\023)-19 b(esum)o(\023)g(e)12 b(:)17 b(tsvp\))51
2485 y Fs(\003)69 2501 y Fr(email:)f Fq(vandonge@)o(dr)o(ebi)o(n.c)o(ri)o
(m.c)o(a)11 b Fr(W)m(orking)16 b(at)f(CRIM)f(\(Cen)o(tre)h(de)f(rec)o(herc)o
(he)i(Informatique)g(de)e(Mon)o(tr)o(\023)-18 b(eal\),)16 b(1801)0
2547 y(Mc)d(Gill)i(college)g(suite)f(800,)f(H3A)f(2N4,)h(Mon)o(treal,)h
(Canada)35 2576 y Fs(\003\003)69 2592 y Fr(email:)19 b Fq(wilde@iri)o(sa.)o
(fr)o Fr(This)d(w)o(ork)h(w)o(as)h(partially)i(supp)q(orted)f(b)o(y)f(the)g
(Esprit)h(Basic)f(Researc)o(h)h(Action)f(NANA)f(2,)0 2638 y(Num)o(b)q(er)c
(6632)h(and)g(b)o(y)f(NSF)g(Gran)o(t)g(No.)g(MIP-910852.)808
2852 y
 1864679 2107084 36179968 26049576 40192655 30588518 startTexFig
808 2852 a
%%BeginDocument: /usr/local/doc/Logo-CNRS.epsi
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
/_AI3_savepage save def
0 A
u
0 O
0 g
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
575.4405 421.5155 m
575.5045 416.7565 569.7485 416.0395 568.8155 418.7035 C
571.9405 418.7035 L
575.3785 420.7655 573.6905 424.3285 572.0655 425.4535 C
567.0035 425.6405 l
570.1905 436.1405 l
571.8785 436.1405 l
569.4405 440.1405 l
565.1905 436.3285 l
566.9405 436.2655 l
565.1285 430.8905 L
562.0035 436.1405 L
561.5035 437.2655 560.3155 437.5785 559.8155 436.3285 C
556.7145 428.7325 555.0845 428.6325 552.8785 429.5785 C
551.7535 430.9535 552.3155 433.0785 554.2535 433.1405 C
554.2535 431.2655 l
557.9405 434.4535 l
554.1905 437.8905 l
554.1905 436.2035 l
550.8095 436.2465 548.2185 432.6605 549.7535 428.6405 C
553.5235 423.1895 559.4415 426.8625 561.0035 431.4535 C
563.6285 427.0155 l
559.8155 415.5785 l
558.3155 415.4535 l
560.4405 411.3905 l
564.8155 415.3285 l
563.3785 415.3905 L
564.5035 418.4535 L
566.2535 413.7655 571.8785 412.8285 576.0655 415.3285 C
577.7535 417.0155 578.8155 417.5475 578.7535 424.4225 C
578.7535 425.5475 579.5035 426.0155 580.4405 425.8285 C
580.4405 424.4535 L
585.1285 427.6405 l
580.3785 430.7655 L
580.3785 429.3285 L
578.2055 429.4135 574.9265 429.5345 575.4405 421.5155 C
f
1 0 0 0 k
578.7535 424.4225 m
F
1 g
566.0035 422.7035 m
565.5035 421.2655 L
570.0035 421.2655 L
571.0035 421.5155 570.9405 422.3285 570.1905 422.7035 C
566.0035 422.7035 l
f
u
0 g
0 R
0 G
1 J 1 j 2 w
580.3785 449.9535 m
574.0035 430.2655 l
B
591.5035 454.9535 m
585.1285 435.2655 l
B
604.4395 463.8595 m
582.0645 395.1405 l
B
611.0775 453.5155 m
593.1525 398.4665 l
B
615.7815 438.5015 m
605.4065 406.6315 l
B
U
U
_AI3_savepage restore
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 808 2852 a
 endTexFig
976 2926 a
 3729359 932335 4078469 920944 36311531 9209446 startTexFig
976 2926 a
%%BeginDocument: /usr/local/doc/Logo-INRIA.epsi
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
0 A
0 i 0 J 0 j 1 w 4 M []0 d
0 D
-351 0 m
945 0 L
(N) *
u
u
0 O
0 g
0.6 w
224.1251 92.5499 m
224.5739 93.5999 224.2739 95.8499 220.9751 95.9999 C
221.3501 97.1999 L
240.7003 97.1999 L
240.2503 95.9999 L
237.914 95.8664 236.2741 94.7999 235.3003 92.5499 C
235.374 92.5499 222.8694 46.7216 222.8489 46.6494 c
222.1364 44.1369 224.2739 42.9744 225.8115 43.1994 C
225.774 43.1994 225.549 41.9994 y
206.2269 41.9994 l
206.6488 43.1994 l
208.1488 43.1994 210.6238 44.3994 211.5238 46.4994 c
224.0864 92.5124 l
F
330.94 97.1999 m
317.1399 97.1999 L
316.8399 95.9999 l
317.6649 95.9999 l
316.8399 95.9999 L
317.6649 95.9999 L
F
317.1399 97.1999 m
331.6 97.1999 l
331.15 95.9999 l
330.4 95.9999 l
328.675 95.7749 327.025 95.0249 326.275 92.5499 C
312.8873 43.6119 L
312.6127 41.9638 310.9898 41.9994 Y
306.3248 41.9994 l
281.1995 84.2998 281.162 84.4873 v
270.9677 48.6016 270.8494 46.6494 v
270.6994 44.1744 272.0494 43.1994 274.3744 43.1994 C
274.1495 41.9994 l
259.7493 41.9994 259.5618 42.0744 v
260.0652 43.1994 259.8993 43.1994 v
261.3993 43.1994 264.0993 44.3994 264.5494 46.6494 c
276.8495 91.9499 L
277.1495 94.2749 275.2328 95.9999 272.8744 95.9999 C
273.2644 97.1999 L
283.187 97.1999 L
284.6923 97.0745 285.7653 97.4423 287.8896 93.4499 C
310.1721 56.3245 L
320.1399 92.5499 L
320.4999 94.8749 318.8021 95.9999 317.6649 95.9999 c
F
537.7021 46.6494 m
537.7771 43.9494 535.9771 43.1994 534.4021 43.1994 C
534.1021 41.9994 L
552.7023 41.9994 L
553.0748 43.1994 L
549.6273 43.1994 549.3273 45.3744 548.8022 46.6494 C
540.1022 95.3999 L
539.7272 96.9749 538.0021 97.1999 536.8771 97.1999 C
526.077 97.1999 l
525.702 95.9999 L
527.502 95.9999 529.002 94.5749 527.652 92.5499 C
494.9475 46.6494 l
493.8225 45.5244 492.4903 43.4703 488.4266 43.1994 C
487.9766 41.9994 L
502.9018 41.9994 L
503.3373 43.1994 L
502.4973 42.9594 500.6893 44.4369 502.2677 46.6494 C
502.2661 46.6494 513.1019 61.7246 Y
524.127 61.7246 l
525.852 61.7246 528.627 61.7246 530.3396 60.7495 c
534.2059 66.1582 l
537.7021 46.6494 L
f
1 g
534.0646 66.9746 m
F
534.2146 65.9996 m
F
534.0571 66.9746 m
516.8894 66.9746 L
530.63 86.2474 L
530.6521 86.1748 534.0496 66.9746 534.0571 66.9746 c
f
0 g
458.1275 92.5499 m
458.5763 93.5999 458.2763 95.8499 454.9775 95.9999 C
455.3525 97.1999 L
474.7027 97.1999 L
474.2527 95.9999 L
471.9164 95.8664 470.2764 94.7999 469.3026 92.5499 C
469.3764 92.5499 456.8718 46.7216 456.8513 46.6494 c
456.1388 44.1369 458.2763 42.9744 459.8138 43.1994 C
459.7763 43.1994 459.5513 41.9994 y
440.2293 41.9994 l
440.6511 43.1994 l
442.1512 43.1994 444.6262 44.3994 445.5262 46.4994 c
458.0888 92.5124 l
F
399.4007 97.1999 m
365.5754 97.1849 L
365.2004 95.9849 L
367.5254 95.9999 368.7254 94.2749 368.2354 92.5499 C
355.6753 46.5594 L
354.8128 44.6244 353.8003 43.1994 350.8752 43.1844 C
350.5752 41.9844 L
369.7004 41.9844 L
370.0004 43.2594 L
369.4004 43.2594 L
367.8254 43.7244 366.4754 44.9244 367.0379 46.7844 C
379.6755 92.5349 L
394.0007 92.5199 394.0007 92.5349 V
398.6507 92.6249 401.1107 88.2598 400.7507 85.2598 C
400.7507 80.3247 397.6757 75.7497 393.2507 74.3097 C
388.3006 72.4497 381.3255 72.9747 377.8755 73.9497 C
376.0005 71.4597 L
379.6005 68.0996 382.1506 65.1746 386.1256 58.9495 C
393.3257 46.6494 404.8008 38.2943 417.4009 38.4593 C
420.4384 38.6243 424.5926 38.6629 426.2885 42.2244 c
426.6635 43.0119 425.6885 42.4494 425.951 42.6219 C
410.9508 40.9493 408.7008 46.7994 399.7007 59.0995 C
396.8507 63.4496 393.8507 67.9496 391.9756 68.6846 C
397.7507 69.8996 403.7508 71.3997 408.4008 76.2597 C
412.4509 81.2248 413.5009 85.9498 411.4008 90.6598 C
407.5758 98.0999 400.4507 96.9749 399.4007 97.1999 c
F
U
U
1 w
948 698 m
948 -598 L
(N) *
842 698 m
842 -598 L
(N) *
-351 -48 m
945 -48 L
(N) *
-351 92 m
945 92 L
(N) *
-351 45.125 m
945 45.125 L
(N) *
0 O
0 g
0.258 w
80.7297 56.7368 m
84.192 63.1358 87.7402 68.819 91.7645 75.0836 c
94.4705 79.296 99.1647 85.2336 100.6191 88.1399 c
100.7978 88.4971 100.2885 88.8163 100.3728 89.0906 c
100.5351 89.6188 100.7703 90.0013 100.45 90.6977 c
99.7316 92.2603 99.0866 92.6473 97.988 93.5539 c
98.1502 93.42 96.3861 92.8385 96.8086 93.2387 c
94.5411 90.7388 l
92.7504 88.2223 l
91.5459 87.0077 l
90.3928 84.681 l
89.8209 83.8616 l
88.4433 82.2397 l
87.346 80.0647 l
87.0787 79.5762 86.7027 79.1024 86.1763 78.0343 c
84.4752 75.8991 l
84.2919 75.5527 83.9877 74.9778 v
83.8354 74.6902 83.6025 74.3682 83.4481 73.9583 c
83.3364 73.6617 82.5365 73.1329 82.4757 72.3789 c
82.4457 72.0075 81.711 70.571 81.4558 70.0502 c
81.2428 69.6156 80.4645 68.3873 79.8984 67.3457 c
79.3236 66.2879 80.0052 67.6885 79.4378 66.6499 c
78.6584 65.2231 78.1947 64.0265 78.1575 63.9535 c
74.0231 56.3573 73.5494 55.4297 v
71.7388 51.8836 65.2718 38.7731 62.7558 29.4599 c
62.7378 29.3934 62.3221 29.4378 62.0639 29.4378 C
64.7385 65.7493 66.074 102.1634 64.6438 138.571 C
64.8163 138.571 64.9874 138.5802 65.1595 138.5664 c
89.0923 136.6402 112.7731 135.9906 136.6228 136.6041 c
157.8158 137.1493 178.8765 139.7858 200.0929 139.603 C
200.0929 139.2805 199.9639 139.0225 199.8349 138.9903 c
199.026 138.788 196.148 137.519 192.5262 135.7818 C
190.8502 134.9779 189.9952 134.5528 190.9134 135.0011 C
190.3213 134.712 189.3289 134.0267 188.7152 133.7214 C
187.8345 133.2833 187.0657 133.0889 186.1653 132.6288 C
185.2681 132.1703 185.1274 131.9681 184.3712 131.5741 C
184.0454 131.4044 183.8497 131.6213 183.5266 131.451 C
183.1505 131.2528 182.9056 130.9255 182.5352 130.7275 C
182.3138 130.6093 179.1628 128.6956 178.9429 128.5772 C
178.1507 128.2283 179.6371 128.8526 178.7493 128.3571 C
178.0063 127.9424 178.187 128.4353 177.4944 128.0338 C
176.9744 127.7325 176.3421 127.049 175.8592 126.7592 C
175.3778 126.4702 175.6907 126.833 175.2537 126.5589 C
174.0233 125.7874 173.3541 125.3644 173.0181 125.13 C
172.2698 124.6829 172.4748 124.8744 169.9756 123.4372 C
169.2498 122.9394 165.8008 120.6402 164.8244 119.9383 C
164.0898 119.4564 166.4711 120.8494 165.9396 120.4671 C
165.0052 119.9951 164.4204 119.5442 163.5837 118.9668 C
163.0937 118.6286 161.4388 117.2623 160.9392 116.9338 C
159.6747 116.1023 158.6318 115.3074 157.2652 114.5772 C
156.6189 115.4439 155.186 117.0674 154.3983 117.7744 c
156.1492 116.203 149.5395 121.3631 147.2475 122.6298 c
145.0396 123.8501 152.4249 119.0933 152.4315 119.2951 c
151.5119 119.4476 148.8518 121.601 v
149.7205 120.8978 149.5238 121.1961 147.8725 122.2334 c
147.5309 122.448 143.9316 124.0263 143.5675 124.2036 c
142.8101 124.5725 143.0676 124.269 142.2794 124.5853 c
141.814 124.7721 141.8597 124.8211 141.3854 124.9908 c
141.0147 125.1234 142.8344 124.3479 142.459 124.4705 c
142.1905 124.5583 139.0811 125.8939 138.1641 126.1546 c
142.5064 124.9203 140.718 125.3221 134.9771 126.8163 c
133.517 127.1964 128.8516 127.6126 128.207 127.7505 c
127.7531 127.8477 128.0724 127.4234 127.6173 127.5101 c
127.0272 127.6225 127.7264 127.3394 127.1363 127.4356 c
126.4549 127.5466 126.5482 127.6473 125.8702 127.7388 c
125.5146 127.7868 125.9338 127.8323 125.5799 127.8754 c
124.9387 127.9535 126.6929 127.4081 126.0596 127.4717 c
125.2477 127.5533 125.3625 127.4805 124.8794 127.5198 c
124.4519 127.5546 125.4093 127.4775 124.9074 127.5338 c
123.7011 127.6694 123.6804 127.315 121.9183 127.3289 c
121.2999 127.3338 120.6047 127.3353 120.2424 127.3362 c
119.5299 127.3379 117.0278 127.0787 116.3735 127.0753 c
115.6694 127.0715 115.8747 126.7656 115.2989 126.7571 c
113.5021 126.7308 112.6188 126.6102 113.5026 126.8069 c
111.9304 126.4569 112.334 126.5097 110.295 125.8692 c
109.6645 125.6711 107.2135 125.2841 106.1796 125.0329 c
109.448 125.827 103.6016 124.1231 103.3162 124.0877 c
102.7205 124.0138 101.1294 123.237 100.5488 123.07 c
99.3262 122.7182 99.2156 122.7041 98.811 122.4908 c
98.0074 122.0669 98.0046 122.0588 97.0583 121.7039 c
96.6269 121.5421 95.9328 121.2574 95.4888 121.1125 c
94.8506 120.9043 94.0996 120.3879 93.49 120.1007 c
92.6349 119.6979 93.1526 119.8661 92.1498 119.4263 c
91.6508 119.2074 90.8397 119.0644 90.1314 118.6744 c
89.757 118.4683 89.3849 118.1396 89.014 117.9521 c
88.736 117.8116 87.9029 117.268 87.626 117.1438 c
86.6643 116.7125 86.4935 116.4343 85.6791 115.981 C
84.0393 115.0682 82.6957 113.8035 80.8613 112.5055 C
80.8977 111.6102 80.7687 111.4812 81.4137 110.9652 c
81.7769 110.6746 82.4457 110.7072 84.1792 111.2371 C
95.4746 117.5441 107.7174 120.7682 120.3781 121.4101 c
131.4951 121.9738 144.0109 119.5372 151.0733 110.1912 C
146.0363 106.1035 141.1489 102.4735 136.2218 98.3052 c
135.8516 97.9921 135.353 97.2911 134.984 96.9762 c
134.697 96.7313 134.0016 96.468 133.4812 96.0198 c
133.227 95.8008 133.3599 95.5813 133.1062 95.3613 c
132.5778 94.9031 131.7728 94.6052 131.1378 93.9796 c
130.679 93.5276 130.4667 93.3165 129.8757 92.7861 c
129.6261 92.5621 129.2478 91.9505 128.9989 91.7251 c
128.5256 91.2967 128.0535 90.8658 127.5826 90.4321 c
127.3206 90.1909 126.672 89.8198 126.4108 89.5768 c
125.7001 88.9157 125.5083 88.8932 124.8037 88.2184 c
124.6074 88.0305 123.9686 87.6413 123.6979 87.3567 c
123.1513 86.782 122.587 86.0338 122.1293 85.7259 c
121.2621 85.1427 121.2108 84.8677 120.5252 84.2484 c
120.0943 83.8592 119.9328 83.7405 119.4783 83.4329 c
119.1976 83.243 118.9527 83.0303 118.7935 82.7475 c
118.5988 82.4015 117.9093 82.3818 117.6491 82.0841 c
116.4891 80.7567 114.7338 79.048 113.6133 77.8345 c
113.388 77.5905 113.1684 77.6112 112.9555 77.3838 c
112.4902 76.8867 112.3316 76.6009 111.5348 75.8122 c
111.2581 75.5382 110.6313 75.1682 110.4222 74.9557 c
109.6401 74.161 109.6744 73.895 109.4202 73.6689 c
108.9896 73.286 108.4134 72.9104 107.9405 72.546 c
107.4103 72.1375 106.9995 71.4537 106.5831 70.9244 c
106.1667 70.395 105.7822 70.4368 105.1915 69.7132 c
104.4792 68.8406 104.0161 68.3015 103.622 67.8429 c
103.2997 67.4679 103.01 67.3299 102.7036 66.9505 c
102.4751 66.6675 102.2785 66.34 101.9696 66.1446 c
100.5351 65.2365 100.1894 64.589 99.1618 63.5468 c
98.9358 63.3177 98.356 63.3751 97.7259 62.4592 c
97.2682 61.7938 95.488 59.7927 95.0238 59.296 c
94.6458 58.8916 95.6455 59.7545 94.6999 58.7212 c
94.1041 58.0703 94.0282 57.9328 93.4373 57.2774 c
93.1483 56.957 92.4725 56.5071 92.1837 56.1859 c
91.6801 55.6259 91.3862 55.2339 90.9286 54.6327 c
90.7017 54.3346 90.5603 54.8278 89.4553 53.0173 c
88.9481 52.1863 88.4963 51.4739 87.2122 50.5996 c
86.5619 50.1569 86.8193 49.2809 85.971 48.8758 c
84.877 48.3535 85.3462 48.7523 85.214 48.3473 c
85.2736 48.5302 82.9494 46.4429 82.4404 44.7932 C
82.1036 44.4055 81.3585 43.5997 80.9811 43.1499 C
80.6488 42.754 80.3015 42.5919 79.9403 42.1477 C
79.4727 41.5727 79.2454 40.8466 78.75 40.2367 C
78.3699 39.7687 78.2416 39.68 77.8528 39.2011 C
77.393 38.6348 76.6715 38.0638 76.2097 37.4951 C
75.762 36.9436 75.316 36.0072 74.8766 35.4662 C
73.9866 34.3703 73.4158 34.2107 72.3314 32.4468 C
70.6645 30.3736 69.3051 28.6549 68.6428 27.7608 C
68.3848 28.1477 68.2558 28.2767 Y
72.2548 39.2417 79.0138 53.3341 80.7297 56.7368 C
f
1 g
113.6601 107.8593 m
113.275 107.9928 112.8211 108.0582 112.3828 108.1651 c
111.6619 108.3411 111.0102 108.367 110.4158 108.2754 C
107.353 107.803 105.8079 104.2092 104.1176 101.9353 C
104.4218 101.581 104.7683 101.3217 105.1405 101.136 c
105.5953 100.9089 105.8772 101.2189 106.3322 101.0028 c
107.0845 100.6453 108.1165 100.3873 108.7384 100.8657 c
109.0392 101.0971 109.9952 100.8353 110.3307 100.9405 c
111.7961 101.4 111.3386 101.9055 113.0747 102.6332 c
114.1795 103.0962 114.9535 104.7733 114.618 106.8239 c
114.5206 107.4195 114.1416 107.6923 113.6601 107.8593 c
f
0 g
153.6532 105.8052 m
157.6887 98.0474 154.9163 88.7388 149.9745 81.5996 c
144.6018 73.838 136.6091 70.3401 128.8854 66.3315 C
127.4438 58.2161 129.2197 50.0597 131.8536 42.3816 c
135.8513 30.7278 142.4029 21.5446 152.8227 14.3916 c
152.9922 14.2752 152.8792 13.7859 152.8792 13.4419 C
124.8941 15.7318 97.0878 16.4313 68.7663 13.2325 c
68.5998 13.2136 68.3946 13.4675 68.5365 13.685 c
76.0601 25.2094 83.1108 35.2492 91.9794 45.4443 c
111.3514 67.714 130.6813 88.2953 153.6532 105.8052 C
f
179.5079 75.8638 m
182.936 87.3584 185.258 97.4203 189.052 107.5914 C
192.4819 116.6411 200.3831 133.0886 202.0601 135.9265 c
202.1322 136.0484 201.6871 136.5571 201.8989 136.249 C
186.6332 130.1905 172.7144 121.1105 159.8452 110.9652 C
160.4788 110.0258 161.1381 109.0413 161.5797 108.0231 c
161.8127 107.4859 162.42 105.9762 162.2068 106.3849 c
162.0381 106.7082 162.5941 105.6519 162.7485 105.0153 c
162.8515 104.5907 163.0723 103.647 163.1538 103.2167 c
163.2825 102.5373 163.6435 101.4646 163.7243 100.7754 c
163.83 99.8753 164.0637 99.2192 163.9356 98.3217 c
163.7151 96.7753 163.9815 96.9982 163.9709 95.8737 c
163.9617 94.914 163.8259 96.0088 163.7935 95.2294 c
163.7719 94.7097 163.8259 93.1345 163.6307 92.6614 c
163.3866 92.0697 163.8318 92.2376 163.0558 90.5894 c
162.6264 89.6772 162.6171 89.5905 162.3052 88.7738 c
162.1399 88.3409 162.0994 87.8851 161.9275 87.407 c
161.6611 86.6666 160.8221 85.1645 160.796 84.8851 c
160.7358 84.2397 160.7358 84.6267 159.7432 83.1018 c
159.057 82.0478 158.4138 81.0147 157.3076 79.9496 c
157.0008 79.6542 157.0123 79.1756 156.7305 78.8613 C
156.7305 78.8613 L
156.2608 78.3371 155.5759 78.0477 154.6488 76.8161 C
154.3497 76.5124 154.3054 75.9559 153.9998 75.6623 C
153.3375 75.026 152.9183 75.0582 152.2273 74.4666 C
151.5539 73.89 151.0609 73.4037 150.0133 72.1722 C
148.9053 71.303 147.2949 70.7057 146.5005 70.156 C
146.3244 69.9232 145.8135 69.5511 144.88 68.999 C
144.5114 68.781 144.0769 68.5349 143.5711 68.2581 C
143.2734 68.0953 142.951 67.6638 142.6028 67.4793 C
140.87 66.8248 138.9485 65.852 136.2383 64.5255 C
136.1942 64.0071 136.1591 63.4908 136.133 62.9762 c
136.1044 62.4152 135.9573 61.8563 135.9496 61.2987 c
135.9448 60.9549 135.9439 60.4826 135.9469 60.1398 c
135.9515 59.623 136.0939 59.2361 136.1159 58.7209 c
136.1361 58.2464 136.1637 57.3854 136.1985 56.9116 c
136.274 55.8827 136.5155 54.7209 136.6576 53.6896 c
136.6932 53.431 136.4729 53.4303 136.5126 53.1714 c
136.6617 52.1985 136.9769 51.8379 137.1369 51.0811 c
137.2292 50.6443 137.0977 50.0755 137.2959 49.1807 c
137.3933 48.7413 137.4952 48.5626 137.6015 48.1288 c
137.8041 47.3024 138.0229 46.2281 138.2577 45.4208 c
138.3569 45.0798 138.4589 44.7405 138.5638 44.4027 c
138.697 43.9732 138.964 43.9332 139.1064 43.5087 c
139.3712 42.7194 139.3936 42.3253 139.6895 41.5517 c
139.9866 40.7749 140.3663 39.8867 140.7561 38.4689 c
140.843 38.1532 141.2752 37.9973 141.4092 37.6986 c
141.9199 36.5602 142.1723 35.3717 143.172 34.0651 c
143.3491 33.8337 143.1819 33.4222 143.3153 33.1693 c
143.4962 32.8265 143.677 32.8751 143.8594 32.5392 c
144.49 31.3784 144.7536 30.7638 145.4991 29.5836 c
145.6707 29.3119 146.0423 28.1477 146.4051 28.003 c
146.8068 27.8428 146.8822 27.5428 147.1253 27.191 c
147.5149 26.627 148.1254 25.393 148.5778 24.8894 c
150.0021 23.304 151.1264 21.4864 153.8299 19.1691 c
154.2194 18.8352 154.5906 18.4749 154.984 18.1326 c
155.5624 17.6293 156.5548 16.7753 156.7859 17.1802 c
167.346 35.6833 173.6768 55.5466 179.5079 75.8638 c
F
1 w
144 698 m
144 -598 L
(N) *
77 698 m
77 -598 L
(N) *
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec

%%EndDocument
 976 2926 a
 endTexFig
263 3039 a FB(Centre)e(National)h(de)e(la)g(Recherche)h(Scienti\256que)53
b(Institut)11 b(National)h(de)e(Recherche)h(en)f(Informatique)163
3093 y(\()p FA(URA)f FB(227\))h(Universit)t(\302)-15 b(e)11
b(de)f(Rennes)h(1)f(\261)f(Insa)h(de)g(Rennes)52 b(et)10 b(en)g(Automatique)i
(\261)e(unit)t(\302)-15 b(e)11 b(de)g(recherche)f(de)h(Rennes)p
eop
%%Page: 0 4
bop 172 81 a Fz(La)23 b(syn)n(th)o(\022)-33 b(ese)23 b(de)g(nids)f(de)h(b)r
(oucles)e(a)n(v)n(ec)i(la)g(biblioth)o(\022)-33 b(eque)768
169 y(p)r(oly)o(\023)g(edrique)0 286 y Fv(R)o(\023)-25 b(esum)o(\023)g(e)20
b(:)62 b Fw(Une)20 b(nouv)o(elle)h(m)o(\023)-21 b(etho)q(de)19
b(de)h(syn)o(th)o(\022)-21 b(ese)18 b(de)i(nids)h(de)f(b)q(oucles)h(est)e(d)o
(\023)-21 b(ecrite)20 b(\022)-23 b(a)19 b(partir)g(d'un)0 352
y(domaine)f(p)q(oly)o(\023)-21 b(edrique,)17 b(d'un)h(domaine)f(con)o
(textuel,)h(et)e(de)i(l'ordre)f(sur)g(les)h(b)q(oucles)g(im)o(briqu)o(\023)
-21 b(ees.)17 b(Cette)0 419 y(m)o(\023)-21 b(etho)q(de)15 b(est)g(bas)o(\023)
-21 b(ee)14 b(sur)h(les)h(fonctions)g(de)f(la)h(biblioth)o(\022)-21
b(eque)16 b(p)q(oly)o(\023)-21 b(edrique)17 b(de)e(l')p Fu(IRISA)p
Fw(.)0 486 y Fv(Mots-cl)o(\023)-25 b(e)18 b(:)48 b Fw(Probl)o(\022)-21
b(eme)14 b(du)i(parcours)f(d'un)g(p)q(oly)o(\022)-21 b(edre)p
eop
%%Page: 1 5
bop 118 -76 a Fp(L)n(o)n(op)16 b(Nest)g(Synthesis)e(using)i(the)h(Polyhe)n
(dr)n(al)e(Libr)n(ary)892 b Fw(1)p 118 -48 1890 4 v 118 81
a Fz(1)69 b(In)n(tro)r(duction)118 193 y Fw(The)19 b(spatial)g(p)q(oin)o(t)h
(of)e(view)h(of)g(a)f(lo)q(op)i(nest)e(go)q(es)h(bac)o(k)g(to)f(the)g(w)o
(ork)g(of)h(Kuc)o(k)g([7)o(])g(who)f(sho)o(w)o(ed)h(that)118
259 y(the)d(domain)h(of)f(nested)h(lo)q(ops)f(with)h(a\016ne)f(lo)o(w)o(er)g
(and)h(upp)q(er)g(b)q(ounds)g(can)f(b)q(e)h(describ)q(ed)i(in)e(terms)e(of)h
(a)118 326 y(p)q(olyhedron.)g(Lo)q(op)f(nest)g(syn)o(thesis)h(grew)e(out)h
(of)f(the)h(older)h(lo)q(op)f(transformation)f(theory)h([6)o(,)g(11)o(])g
(where)118 393 y(it)e(w)o(as)g(sho)o(wn)g(that)f(all)i(lo)q(op)g
(transformations)d(could)k(b)q(e)e(p)q(erformed)h(b)o(y)f(doing)g(a)g(c)o
(hange)g(of)g(basis)h(on)f(the)118 459 y(underlying)j(index)f(domain,)f
(follo)o(w)o(ed)g(b)o(y)g(a)f(rescanning)i(\(p)q(erhaps)f(in)h(a)e
(di\013eren)o(t)h(order\))f(of)h(the)g(domain.)118 526 y(Lo)q(op)19
b(nest)f(syn)o(thesis)g(is)h(based)f(on)g(the)g(p)q(olyhedral)i(scanning)f
(problem)g(whic)o(h)g(p)q(oses)f(the)g(problem)h(of)118 592
y(\014nding)e(a)e(set)f(of)h(nested)h(do{lo)q(ops)f(whic)o(h)h(visit)g(eac)o
(h)g(in)o(tegral)f(p)q(oin)o(t)h(in)g(a)f(p)q(olyhedron.)189
659 y(Ancourt)21 b(et)g(al.)h([1)o(])f(w)o(ere)g(the)h(\014rst)f(to)g(solv)o
(e)h(the)f(p)q(olyhedral)i(scanning)g(problem.)e(They)h(used)g(a)118
726 y(metho)q(d)e(to)e(compute)i(the)f(lo)q(op)h(nests)f(whic)o(h)h(is)g
(based)f(on)h(a)f(F)l(ourier-Motzkin)g(pairwise)i(elimination)118
792 y(pro)q(cedure.)f(This)g(metho)q(d)f(in)o(v)o(olv)o(es)h(the)f(pro)s
(jection)g(of)g(p)q(olyhedron)i(along)e(an)g(axis)g(to)g(\014nd)h(the)f(lo)q
(op)118 859 y(b)q(ounds.)d(The)f(main)g(di\016cult)o(y)h(is)g(that)e(the)h(F)
l(ourier{Motzkin)g(elimination)j(metho)q(d)d(creates)f(redundan)o(t)118
926 y(b)q(ound)i(equations)f(whic)o(h)h(m)o(ust)f(b)q(e)g(eliminated)i
(afterw)o(ard.)c(Le)j(F)l(ur)f(et)g(al.)g([8)o(])g(also)g(use)g(this)g(metho)
q(d)g(for)118 992 y(their)h(P)o(andore)f(I)q(I)h(compiler.)189
1059 y(The)e(tra)o(v)o(ersal)e(of)h(a)h(p)q(olyhedron)h(b)o(y)e(a)h(set)f(of)
g(nested)h(lo)q(ops)h(can)e(b)q(e)i(though)o(t)e(of)g(as)g(a)h
(lexicographical)118 1125 y(ordering)20 b(of)g(the)f(in)o(teger)h(p)q(oin)o
(ts)g(in)h(the)f(p)q(olyhedron,)h(where)f(a)f(p)q(oin)o(t)h
Fo(a)g Fw(is)g(executed)h(b)q(efore)f(a)f(p)q(oin)o(t)118 1192
y Fo(b)f Fw(if)i Fo(a)f Fn(\036)g Fo(b)f Fw(\()p Fo(a)h Fw(precedes)h
Fo(b)e Fw(lexicographically\).)j(Th)o(us)e(giv)o(en)g(a)g(p)q(olyhedron,)h
(lo)q(op)f(b)q(ound)h(expressions)118 1259 y(can)c(b)q(e)h(deriv)o(ed)g(b)o
(y)g(\014nding)g(the)f(lexical)i(minim)o(um)g(and)e(maxim)o(um)g(of)g(the)g
(p)q(olyhedron)i(in)f(a)e(giv)o(en)i(set)118 1325 y(of)f(directions)i(and)f
(in)h(terms)e(of)g(parameters)g(and)h(outer)g(lo)q(op)g(v)m(ariables.)h(A)e
(tec)o(hnique)j(to)d(do)g(this)i(uses)118 1392 y(the)13 b(P)o(arametric)f(In)
o(teger)h(Program)f(\(PIP\))g(dev)o(elop)q(ed)j(b)o(y)e(F)l(eautrier)g([5,)f
(4].)g(PIP)h(\014nds)h(the)f(lexicographic)118 1458 y(minim)o(um)g(of)e(the)h
(set)g(of)f(in)o(teger)h(p)q(oin)o(ts)g(whic)o(h)h(lie)g(inside)h(a)d(con)o
(v)o(ex)h(p)q(olyhedron)h(whic)o(h)g(dep)q(ends)g(linearly)118
1525 y(on)h(one)g(or)f(more)h(parameters.)e(PIP)i(is)h(called)g(t)o(wice)f
(for)f(eac)o(h)h(lo)q(op)h(in)f(the)g(lo)q(op)g(nest,)g(once)g(for)f(the)h
(lo)o(w)o(er)118 1592 y(and)20 b(once)g(for)f(the)g(upp)q(er)i(b)q(ound.)f
(The)f(lo)q(op)h(expressions)h(m)o(ust)e(then)g(b)q(e)i(extracted)e(out)g(of)
g(the)h(PIP)118 1658 y(output,)e(whic)o(h)i(is)f(a)f(quasi-a\016ne)i
(expression)f(tree,)g(where)f(eac)o(h)h(branc)o(h)g(is)g(guarded)g(b)o(y)g(a)
f(constrain)o(t)118 1725 y(and)13 b(the)g(terminal)g(no)q(des)h(hold)f
(either)h(an)e(index)i(expression)g(or)e Fn(?)h Fw(\(b)q(ottom\))e(meaning)j
(that)e(that)g(branc)o(h)118 1792 y(is)22 b(infeasible.)h(The)f(extraction)f
(of)g(the)g(lo)q(op)h(b)q(ound)h(expressions)f(from)e(PIP)i(output)f(is)h
(not)f(an)g(easy)118 1858 y(problem)c(and)f(requires)h(p)q(ost)f(pro)q
(cessing.)h(Collard)f(et)g(al.[3])f(sho)o(w)h(ho)o(w)g(PIP)g(can)g(b)q(e)h
(used)g(to)e(\014nd)i(lo)q(op)118 1925 y(b)q(ounds)g(and)e(ho)o(w)g(PIP)h
(output)g(can)f(b)q(e)i(simpli\014ed.)h(Chamski)d([2])g(reviews)h(the)g(PIP)g
(metho)q(d)f(of)h(\014nding)118 1991 y(lo)q(op)i(b)q(ounds)h(and)f(giv)o(es)f
(timing)i(comparisons)e(b)q(et)o(w)o(een)h(the)g(PIP)g(metho)q(d)g(and)g(the)
f(F)l(ourier-Motzkin)118 2058 y(metho)q(d.)189 2125 y(In)g(this)g(pap)q(er,)f
(w)o(e)g(describ)q(e)i(a)e(metho)q(d)h(to)f(scan)g(parameterized)h(p)q
(olyhedra)h(using)f(the)f(p)q(olyhedral)118 2191 y(library)g([10)o(])f(whic)o
(h)h(is)g(based)f(on)h(the)f(computation)g(of)g(the)g(dual)h(represen)o
(tation)g(of)e(a)h(p)q(olyhedron.)i(The)118 2258 y(prop)q(osed)i(metho)q(d)f
(uses)g(the)h(library)g(function)g Fm(DomainAddRa)o(ys)f Fw(to)g(pro)s(ject)f
(out)h(inner)h(lo)q(op)g(indices)118 2324 y(in)h(a)f(manner)g(similar)h(to)e
(the)i(F)l(ourier{Motzkin)f(elimination)i(metho)q(d,)e(but)g(without)g
(generating)g(an)o(y)118 2391 y(redundan)o(t)k(inequalities.)i(The)e
(expressions)g(deriv)o(ed)h(from)e(the)h(pro)s(jection)f(are)h(further)f
(reduced)i(b)o(y)118 2458 y(considering)e(the)e Fp(c)n(ontext)g(domain)g
Fw(of)f(eac)o(h)h(expression,)h(and)f(eliminating)i(preestablished)g
(conditions)118 2524 y(using)17 b(the)f(library)g Fm(DomainSimplify)i
Fw(function.)f(Th)o(us,)e(w)o(e)h(will)h(sho)o(w)e(ho)o(w)h(the)g(syn)o
(thesis)g(of)f(lo)q(op)i(nests)118 2591 y(can)e(b)q(e)h(nicely)h(done)f
(using)g(the)f(p)q(olyhedral)i(library)l(.)p eop
%%Page: 2 6
bop 0 -76 a Fw(2)610 b Fp(Herv)o(\023)-22 b(e)16 b(L)n(e)g(V)m(er)n(ge,)47
b(Vinc)n(ent)15 b(V)m(an)g(Dongen)49 b(and)32 b(Dor)n(an)17
b(K.)f(Wilde)p 0 -48 1890 4 v 0 81 a Fz(2)69 b(The)23 b(P)n(olyhedron)g
(Scanning)g(Problem)0 195 y Fl(2.1)56 b(In)n(tro)r(duction)18
b(to)g(parameterized)e(p)r(olyhedra)0 291 y Fw(This)h(section)g(quic)o(kly)g
(in)o(tro)q(duces)h(the)e(concept)h(of)f(p)q(olyhedra)h(and)g(parameterized)f
(p)q(olyhedra)i(to)d(help)0 357 y(in)k(the)g(understanding)h(of)e(the)g(p)q
(olyhedron)i(scanning)g(problem.)e(A)h(p)q(olyhedron)h(is)f(de\014ned)h(to)d
(b)q(e)j(the)0 424 y(set)g(of)g(p)q(oin)o(ts)g(b)q(ounded)i(b)o(y)e(a)g(set)g
(of)g(h)o(yp)q(erplanes.)h(Eac)o(h)f(h)o(yp)q(erplane)i(is)f(asso)q(ciated)f
(with)h(an)f(a\016ne)0 491 y(inequalit)o(y)f(\()p Fo(ax)e Fn(\025)g
Fo(b)p Fw(\))g(whic)o(h)i(divides)g(space)f(in)o(to)g(t)o(w)o(o)e
(halfspaces:)i(a)g(closed)g(halfspace)h(whic)o(h)f(satis\014es)0
557 y(the)g(inequalit)o(y)h(and)f(an)g(op)q(en)h(halfspace)f(whic)o(h)h(do)q
(es)f(not.)f(A)h(system)f(of)h(suc)o(h)g(inequalities)j(induces)e(a)0
624 y(p)q(olyhedron)e Fn(D)c Fw(=)g Fn(f)i Fo(x)28 b Fw(:)f
Fo(Ax)13 b Fn(\025)g Fo(b)i Fn(g)g Fw(where)g Fo(A)g Fw(and)h
Fo(b)e Fw(are)h(a)g(constan)o(t)g(matrix)f(and)i(v)o(ector)e(resp)q(ectiv)o
(ely)l(.)71 690 y(Often)21 b(w)o(e)f(are)h(in)o(terested)h(in)f(describing)i
(a)e(whole)g(family)h(of)e(p)q(olyhedra)i Fn(D)q Fw(\()p Fo(p)p
Fw(\),)e(one)h(p)q(olyhedron)0 757 y(p)q(er)c(instance)h(of)f(the)g
(parameters)f Fo(p)p Fw(.)g(This)i(can)f(b)q(e)g(done)g(b)o(y)g(replacing)i
(v)o(ector)d Fo(b)g Fw(ab)q(o)o(v)o(e)h(with)g(an)g(a\016ne)0
824 y(com)o(bination)f(of)f(a)f(set)h(of)g(parameters)g Fo(p)p
Fw(.)f(By)i(so)e(doing,)i(w)o(e)f(obtain)g(a)g(parameterized)h(p)q
(olyhedron:)655 944 y Fn(D)q Fw(\()p Fo(p)p Fw(\))c(=)h Fn(f)i
Fo(x)27 b Fw(:)h Fo(Ax)13 b Fn(\025)g Fo(B)r(p)d Fw(+)h Fo(b)j
Fn(g)12 1065 y Fw(where)f Fo(A)f Fw(and)g Fo(B)j Fw(are)d(constan)o(t)f
(matrices)h(and)h Fo(b)e Fw(is)i(a)f(constan)o(t)f(v)o(ector.)g(This)i
(parameterized)f(p)q(olyhedron)0 1131 y(can)21 b(b)q(e)h(rewritten)g(in)g
(the)f(form)g(of)g(a)g(non-parameterized)h(p)q(olyhedron)h(in)f(the)f(com)o
(bined)i(data)e(and)0 1198 y(parameter)14 b(space)i(as:)554
1343 y Fn(D)q Fw(\()p Fo(p)p Fw(\))41 b(=)h Fn(f)15 b Fo(x)27
b Fw(:)899 1296 y Fk(\020)929 1345 y Fo(A)42 b Fn(\000)p Fo(B)1083
1296 y Fk(\021)1115 1271 y( )1153 1311 y Fo(x)1155 1378 y(p)1185
1271 y Fk(!)1230 1343 y Fn(\025)13 b Fo(b)i Fn(g)600 1493 y(D)636
1474 y Fx(0)690 1493 y Fw(=)42 b Fn(f)805 1421 y Fk( )843 1461
y Fo(x)845 1528 y(p)875 1421 y Fk(!)935 1493 y Fw(:)28 b Fo(A)1010
1474 y Fx(0)1029 1421 y Fk( )1068 1461 y Fo(x)1069 1528 y(p)1099
1421 y Fk(!)1145 1493 y Fn(\025)13 b Fo(b)h Fn(g)0 1650 y Fl(2.2)56
b(The)18 b(p)r(olyhedron)f(scanning)i(problem)0 1746 y Fw(T)l(o)f(generate)f
(sequen)o(tial)i(co)q(de)g(for)e(op)q(erations)h(and)g(v)m(ariables)i
(declared)f(o)o(v)o(er)e(p)q(olyhedra,)i(a)e(lo)q(op)i(nest)0
1813 y(whic)o(h)c(scans)e(the)h(giv)o(en)h(p)q(olyhedral)g(region)f(m)o(ust)f
(b)q(e)i(generated.)e(The)h Fp(p)n(olyhe)n(dr)n(on)h(sc)n(anning)e(pr)n
(oblem)g Fw(is)0 1879 y(formally)i(stated)g(as:)0 1946 y(Giv)o(en)g(a)g
(parameterized)g(p)q(olyhedral)h(domain)g Fn(D)q Fw(\()p Fo(p)p
Fw(\))e(in)i(terms)e(of)g(a)h(parameter)f(v)o(ector)g Fo(p)g
Fw(and)h(a)g(set)f(of)h Fo(k)0 2013 y Fw(constrain)o(ts:)655
2079 y Fn(D)q Fw(\()p Fo(p)p Fw(\))d(=)h Fn(f)i Fo(x)27 b Fw(:)h
Fo(Ax)13 b Fn(\025)g Fo(B)r(p)d Fw(+)h Fo(b)j Fn(g)15 2178
y Fw(where)h Fo(A)g Fw(and)h Fo(B)h Fw(are)e(constan)o(t)f(matrices)h(of)g
(size)h Fo(k)11 b Fn(\002)f Fo(n)15 b Fw(and)g Fo(k)c Fn(\002)f
Fo(m)15 b Fw(resp)q(ectiv)o(ely)l(,)i(and)e Fo(b)f Fw(is)i(a)f(constan)o(t)0
2244 y Fo(k)q Fw(-v)o(ector,)0 2311 y(pro)q(duce)h(the)f(set)g(of)g(lo)q(op)h
(b)q(ound)g(expressions)g Fo(L)882 2318 y Fj(1)902 2311 y Fo(;)8
b(U)954 2318 y Fj(1)973 2311 y Fo(;)g Fn(\001)g(\001)g(\001)t
Fo(L)1084 2318 y Fi(n)1108 2311 y Fo(;)g(U)1160 2318 y Fi(n)1198
2311 y Fw(suc)o(h)15 b(that)g(lo)q(op)g(nest:)p eop
%%Page: 3 7
bop 118 -76 a Fp(L)n(o)n(op)16 b(Nest)g(Synthesis)e(using)i(the)h(Polyhe)n
(dr)n(al)e(Libr)n(ary)892 b Fw(3)p 118 -48 1890 4 v 744 86
a Fh(DO)73 b Fo(x)891 93 y Fj(1)924 86 y Fw(=)13 b Fo(L)1003
93 y Fj(1)1022 86 y Fo(;)8 b(U)1074 93 y Fj(1)865 136 y Fw(.)865
153 y(.)865 169 y(.)865 236 y Fh(DO)230 b Fo(x)1169 243 y Fi(n)1205
236 y Fw(=)13 b Fo(L)1284 243 y Fi(n)1307 236 y Fo(;)8 b(U)1359
243 y Fi(n)1143 302 y Fw(b)q(o)q(dy)865 369 y Fh(END)744 436
y(END)118 531 y Fw(will)17 b(visit)e(once)h(and)f(only)g(once)g(all)h(in)o
(teger)f(p)q(oin)o(ts)h(in)f(the)g(domain)h Fn(D)q Fw(\()p
Fo(p)p Fw(\))e(in)i(lexicographic)h(order)d(of)h(the)118 598
y(elemen)o(ts)h(of)f Fo(x)d Fw(=)h(\()p Fo(x)486 605 y Fj(1)506
598 y Fo(;)8 b Fn(\001)g(\001)g(\001)d Fo(;)j(x)634 605 y Fi(n)656
598 y Fw(\).)189 664 y(When)13 b(talking)g(ab)q(out)g(a)g(particular)g(lo)q
(op)h(v)m(ariable)g Fo(x)1132 671 y Fi(i)1146 664 y Fw(,)e(w)o(e)h(use)g(the)
g(terminology)g Fp(outer)i(lo)n(ops)e Fw(to)f(refer)118 731
y(to)k(lo)q(ops)g(whic)o(h)i(enclose)f(the)f Fo(x)685 738 y
Fi(i)699 731 y Fw({lo)q(op,)g(that)g(is,)g(the)h(lo)q(ops)f(of)g(v)m
(ariables)i Fo(x)1461 738 y Fi(j)1479 731 y Fo(;)8 b(j)16 b(<)f(i)p
Fw(.)g(W)l(e)h(use)h Fp(inner)f(lo)n(ops)118 798 y Fw(to)f(refer)g(to)f(the)i
(lo)q(ops)f(con)o(tained)h(in)g(the)f Fo(x)893 805 y Fi(i)907
798 y Fw({lo)q(op,)h(that)e(is,)h(the)h(lo)q(ops)f(of)g(v)m(ariables)i
Fo(x)1662 805 y Fi(j)1680 798 y Fo(;)8 b(j)14 b(>)f(i)p Fw(.)189
864 y(The)f(problem)i(of)e(\014nding)i(lo)q(op)f(b)q(ounds)g(is)g(related)g
(to)f(the)h(linear)g(programming)f(problem)h(and)g(shares)118
931 y(its)f(complexit)o(y)l(.)h(F)l(ortunately)l(,)e(these)h(problems)h(tend)
f(to)g(b)q(e)g(relativ)o(ely)h(small)g(\(in)f(terms)g(of)f(the)h(dimension)
118 998 y(and)i(n)o(um)o(b)q(er)g(of)f(constrain)o(ts\))f(due)i(to)f(the)h
(fact)f(that)g(lo)q(ops)g(are)h(not)f(deeply)i(nested,)e(and)h(exact)f
(solutions)118 1064 y(for)i(t)o(ypical)h(problems)f(can)h(b)q(e)g(found)f(in)
h(reasonable)g(time.)118 1221 y Fz(3)69 b(Example)118 1332
y Fw(Giv)o(en)16 b(the)f(domain)h(de\014ned)g(as)f(:)118 1436
y Fh({i,j,k,N,M)23 b(|)g(i>=0;)h(-i+M>=0;)e(j>=0;)h(-j+N>=0;)g(k>=0;)g
(i+j-k>=0}:S)118 1540 y Fw(and)13 b(the)g(con)o(text)f(domain)h
Fh({i,j,k,N,M)23 b(|)h(N>0;)f(M>0})12 b Fw(describing)j(what)d(is)h(kno)o(wn)
g(to)f(b)q(e)h(true)g(a)f(priori,)118 1607 y(the)19 b(follo)o(wing)h(four)f
(di\013eren)o(t)g(lo)q(op)g(nests)g(w)o(ere)g(generated)g(b)o(y)g(calling)i
(the)e(prop)q(osed)g(pro)q(cedure)h(four)118 1674 y(times,)15
b(eac)o(h)g(time)h(scanning)g(the)f(domain)h(in)g(a)f(di\013eren)o(t)g
(order.)p 134 1726 922 2 v 134 2012 2 287 v 148 1764 a Fq({i,j,k,N,M)h(|)j
(0<=i<=M})e(:)207 1818 y({i,j,k,N,M)f(|)j(0<=j<=N})e(:)266
1872 y({i,j,k,N,)o(M)g(|)i(0<=k<=i+j)o(})e(:)i(S)148 1988 y
Fw(a.)c(The)g(lo)q(op)h(nest)f(in)h Fn(f)p Fw(i,)f(j,)g(k)p
Fn(g)g Fw(scan)g(order.)p 1054 2012 V 134 2014 922 2 v 1071
1726 V 1071 2012 2 287 v 1085 1764 a Fq({i,j,k,N,)o(M)h(|)k(0<=j<=N})c(:)1144
1818 y({i,j,k,N)o(,M)g(|)k(0<=k<=j+)o(M})c(:)1202 1872 y({i,j,k,N,M)g(|)j
(0<=i<=M;)e(i>=k-j})g(:)i(S)1085 1988 y Fw(b.)c(The)g(lo)q(op)h(nest)f(in)h
Fn(f)p Fw(j,)f(k,)f(i)p Fn(g)i Fw(scan)f(order.)p 1990 2012
V 1071 2014 922 2 v 134 2020 V 134 2306 2 287 v 148 2058 a
Fq({i,j,k,N,M)h(|)j(0<=k<=N+M>)o(=0})d(:)207 2112 y({i,j,k,N,M)g(|)j
(0<=j<=N;)e(j>=k-M})g(:)266 2166 y({i,j,k,N,)o(M)g(|)i(0<=i<=M;)d(i>=k-j})h
(:)j(S)148 2282 y Fw(c.)15 b(The)h(lo)q(op)f(nest)h(in)g Fn(f)p
Fw(k,)e(j,)h(i)p Fn(g)g Fw(scan)h(order.)p 1054 2306 V 134
2308 922 2 v 1071 2020 V 1071 2306 2 287 v 1085 2058 a Fq({i,j,k,N,)o(M)g(|)k
(0<=i<=M})c(:)1144 2112 y({i,j,k,N)o(,M)g(|)k(0<=k<=i+)o(N})c(:)1202
2166 y({i,j,k,N,M)g(|)j(0<=j<=N;)e(j>=k-i})g(:)i(S)1085 2282
y Fw(d.)c(The)g(lo)q(op)h(nest)f(in)h Fn(f)p Fw(i,)f(k,)g(j)p
Fn(g)g Fw(scan)g(order.)p 1990 2306 V 1071 2308 922 2 v 118
2422 a Fz(4)69 b(Imple)o(m)n(e)o(n)n(tati)o(on)118 2533 y Fw(The)16
b(implemen)o(tation)g(of)f(the)g(prop)q(osed)h(metho)q(d)f(is)h(based)f(on)g
(the)h(p)q(olyhedral)h(library[10)o(].)p eop
%%Page: 4 8
bop 0 -76 a Fw(4)610 b Fp(Herv)o(\023)-22 b(e)16 b(L)n(e)g(V)m(er)n(ge,)47
b(Vinc)n(ent)15 b(V)m(an)g(Dongen)49 b(and)32 b(Dor)n(an)17
b(K.)f(Wilde)p 0 -48 1890 4 v 459 490 225 2 v 459 489 a Fg(\033)961
321 y Ff(.)951 324 y(.)940 328 y(.)929 331 y(.)918 335 y(.)908
339 y(.)897 342 y(.)886 346 y(.)875 349 y(.)865 353 y(.)854
357 y(.)843 360 y(.)832 364 y(.)821 367 y(.)811 371 y(.)800
374 y(.)789 378 y(.)778 382 y(.)768 385 y(.)757 389 y(.)746
392 y(.)735 396 y(.)725 400 y(.)714 403 y(.)703 407 y(.)692
410 y(.)681 414 y(.)671 418 y(.)660 421 y(.)649 425 y(.)638
428 y(.)628 432 y(.)617 435 y(.)606 439 y(.)595 443 y(.)585
446 y(.)574 450 y(.)563 453 y(.)552 457 y(.)541 461 y(.)531
464 y(.)520 468 y(.)509 471 y(.)498 475 y(.)488 479 y(.)477
482 y(.)466 486 y(.)455 489 y(.)p 740 491 394 4 v 1130 264
a(.)1139 271 y(.)1148 278 y(.)1157 285 y(.)1166 291 y(.)1175
298 y(.)1184 305 y(.)1193 312 y(.)1202 318 y(.)1211 325 y(.)1220
332 y(.)1229 339 y(.)1238 345 y(.)1247 352 y(.)1256 359 y(.)1265
366 y(.)1274 372 y(.)1283 379 y(.)1292 386 y(.)1301 393 y(.)1310
399 y(.)1319 406 y(.)1328 413 y(.)1337 420 y(.)1346 426 y(.)1355
433 y(.)1364 440 y(.)1373 447 y(.)1382 453 y(.)1391 460 y(.)1400
467 y(.)p 1336 332 2 11 v 1336 353 V 1336 374 V 1336 396 V
1336 417 V 1336 439 V 1336 460 V 1336 481 V 1336 503 V 1336
524 V 1336 546 V 1133 163 2 12 v 1133 186 V 1133 208 V 1133
231 V 1133 253 V 1133 276 V 1133 298 V 1133 321 V 1133 343
V 1133 366 V 1133 388 V 1133 411 V 1133 433 V 1133 456 V 1133
478 V 1133 501 V 1133 523 V 1133 546 V 740 219 2 11 v 740 241
V 740 263 V 740 285 V 740 306 V 740 328 V 740 350 V 740 372
V 740 393 V 740 415 V 740 437 V 740 459 V 740 480 V 740 502
V 740 524 V 740 546 V 548 332 V 548 353 V 548 374 V 548 396
V 548 417 V 548 439 V 548 460 V 548 481 V 548 503 V 548 524
V 548 546 V 683 490 2 450 v 684 81 a Fg(6)p 684 490 732 2 v
1374 489 a(-)961 321 y Ff(.)972 323 y(.)983 326 y(.)994 329
y(.)1005 332 y(.)1016 334 y(.)1027 337 y(.)1038 340 y(.)1049
343 y(.)1060 345 y(.)1071 348 y(.)1082 351 y(.)1093 354 y(.)1104
356 y(.)1115 359 y(.)1126 362 y(.)1137 365 y(.)1148 367 y(.)1159
370 y(.)1170 373 y(.)1181 375 y(.)1192 378 y(.)1203 381 y(.)1214
384 y(.)1225 386 y(.)1236 389 y(.)1247 392 y(.)1258 395 y(.)1269
397 y(.)1280 400 y(.)1291 403 y(.)1302 406 y(.)1313 408 y(.)1324
411 y(.)1335 414 y(.)1346 417 y(.)1356 419 y(.)1367 422 y(.)1378
425 y(.)1389 428 y(.)1400 430 y(.)1411 433 y(.)737 264 y(.)729
272 y(.)721 280 y(.)713 288 y(.)705 296 y(.)697 304 y(.)689
312 y(.)681 320 y(.)673 328 y(.)665 336 y(.)657 344 y(.)649
352 y(.)641 360 y(.)633 368 y(.)625 376 y(.)617 383 y(.)609
391 y(.)602 399 y(.)594 407 y(.)586 415 y(.)578 423 y(.)570
431 y(.)562 439 y(.)554 447 y(.)546 455 y(.)538 463 y(.)530
471 y(.)522 479 y(.)514 487 y(.)506 495 y(.)498 503 y(.)490
511 y(.)482 518 y(.)475 526 y(.)467 534 y(.)p 3 setlinewidth
np 740 265 a 908 97 li st 3 setlinewidth np 909 96 a 1133 264
li st 3 setlinewidth np 1134 265 a 966 321 li st 3 setlinewidth
np 965 321 a 741 265 li st 1415 546 a Fe(x)1443 553 y Fi(i)1297
602 y Fy(ub2)-268 b(ub)-441 b(lb)605 96 y Fe(x)633 103 y Fi(j)517
602 y Fy(lb2)389 728 y Fw(Figure)15 b(1:)g(Pro)s(jection)g(using)h(F)l
(ourier{Motzkin)f(Elimination)0 860 y Fl(4.1)56 b(Basis)18
b(of)h(metho)r(d)0 956 y Fw(This)14 b(metho)q(d)h(resem)o(bles)f(the)g(F)l
(ourier{Motzkin)g(\(FM\))f(metho)q(d)h(in)g(that)g(it)g(pro)s(jects)f(the)h
(p)q(olyhedron)h(in)0 1022 y(the)f(canonical)g(direction)h(of)e(inner)i(lo)q
(op)f(v)m(ariables)g(in)h(order)e(to)g(eliminate)i(dep)q(endencies)h(on)e
(them.)f(Th)o(us)0 1089 y(b)q(ounds)f(on)e(a)h(lo)q(op)g(are)g(found)g(indep)
q(enden)o(t)i(of)e(inner)g(lo)q(op)h(indices.)g(Ho)o(w)o(ev)o(er,)e(the)h(FM)
f(metho)q(d)h(considers)0 1156 y(all)k(pairs)f(of)f(constrain)o(ts)g(when)h
(\014nding)h(the)f(b)q(ound)g(on)g(the)g(pro)s(jection.)f(In)h(\014gure)g(1,)
f(for)g(example,)h(lo)o(w)o(er)0 1222 y(b)q(ounds)22 b Fo(l)q(b)p
Fw(2)e(and)i Fo(l)q(b)e Fw(and)h(upp)q(er)i(b)q(ounds)f Fo(ub)p
Fw(2)e(and)i Fo(ub)f Fw(are)g(all)h(considered)h(b)o(y)e(the)g(FM)g(metho)q
(d.)g(In)0 1289 y(general,)e(giv)o(en)g Fo(n)g Fw(constrain)o(ts,)f(as)h(man)
o(y)f(as)841 1271 y Fi(n)862 1259 y Fd(2)p 841 1278 39 2 v
851 1305 a Fj(4)903 1289 y Fw(lo)q(op)h(b)q(ounds)h(could)g(b)q(e)g
(generated)e(in)i(eliminating)h(a)0 1356 y(single)14 b(v)m(ariable,)f(and)g
(this)g(n)o(um)o(b)q(er)f(gro)o(ws)f(exp)q(onen)o(tially)k(with)e(the)f(n)o
(um)o(b)q(er)h(of)f(v)m(ariables.)h(Most)f(of)g(these)0 1422
y(b)q(ounds)k(turn)f(out)g(to)f(b)q(e)i(redundan)o(t)f(\(non-tigh)o(t\))g
(and)g(m)o(ust)g(b)q(e)g(eliminated.)i(The)f(elimination)h(of)e(these)0
1489 y(redundan)o(t)h(lo)q(op)f(b)q(ounds)h(is)g(a)f(signi\014can)o(t)h
(problem)g(when)g(using)g(the)f(FM)f(metho)q(d.)71 1555 y(The)d(prop)q(osed)g
(metho)q(d)g(is)g(based)g(on)g(the)g(double)h(description)h(b)o(y)d(Motzkin)
1399 1539 y Fj(1)1430 1555 y Fw([9)o(])h(whic)o(h)g(only)h(considers)0
1622 y(pairs)i(of)f(constrain)o(ts)g(that)g(are)h Fp(adjac)n(ent)p
Fw(,)f(and)h(therefore)f(nev)o(er)h(generates)f(an)o(y)g(redundan)o(t)h(b)q
(ounds)h(\(lik)o(e)0 1689 y Fo(l)q(b)p Fw(2)g(and)i Fo(ub)p
Fw(2)f(in)i(the)f(example\).)g(Th)o(us)f(the)h(redundan)o(t)g(b)q(ound)h
(elimination)h(phase)e(of)g(the)f(FM)h(metho)q(d)0 1755 y(is)j(replaced)g
(with)g(an)f(adjacency)h(test)f(on)g(pairs)g(of)g(constrain)o(ts)g(in)h(the)g
(prop)q(osed)f(metho)q(d.)g(This)h(test)0 1822 y(is)g(accomplished)h(v)o(ery)
e(e\016cien)o(tly)h(assuming)g(the)f(ra)o(ys)f(and)h(v)o(ertices)h(of)f(the)g
(p)q(olyhedron)h(are)f(kno)o(wn.)0 1888 y(The)14 b(algorithm)g(main)o(tains)g
(b)q(oth)f(the)h(constrain)o(t)f(and)h(the)g(ra)o(y/v)o(ertex)e(represen)o
(tation)i(of)f(a)g(p)q(olyhedron)0 1955 y(allo)o(wing)18 b(the)e(emplo)o(y)i
(of)e(the)h(adjacency)g(test.)f(Keeping)i(the)f(dual)h(represen)o(tation)f
(is)g(only)g(feasible)h(for)0 2022 y(small)c(dimensional)h(domains)f(since)h
(a)e Fo(d)p Fw({p)q(olyhedron)h(with)f Fo(n)h Fw(constrain)o(ts)f(migh)o(t)g
(ha)o(v)o(e)g(as)g(man)o(y)g(as)g Fo(d)1828 2004 y Fx(b)1849
1990 y Fc(n)p 1848 1996 20 2 v 1850 2017 a Fd(2)1872 2004 y
Fx(c)0 2088 y Fw(ra)o(ys/v)o(ertices,)18 b(in)i(the)g(w)o(orst)e(case.)h(W)l
(e)g(rely)h(on)f(the)h(fact)f(that)f(computational)i(domains)g(tend)f(to)g(b)
q(e)0 2155 y(relativ)o(ely)14 b(small)g(p)q(olyhedra)g(\(in)g(terms)e(of)h
(the)g(dimension)i(and)e(n)o(um)o(b)q(er)h(of)f(constrain)o(ts\))f(due)i(to)e
(the)h(fact)0 2222 y(that)h(lo)q(ops)i(are)f(not)g(deeply)i(nested.)0
2353 y Fl(4.2)56 b(Add)19 b(Ra)n(ys)g(to)f(a)h(Domain)0 2449
y Fw(The)j(library)h(function)g Fm(DomainAddRa)o(ys)g Fw(joins)f(a)g(set)g
(of)f(lines,)j(ra)o(ys,)d(or)g(p)q(oin)o(ts)i(to)e(a)h(domain)h(and)0
2516 y(pro)q(duces)f(the)g(resulting)h(domain)e(with)h(all)h(redundancies)g
(eliminated.)g(It)f(is)g(used)g(in)g(this)g(pap)q(er)g(to)p
0 2595 756 2 v 52 2622 a Fd(1)69 2638 y Fr(sometime)14 b(erroneously)h
(attributed)g(to)e(Chernik)o(o)o(v)n(a)p eop
%%Page: 5 9
bop 118 -76 a Fp(L)n(o)n(op)16 b(Nest)g(Synthesis)e(using)i(the)h(Polyhe)n
(dr)n(al)e(Libr)n(ary)892 b Fw(5)p 118 -48 1890 4 v 1 setlinewidth
np 358 265 a 526 97 li st 1 setlinewidth np 527 96 a 751 264
li st 1 setlinewidth np 752 265 a 584 321 li st 1 setlinewidth
np 583 321 a 359 265 li st 301 490 2 450 v 302 81 a Fg(6)p
302 490 507 2 v 766 489 a(-)p 1426 490 2 450 v 1427 81 a(6)p
1427 490 518 2 v 1902 489 a(-)1483 81 y(6)p 1482 546 2 507
v 465 x(?)1876 81 y(6)p 1876 546 V 465 x(?)p 1483 40 19 2 v
1520 40 V 1558 40 V 1595 40 V 1633 40 V 1670 40 V 1708 40 V
1745 40 V 1783 40 V 1820 40 V 1858 40 V 1483 547 V 1520 547
V 1558 547 V 1595 547 V 1633 547 V 1670 547 V 1708 547 V 1745
547 V 1783 547 V 1820 547 V 1858 547 V 1 setlinewidth np 1483
265 a 1521 227 li st 1 setlinewidth np 1548 199 a 1586 161
li st 1 setlinewidth np 1613 134 a 1651 96 li st 1 setlinewidth
np 1652 96 a 1695 128 li st 1 setlinewidth np 1742 164 a 1785
196 li st 1 setlinewidth np 1833 232 a 1876 264 li st 1 setlinewidth
np 1876 265 a 1825 282 li st 1 setlinewidth np 1759 304 a 1708
321 li st 1 setlinewidth np 1708 321 a 1656 309 li st 1 setlinewidth
np 1622 299 a 1570 287 li st 1 setlinewidth np 1535 278 a 1483
266 li st 1089 126 a(6)p 1088 422 2 338 v 296 x(?)1910 557
y Fe(x)1938 564 y Fi(i)222 96 y Fe(x)250 103 y Fi(j)1336 96
y Fe(x)1364 103 y Fi(j)1462 602 y Fy(lb)346 b(ub)752 568 y
Fe(x)780 575 y Fi(i)1045 265 y Fe(l)1060 272 y Fi(j)864 287
y Fb(+)293 b(=)593 728 y Fw(Figure)15 b(2:)g(Adding)h(a)f(line)i(to)d(pro)s
(ject)h(out)g(an)g(index)p 548 898 139 2 v 548 1067 2 169 v
684 1067 V 548 1069 139 2 v 545 933 a Ff(.)547 931 y(.)548
930 y(.)550 928 y(.)551 927 y(.)553 925 y(.)555 924 y(.)556
922 y(.)558 921 y(.)559 919 y(.)561 918 y(.)562 916 y(.)564
914 y(.)565 913 y(.)567 911 y(.)568 910 y(.)570 908 y(.)571
907 y(.)573 905 y(.)574 904 y(.)576 902 y(.)578 901 y(.)579
899 y(.)p 1 setlinewidth np 549 967 a 616 900 li st 1 setlinewidth
np 549 1001 a 650 900 li st 1 setlinewidth np 549 1034 a 683
900 li st 1 setlinewidth np 549 1068 a 683 934 li st 1 setlinewidth
np 583 1068 a 684 967 li st 1 setlinewidth np 617 1068 a 684
1001 li st 647 1068 a(.)648 1066 y(.)650 1065 y(.)651 1063
y(.)653 1062 y(.)654 1060 y(.)656 1059 y(.)657 1057 y(.)659
1056 y(.)660 1054 y(.)662 1052 y(.)663 1051 y(.)665 1049 y(.)666
1048 y(.)668 1046 y(.)670 1045 y(.)671 1043 y(.)673 1042 y(.)674
1040 y(.)676 1039 y(.)677 1037 y(.)679 1036 y(.)680 1034 y(.)p
1504 898 V 1504 1067 2 169 v 1640 1067 V 1504 1069 139 2 v
1501 933 a(.)1503 931 y(.)1504 930 y(.)1506 928 y(.)1507 927
y(.)1509 925 y(.)1511 924 y(.)1512 922 y(.)1514 921 y(.)1515
919 y(.)1517 918 y(.)1518 916 y(.)1520 914 y(.)1521 913 y(.)1523
911 y(.)1524 910 y(.)1526 908 y(.)1527 907 y(.)1529 905 y(.)1530
904 y(.)1532 902 y(.)1534 901 y(.)1535 899 y(.)p 1 setlinewidth
np 1505 967 a 1572 900 li st 1 setlinewidth np 1505 1001 a
1606 900 li st 1 setlinewidth np 1505 1034 a 1639 900 li st
1 setlinewidth np 1505 1068 a 1639 934 li st 1 setlinewidth
np 1539 1068 a 1640 967 li st 1 setlinewidth np 1573 1068 a
1640 1001 li st 1603 1068 a(.)1604 1066 y(.)1606 1065 y(.)1607
1063 y(.)1609 1062 y(.)1610 1060 y(.)1612 1059 y(.)1613 1057
y(.)1615 1056 y(.)1616 1054 y(.)1618 1052 y(.)1619 1051 y(.)1621
1049 y(.)1622 1048 y(.)1624 1046 y(.)1626 1045 y(.)1627 1043
y(.)1629 1042 y(.)1630 1040 y(.)1632 1039 y(.)1633 1037 y(.)1635
1036 y(.)1636 1034 y(.)p 1504 1068 2 282 v 1505 828 a Fg(6)p
1505 1069 282 2 v 1745 1068 a(-)p 323 898 364 2 v 323 1123
2 225 v 684 1123 V 323 1125 364 2 v 1279 898 V 1279 1123 2
225 v 1640 1123 V 1279 1125 364 2 v 548 842 397 2 v 548 1067
2 225 v 943 1067 V 548 1069 397 2 v 1697 899 a Fa(C)808 978
y(A)427 1034 y(B)914 b(B)744 1250 y Fw(Figure)16 b(3:)e(Domain)h
(Simpli\014cation)118 1384 y(eliminate)g(\(or)d(pro)s(ject)h(out\))f(the)h
(inner)i(lo)q(op)e(indices)j(from)c(the)h(b)q(ound)h(expressions)g(of)f
(outer)g(lo)q(ops.)g(This)118 1450 y(is)k(illustrated)g(in)g(\014gure)f(2)g
(where)g Fo(x)761 1457 y Fi(i)792 1450 y Fw(is)g(an)g(outer)g(lo)q(op)h(v)m
(ariable)g(and)f Fo(x)1409 1457 y Fi(j)1444 1450 y Fw(is)g(an)g(inner)h(lo)q
(op)g(v)m(ariable.)g(T)l(o)118 1517 y(compute)11 b(the)g(lo)q(op)g(b)q(ounds)
h(for)e(the)h Fo(x)786 1524 y Fi(i)800 1517 y Fw({lo)q(op)g(as)f(a)h
(function)g(of)g(parameters)e(and)i(outer)g(lo)q(op)g(v)m(ariables,)h(the)118
1584 y(inner)k(lo)q(op)f(v)m(ariables)h Fo(x)547 1591 y Fi(j)565
1584 y Fo(;)8 b(j)15 b(>)e(i)h Fw(m)o(ust)g(b)q(e)h(remo)o(v)o(ed)g(from)e
(the)i(domain.)g(This)g(is)g(done)h(b)o(y)e(pro)s(jecting)h(the)118
1650 y(scan)f(domain)h(in)f(the)h(direction)g(of)e(the)h(inner)i(lo)q(op)e(v)
m(ariables)h(on)o(to)e(the)i Fo(x)1429 1657 y Fi(i)1443 1650
y Fw(-axis,)f(giving)h Fo(l)q(b)d Fw(and)j Fo(ub)e Fw(as)h(the)118
1717 y(lo)o(w)o(er)c(and)h(upp)q(er)h(b)q(ounds)f(of)f Fo(x)668
1724 y Fi(i)683 1717 y Fw(,)g(resp)q(ectiv)o(ely)l(.)i(This)f(can)g(b)q(e)g
(accomplished)i(using)e(the)g(p)q(olyhedral)h(library)118 1784
y(b)o(y)i(adding)h(lines)g Fn(f)p Fo(l)467 1791 y Fi(i)p Fj(+1)526
1784 y Fo(;)8 b(l)561 1791 y Fi(i)p Fj(+2)619 1784 y Fo(;)g
Fn(\001)g(\001)g(\001)m(g)13 b Fw(in)i(the)f(direction)h(of)f(all)h(of)e(the)
h(inner)h(lo)q(op)g(v)m(ariables)g Fn(f)p Fo(x)1735 1791 y
Fi(i)p Fj(+1)1794 1784 y Fo(;)8 b(x)1841 1791 y Fi(i)p Fj(+2)1899
1784 y Fo(;)g Fn(\001)g(\001)g(\001)n(g)p Fw(.)118 1850 y(The)14
b(resulting)h(p)q(olyhedron)g(is)g(a)e(cylinder)j(op)q(en)e(in)h(the)f
(direction)h(of)f(inner)h(lo)q(op)f(v)m(ariables)h(\(as)e(sho)o(wn)h(in)118
1917 y(the)h(\014gure\))g(whic)o(h)i(has)e(no)g(constrain)o(ts)f(in)i(terms)f
(of)g(the)g(inner)h(lo)q(op)g(v)m(ariables.)118 2049 y Fl(4.3)56
b(Domain)17 b(Simplify)118 2145 y Fw(The)f(function)g Fp(simplify)f(in)h(c)n
(ontext)f Fw(called)i Fm(DomainSimplify)g Fw(in)f(the)f(library)h(is)g
(de\014ned)g(as)f(follo)o(ws:)232 2249 y(Giv)o(en)i(domains)g
Fo(A)g Fw(and)g Fo(B)r Fw(,)h(then)f(Simplify\()p Fo(A)p Fw(,)h
Fo(B)r Fw(\))g(=)f Fo(C)s Fw(,)f(when)h Fo(C)d Fn(\\)e Fo(B)18
b Fw(=)e Fo(A)11 b Fn(\\)h Fo(B)r Fw(,)17 b Fo(C)h Fn(\023)e
Fo(A)232 2315 y Fw(and)f(there)g(do)q(es)h(not)f(exist)g(an)o(y)g(other)g
(domain)h Fo(C)1130 2299 y Fx(0)1154 2315 y Fn(\033)d Fo(C)k
Fw(suc)o(h)f(that)f Fo(C)1490 2299 y Fx(0)1511 2315 y Fn(\\)10
b Fo(B)16 b Fw(=)d Fo(A)d Fn(\\)g Fo(B)r Fw(.)118 2419 y(The)k(domain)g
Fo(B)i Fw(is)f(called)g(the)f Fp(c)n(ontext)p Fw(.)e(The)i(simplify)i
(function)e(therefore)g(\014nds)g(the)g(largest)f(domain)h(set)118
2486 y(\(or)f(smallest)g(list)i(of)d(constrain)o(ts\))h(that,)f(when)i(in)o
(tersected)g(with)f(the)h(con)o(text)f Fo(B)j Fw(is)d(equal)h(to)f
Fo(A)6 b Fn(\\)g Fo(B)r Fw(.)15 b(The)118 2553 y(simplify)k(op)q(eration)f
(is)f(done)h(b)o(y)f(computing)h(the)f(in)o(tersection)h Fo(A)12
b Fn(\\)g Fo(B)20 b Fw(and)d(while)i(doing)f(so,)e(recording)118
2619 y(whic)o(h)e(constrain)o(ts)e(of)g Fo(A)h Fw(are)f(\\redundan)o(t")h
(with)g(result)g(of)g(the)f(in)o(tersection.)i(The)f(result)g(of)f(the)h
(simplify)p eop
%%Page: 6 10
bop 0 -76 a Fw(6)610 b Fp(Herv)o(\023)-22 b(e)16 b(L)n(e)g(V)m(er)n(ge,)47
b(Vinc)n(ent)15 b(V)m(an)g(Dongen)49 b(and)32 b(Dor)n(an)17
b(K.)f(Wilde)p 0 -48 1890 4 v 0 81 a Fw(op)q(eration)10 b(is)h(then)g(the)f
(domain)h Fo(A)f Fw(with)h(the)f(\\redundan)o(t")g(constrain)o(ts)g(remo)o(v)
o(ed.)f(A)i(simple)g(of)f(example)h(is)0 148 y(sho)o(wn)h(in)i(\014gure)f(3.)
f(In)i(the)e(example,)i(domain)f Fo(A)g Fw(is)g(simpli\014ed)i(\(resulting)f
(in)f(domain)h Fo(C)s Fw(\))e(b)o(y)h(eliminating)0 214 y(the)i(t)o(w)o(o)f
(constrain)o(ts)h(that)f(are)h(redundan)o(t)h(with)f(con)o(text)g(domain)h
Fo(B)r Fw(.)0 347 y Fl(4.4)56 b(Lo)r(op)18 b(Separation)0 443
y Fw(Using)c(the)g(ab)q(o)o(v)o(e)f(t)o(w)o(o)g(library)h(functions,)g(a)g
(function)g(can)g(b)q(e)h(written)e(whic)o(h)i(tak)o(es)e(a)g(sp)q(eci\014ed)
j(domain)0 509 y Fn(D)23 b Fw(and)f(separates)f(\(or)f(factors\))h(it)h(in)o
(to)f(an)h(in)o(tersection)g(of)f(the)h(initial)i(con)o(text)d(domain)h
Fn(D)1731 516 y Fj(0)1772 509 y Fw(and)g(a)0 576 y(sequence)16
b(of)e(lo)q(op)i(domains)f Fn(D)553 583 y Fj(1)573 576 y Fo(;)22
b Fn(D)643 583 y Fj(2)663 576 y Fo(;)g Fn(\001)8 b(\001)g(\001)k
Fw(\()p Fn(D)i Fw(=)f Fn(D)915 583 y Fj(0)959 576 y Fn(\\)24
b(D)1048 583 y Fj(1)1092 576 y Fn(\\)h(D)1182 583 y Fj(2)1226
576 y Fn(\\)f(\001)8 b(\001)g(\001)n Fw(\))15 b(where)g(eac)o(h)g(lo)q(op)g
(domain)g(is)0 642 y(not)e(a)f(function)i(of)f(inner)h(lo)q(op)g(v)m
(ariables.)g(Accordingly)l(,)g(the)f(lo)q(op)h(domain)f Fn(D)1378
649 y Fi(i)1392 642 y Fo(;)21 b(i)12 b Fn(\025)h Fw(1)f(can)i(b)q(e)f
(recursiv)o(ely)0 709 y(computed)j(as:)148 829 y Fn(D)183 836
y Fi(i)210 829 y Fw(=)d Fm(DomainSimplify)r Fw(\()i Fm(DomainAddRa)o(ys)p
Fw(\()g Fn(D)q Fo(;)8 b Fn(f)p Fo(l)1075 836 y Fi(i)p Fj(+1)1133
829 y Fo(;)g(l)1168 836 y Fi(i)p Fj(+2)1226 829 y Fo(;)23 b
Fn(\001)8 b(\001)g(\001)n(g)14 b Fw(\))p Fo(;)22 b Fn(D)1440
836 y Fj(0)1486 829 y Fn(\\)j(\001)8 b(\001)g(\001)e(D)1637
836 y Fi(i)p Fx(\000)p Fj(1)1711 829 y Fw(\);)0 1107 y Fz(5)69
b(Conclusion)0 1218 y Fw(W)l(e)22 b(ha)o(v)o(e)f(implemen)o(ted)i(the)e(pro)q
(cedure)i(describ)q(ed)g(in)g(this)e(pap)q(er,)h(and)g(tested)f(it)h(on)f(a)g
(n)o(um)o(b)q(er)h(of)0 1285 y(examples)g(\(kindly)h(pro)o(vided)f(b)o(y)f
(Marc)g(Le)h(F)l(ur\).)e(Its)i(di\016cult)h(to)d(fairly)i(compare)f(the)h(FM)
f(metho)q(d)0 1352 y(with)15 b(the)f(metho)q(d)h(describ)q(ed)h(here,)f(b)q
(ecause)g(of)f(the)h(di\013erences)g(in)h(implemen)o(tation.)f(The)g(FM)f
(metho)q(d)0 1418 y(programmed)e(b)o(y)h(Marc)f(Le)h(F)l(ur)g([8)o(])g(is)g
(based)g(on)g Fu(Caml)p Fw(,)f(an)h(in)o(terpreted)g(functional)h(language,)f
(where)g(as)0 1485 y(the)d(metho)q(d)h(describ)q(ed)h(here)f(is)g(programmed)
f(in)h(C.)f(T)l(esting)h(has)f(sho)o(wn)g(ab)q(out)g(t)o(w)o(o)f(orders)h(of)
g(magnitude)0 1551 y(di\013erence)16 b(in)g(run)g(time,)f(ho)o(w)o(ev)o(er,)f
(this)i(is)f(no)h(doubt)f(due)h(to)e(the)i(implemen)o(tation)g
(di\013erences.)71 1618 y(Some)g(examples)g(ha)o(v)o(e)g(b)q(een)h(found)g
(to)e(cause)h(problems)h(in)g(the)f(p)q(olyhedral)i(library)l(.)e(Tw)o(o)f
(di\013eren)o(t)0 1685 y(problems)22 b(ha)o(v)o(e)g(b)q(een)g(encoun)o
(tered.)g(The)g(\014rst)f(is)i(an)e(n)o(umeric)i(o)o(v)o(er\015o)o(w)d
(problem.)i(The)g(p)q(olyhedral)0 1751 y(library)d(p)q(erforms)e(exact)h
(rational)g(computation,)g(and)g(n)o(um)o(b)q(ers)g(are)f(stored)h(using)h
(32)e(bit)h(in)o(teger)g(n)o(u-)0 1818 y(merators)12 b(and)i(denominators.)f
(If)h(t)o(w)o(o)e(rational)i(n)o(um)o(b)q(ers)g(are)f(m)o(ultiplied,)j(and)e
(there)f(is)h(no)g(cancelation,)0 1884 y(then)22 b(the)g(storage)e
(requiremen)o(t)j(for)e(the)h(result)g(is)g(the)g(sum)f(of)h(the)g(storage)e
(for)h(the)h(t)o(w)o(o)e(op)q(erands)0 1951 y(\(measured)f(in)g(n)o(um)o(b)q
(er)g(of)g(bits\).)f(The)h(solution)h(to)e(this)h(problem)h(is)f(either)h(to)
e(use)h(a)f Fp(multi-pr)n(e)n(cision)0 2018 y(arithmetic)f(p)n(ackage)e
Fw(in)i(whic)o(h)f(storage)e(gro)o(ws)g(to)h(meet)g(demand,)g(or)g(to)g(in)o
(tegerize)h(the)g(v)o(ertices)f(b)o(y)h(ad-)0 2084 y(ding)g(additional)h
(constrain)o(ts)d(whic)o(h)i(\\c)o(hop)f(o\013)t(")f(non)h(in)o(tegral)h(v)o
(ertices)g(without)f(excluding)i(an)o(y)e(of)g(the)0 2151 y(in)o(tegral)h(p)q
(oin)o(ts)f(inside)i(the)e(p)q(olyhedron.)71 2218 y(The)c(second)i(problem)f
(is)g(a)f(memory)g(o)o(v)o(er\015o)o(w)g(problem.)g(Giv)o(en)h(a)g
Fo(d)f Fw(dimensional)j(p)q(olyhedron)f(with)e Fo(n)0 2284
y Fw(constrain)o(ts,)f(as)g(man)o(y)h(as)f Fo(n)489 2266 y
Fx(b)510 2253 y Fc(d)p 510 2259 17 2 v 510 2279 a Fd(2)531
2266 y Fx(c)560 2284 y Fw(v)o(ertices)h(could)h(b)q(e)g(required)f(in)h(the)f
(dual)h(represen)o(tation.)e(This)i(e\013ectiv)o(ely)0 2351
y(limits)j(computation)e(to)g(small)h(dimensional)i(p)q(olyhedra.)e(This)g
(problem)g(is)g(aggra)o(v)m(ated)f(b)o(y)g(the)g(fact)g(that)0
2417 y(the)k(curren)o(t)f(implemen)o(tation)i(allo)q(cates)f(a)f(\014xed)h
(amoun)o(t)f(of)g(w)o(ork)g(space)h(to)f(p)q(erform)g(a)g(computation.)0
2484 y(A)f(dynamic)h(w)o(ork)f(space)g(w)o(ould)h(b)q(e)f(b)q(etter)h(in)g
(ligh)o(t)g(of)e(this)i(problem.)71 2551 y(On)g(the)f(sunnier)i(side,)f(this)
g(metho)q(d)g(has)f(sev)o(eral)h(adv)m(an)o(tages.)e(First)h(of)g(all,)h
(this)g(metho)q(d)g(pro)q(duces)0 2617 y(w)o(ell)f(minimized)h(results)e(in)h
(a)f(con)o(v)o(enien)o(t)g(form.)f(The)h(implemen)o(tation)h(is)f(v)o(ery)g
(straigh)o(t)f(forw)o(ard,)f(using)p eop
%%Page: 7 11
bop 118 -76 a Fp(L)n(o)n(op)16 b(Nest)g(Synthesis)e(using)i(the)h(Polyhe)n
(dr)n(al)e(Libr)n(ary)892 b Fw(7)p 118 -48 1890 4 v 118 81
a(pro)q(cedures)21 b(from)f(the)g(p)q(olyhedral)i(library)l(.)f(Since)h(no)f
(redundan)o(t)f(b)q(ounds)i(are)e(generated,)g(as)g(in)h(the)118
148 y(F)l(ourier{Motzkin)15 b(metho)q(d,)g(w)o(e)g(exp)q(ect)h(this)g(metho)q
(d)f(to)g(b)q(e)h(more)f(e\016cien)o(t.)189 214 y(F)l(uture)c(exp)q(erimen)o
(tation)h(is)f(needed)h(to)f(empirically)i(compare)e(this)g(metho)q(d)h(to)e
(the)h(other)f(t)o(w)o(o)g(kno)o(wn)118 281 y(metho)q(ds.)118
410 y Fv(Ac)o(kno)o(wledgmen)n(ts)118 506 y Fw(W)l(e)15 b(thank)g(Marc)g(Le)h
(F)l(ur)f(for)f(his)i(collab)q(oration)g(and)g(the)f(examples)h(he)g(ga)o(v)o
(e)e(us.)118 661 y Fz(References)141 773 y Fw([1])22 b(C.)17
b(Ancourt)h(and)g(F.)f(Irigoin.)30 b(Scanning)19 b(p)q(olyhedra)g(with)f(DO)g
(lo)q(ops.)29 b(In)19 b Fp(Thir)n(d)f(Symp)n(osium)h(on)212
840 y(Principles)14 b(and)i(Pr)n(actic)n(e)g(of)g(Par)n(al)r(lel)f(Pr)n(o)n
(gr)n(amming)g(\(PPoPP\))p Fw(,)e(pages)i(39{50,)e(A)o(CM)h(SIGPLAN,)212
906 y(A)o(CM)g(Press,)h(1991.)141 1008 y([2])22 b(Zbigniew)c(Chamski.)27
b Fp(F)m(ast)17 b(and)i(E\016cient)e(Gener)n(ation)h(of)h(L)n(o)n(op)f
(Bounds)p Fw(.)26 b(T)l(ec)o(hnical)19 b(Rep)q(ort)f(In-)212
1074 y(ternal)d(Publication)i(771,)d(IRISA,)i(Rennes,)g(F)l(rance,)f(Oct)h
(1993.)141 1176 y([3])22 b(J.-F.)13 b(Collard,)h(P)l(.)g(F)l(eautrier,)g(and)
g(T.)f(Risset.)20 b Fp(Construction)15 b(of)g(DO)g(lo)n(ops)g(fr)n(om)h
(systems)e(of)h(a\016ne)212 1242 y(c)n(onstr)n(aints)p Fw(.)j(T)l(ec)o
(hnical)f(Rep)q(ort)e(93{15,)f(Ecole)h(Normale)h(Sup)o(\023)-21
b(erieure)16 b(de)f(Ly)o(on,)g(Ma)o(y)f(1993.)141 1344 y([4])22
b(P)l(.)d(F)l(eautrier.)34 b(Data\015o)o(w)18 b(analysis)j(of)f(arra)o(y)e
(and)i(scalar)g(references.)35 b Fp(International)19 b(Journal)i(of)212
1410 y(Par)n(al)r(lel)15 b(Pr)n(o)n(gr)n(amming)p Fw(,)f(20\(1\):23{53,)e(F)l
(eb)j(1991.)141 1512 y([5])22 b(P)l(.)32 b(F)l(eautrier.)72
b(P)o(arametric)32 b(in)o(teger)h(programming.)71 b Fp(RAIR)o(O)31
b(R)n(e)n(cher)n(che)h(Op)o(\023)-22 b(er)n(ationel)r(le)p
Fw(,)212 1578 y(22\(3\):243{2)o(68,)12 b(Sep)j(1988.)141 1680
y([6])22 b(F.)14 b(Irigoin.)22 b Fp(Co)n(de)16 b(gener)n(ation)g(for)h(the)g
(hyp)n(erplane)f(metho)n(d)h(and)g(for)g(lo)n(op)f(inter)n(change)p
Fw(.)k(T)l(ec)o(hnical)212 1746 y(Rep)q(ort)c(ENSMP-CAI-88-E102/CAI/I,)f
(Ecole)h(Nationale)h(Sup)q(erieure)h(des)e(Mines)g(de)g(P)o(aris,)g(Oct)212
1813 y(1988.)141 1914 y([7])22 b(D.)13 b(J.)h(Kuc)o(k.)20 b
Fp(The)14 b(Structur)n(e)i(of)f(Computers)h(and)f(Computations)p
Fw(.)20 b(J.)14 b(Wiley)h(and)f(Sons,)g(NY,)f(1978.)141 2015
y([8])22 b(M.)12 b(Le)i(F)l(ur,)e(J.-L.)i(P)o(azat,)e(and)h(F.)f(Andr)o(\023)
-21 b(e.)19 b Fp(Static)14 b(Domain)h(A)o(nalysis)e(for)i(Compiling)e
(Commutative)212 2082 y(L)n(o)n(op)i(Nests)p Fw(.)k(T)l(ec)o(hnical)e(Rep)q
(ort)f(757,)e(IRISA,)i(Septem)o(b)q(er)g(1993.)141 2183 y([9])22
b(T.)e(S.)h(Motzkin,)f(H.)h(Rai\013a,)g(G.)f(L.)h(Thompson,)f(and)i(R.)f(M.)f
(Thrall.)38 b(The)21 b(double)h(description)212 2250 y(metho)q(d.)e
Fp(The)n(o)n(dor)n(e)15 b(S.)h(Motzkin:)f(Sele)n(cte)n(d)g(Pap)n(ers)p
Fw(,)g(1953.)118 2351 y([10])22 b(D.)15 b(Wilde.)22 b Fp(A)17
b(Libr)n(ary)f(for)h(Doing)g(Polyhe)n(dr)n(al)f(Op)n(er)n(ations)p
Fw(.)k(T)l(ec)o(hnical)e(Rep)q(ort)e(In)o(ternal)g(Publica-)212
2418 y(tion)f(785,)f(IRISA,)i(Rennes,)g(F)l(rance,)f(Dec)h(1993.)118
2519 y([11])22 b(M.E.)13 b(W)l(olf)i(and)g(M.)f(Lam.)20 b(Lo)q(op)15
b(transformation)e(theory)h(and)h(an)g(algorithm)g(to)f(maximize)i(paral-)212
2586 y(lelism.)21 b Fp(IEEE)15 b(T)m(r)n(ansactions)g(on)h(Par)n(al)r(lel)f
(and)h(Distribute)n(d)h(Systems)p Fw(,)d(2\(4\):452{47)o(1,)e(Oct)j(1991.)p
eop
%%Page: 8 12
bop 0 -76 a Fw(8)610 b Fp(Herv)o(\023)-22 b(e)16 b(L)n(e)g(V)m(er)n(ge,)47
b(Vinc)n(ent)15 b(V)m(an)g(Dongen)49 b(and)32 b(Dor)n(an)17
b(K.)f(Wilde)p 0 -48 1890 4 v eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

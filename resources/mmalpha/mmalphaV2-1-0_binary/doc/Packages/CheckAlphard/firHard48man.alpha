system ControlfirModule ( )
       returns          (HPipe_ctl1_Init : {t | t=1} | {t | 2<=t<=5} of boolean; 
                         xPipe_ctl2_Init : {t | t=2} | {t | 3<=t<=6} of boolean);
let
  HPipe_ctl1_Init[t] = 
      case
        { | t=1} : True[];
        { | 2<=t<=5} : False[];
      esac;
  xPipe_ctl2_Init[t] = 
      case
        { | t=2} : True[];
        { | 3<=t<=6} : False[];
      esac;
tel;

system cellfirModule1 :{p | p=0}
                      (H_mirr1 : {t | -4<=t<=-1; p=0} of integer; 
                       x_mirr1 : {t | -3<=t<=4; p=0} of integer)
       returns        (Y : {t | 2<=t<=6; p=0} of integer; 
                       xPipe : {t | 1<=t<=4; p=0} of integer; 
                       HPipeES : {t | -4<=t<=-1; p=0} of integer; 
                       xPipeES : {t | -3<=t<=1; p=0} | {t | 1<=t<=4; p=0} of integer);
var
  xPipeESloc4 : {t | -3<=t<=1; p=0} | {t | 1<=t<=4; p=0} of integer;
let
  xPipeES[t] = xPipeESloc4[t];
  xPipeESloc4[t] = x_mirr1[t];
  HPipeES[t] = H_mirr1[t];
  xPipe[t] = xPipeESloc4[t];
  Y[t] = 0[];
tel;

system cellfirModule3 :{p | 2<=p<=4}
                      (Y_reg7loc : {t | p+1<=t<=p+5; 2<=p<=4} of integer; 
                       xPipe_reg5loc : {t | p<=t<=p+4; 2<=p<=4} of integer; 
                       HPipeES_reg4loc : {t | 2p-6<=t<=p-1; 2<=p<=4} of integer; 
                       xPipeES_reg3loc : {t | 2p-5<=t<=p; 2<=p<=4} of integer; 
                       xPipe_ctl2_reg2loc : {t | p<=t<=p+4; 2<=p<=4} of boolean; 
                       HPipe_ctl1_reg1loc : {t | p-1<=t<=p+3; 2<=p<=4} of boolean)
       returns        (Y : {t | p+2<=t<=p+6; 2<=p<=4} of integer; 
                       xPipe : {t | p+1<=t<=p+5; 2<=p<=4} of integer; 
                       HPipeES : {t | 2p-4<=t<=p; 2<=p} of integer; 
                       xPipeES : {t | 2p-3<=t<=p+1; 2<=p} of integer; 
                       xPipe_ctl2 : {t | p+1<=t<=p+5; 2<=p<=4} of boolean; 
                       HPipe_ctl1 : {t | p<=t<=p+4; 2<=p<=4} of boolean);
var
  HPipe_ctl1loc6 : {t | p<=t<=p+4; 2<=p<=4} of boolean;
  xPipe_ctl2loc5 : {t | p+1<=t<=p+5; 2<=p<=4} of boolean;
  xPipeESloc4 : {t | 2p-3<=t<=p+1; 2<=p} of integer;
  HPipeESloc3 : {t | 2p-4<=t<=p; 2<=p} of integer;
  xPipeloc2 : {t | p+1<=t<=p+5; 2<=p<=4} of integer;
  HPipe : {t | p<=t<=p+4; 2<=p<=4} of integer;
  HPipe_ctl1_reg1 : {t | p<=t<=p+4; 2<=p<=4} of boolean;
  HPipeES_reg4 : {t | 2p-4<=t<=p; 2<=p} of integer;
  HPipe_reg6 : {t | p+1<=t<=p+4; 2<=p<=4} of integer;
  HPipe_reg8 : {t | p+2<=t<=p+6; 2<=p<=4} of integer;
  xPipe_ctl2_reg2 : {t | p+1<=t<=p+5; 2<=p<=4} of boolean;
  xPipeES_reg3 : {t | 2p-3<=t<=p+1; 2<=p} of integer;
  xPipe_reg5 : {t | p+2<=t<=p+5; 2<=p<=4} of integer;
  xPipe_reg9 : {t | p+2<=t<=p+6; 2<=p<=4} of integer;
  Y_reg7 : {t | p+2<=t<=p+6; 2<=p<=4} of integer;
let
  HPipe_ctl1[t] = HPipe_ctl1loc6[t];
  xPipe_ctl2[t] = xPipe_ctl2loc5[t];
  xPipeES[t] = xPipeESloc4[t];
  HPipeES[t] = HPipeESloc3[t];
  xPipe[t] = xPipeloc2[t];
  Y_reg7[t] = Y_reg7loc[t-1];
  xPipe_reg5[t] = xPipe_reg5loc[t-2];
  HPipeES_reg4[t] = HPipeES_reg4loc[t-2];
  xPipeES_reg3[t] = xPipeES_reg3loc[t-2];
  xPipe_ctl2_reg2[t] = xPipe_ctl2_reg2loc[t-1];
  HPipe_ctl1_reg1[t] = HPipe_ctl1_reg1loc[t-1];
  xPipe_reg9[t] = xPipeloc2[t-1];
  HPipe_reg8[t] = HPipe[t-2];
  HPipe_reg6[t] = HPipe[t-1];
  xPipeESloc4[t] = xPipeES_reg3[t];
  HPipeESloc3[t] = HPipeES_reg4[t];
  xPipe_ctl2loc5[t] = xPipe_ctl2_reg2[t];
  xPipeloc2[t] = 
      case
        { | t=p+1; 2<=p<=4} : if (xPipe_ctl2loc5[t]) then xPipeESloc4[t] else 0[];
        { | p+2<=t<=p+5; 2<=p<=4} : if (xPipe_ctl2loc5[t]) then 0[] else xPipe_reg5[t];
      esac;
  HPipe_ctl1loc6[t] = HPipe_ctl1_reg1[t];
  HPipe[t] = 
      case
        { | t=p; 2<=p<=4} : if (HPipe_ctl1loc6[t]) then HPipeESloc3[t] else 0[];
        { | p+1<=t<=p+4; 2<=p<=4} : if (HPipe_ctl1loc6[t]) then 0[] else HPipe_reg6[t];
      esac;
  Y[t] = Y_reg7[t] + HPipe_reg8[t] * xPipe_reg9[t];
tel;

system cellfirModule4 :{p | p=1}
                      (Y_reg7loc : {t | 2<=t<=6; p=1} of integer; 
                       xPipe_reg5loc : {t | 1<=t<=4; p=1} of integer; 
                       HPipeES_reg4loc : {t | -4<=t<=-1; p=1} of integer; 
                       xPipeES_reg3loc : {t | -3<=t<=1; p=1} | {t | 1<=t<=4; p=1} of integer; 
                       HPipe_ctl1_Init_In : {t | 1<=t<=5; p=1} of boolean; 
                       xPipe_ctl2_Init_In : {t | 2<=t<=6; p=1} of boolean)
       returns        (Y : {t | 3<=t<=7; p=1} of integer; 
                       xPipe : {t | 2<=t<=6; p=1} of integer; 
                       HPipeES : {t | -2<=t<=1; p=1} of integer; 
                       xPipeES : {t | -1<=t<=2; p=1} of integer; 
                       xPipe_ctl2 : {t | 2<=t<=6; p=1} of boolean; 
                       HPipe_ctl1 : {t | 1<=t<=5; p=1} of boolean);
var
  HPipe_ctl1loc6 : {t | 1<=t<=5; p=1} of boolean;
  xPipe_ctl2loc5 : {t | 2<=t<=6; p=1} of boolean;
  xPipeESloc4 : {t | -1<=t<=2; p=1} of integer;
  HPipeESloc3 : {t | -2<=t<=1; p=1} of integer;
  xPipeloc2 : {t | 2<=t<=6; p=1} of integer;
  HPipe : {t | 1<=t<=5; p=1} of integer;
  HPipeES_reg4 : {t | -2<=t<=1; p=1} of integer;
  HPipe_reg6 : {t | 2<=t<=5; p=1} of integer;
  HPipe_reg8 : {t | 3<=t<=7; p=1} of integer;
  xPipeES_reg3 : {t | -1<=t<=2; p=1} of integer;
  xPipe_reg5 : {t | 3<=t<=6; p=1} of integer;
  xPipe_reg9 : {t | 3<=t<=7; p=1} of integer;
  Y_reg7 : {t | 3<=t<=7; p=1} of integer;
let
  HPipe_ctl1[t] = HPipe_ctl1loc6[t];
  xPipe_ctl2[t] = xPipe_ctl2loc5[t];
  xPipeES[t] = xPipeESloc4[t];
  HPipeES[t] = HPipeESloc3[t];
  xPipe[t] = xPipeloc2[t];
  Y_reg7[t] = Y_reg7loc[t-1];
  xPipe_reg5[t] = xPipe_reg5loc[t-2];
  HPipeES_reg4[t] = HPipeES_reg4loc[t-2];
  xPipeES_reg3[t] = xPipeES_reg3loc[t-2];
  xPipe_reg9[t] = xPipeloc2[t-1];
  HPipe_reg8[t] = HPipe[t-2];
  HPipe_reg6[t] = HPipe[t-1];
  xPipeESloc4[t] = xPipeES_reg3[t];
  HPipeESloc3[t] = HPipeES_reg4[t];
  xPipe_ctl2loc5[t] = xPipe_ctl2_Init_In[t];
  xPipeloc2[t] = 
      case
        { | t=2; p=1} : if (xPipe_ctl2loc5[t]) then xPipeESloc4[t] else 0[];
        { | 3<=t<=6; p=1} : if (xPipe_ctl2loc5[t]) then 0[] else xPipe_reg5[t];
      esac;
  HPipe_ctl1loc6[t] = HPipe_ctl1_Init_In[t];
  HPipe[t] = 
      case
        { | t=1; p=1} : if (HPipe_ctl1loc6[t]) then HPipeESloc3[t] else 0[];
        { | 2<=t<=5; p=1} : if (HPipe_ctl1loc6[t]) then 0[] else HPipe_reg6[t];
      esac;
  Y[t] = Y_reg7[t] + HPipe_reg8[t] * xPipe_reg9[t];
tel;

system firModule (H_mirr1In : {t,p | -4<=t<=-1; p=0} of integer; 
                  x_mirr1In : {t,p | -3<=t<=4; p=0} of integer)
       returns   (YOut : {t,p | p+2<=t<=p+6; 0<=p<=4} of integer);
var
  HPipe_ctl1_Init : {t | 1<=t<=5} of boolean;
  xPipe_ctl2_Init : {t | 2<=t<=6} of boolean;
  H_mirr1 : {t,p | -4<=t<=-1; p=0} of integer;
  x_mirr1 : {t,p | -3<=t<=4; p=0} of integer;
  Y : {t,p | p+2<=t<=p+6; 0<=p<=4} of integer;
  Y1 : {t,p | 2<=t<=6; p=0} of integer;
  Y_reg7loc : {t,p | p+1<=t<=p+5; 1<=p<=5} of integer;
  xPipe1 : {t,p | 1<=t<=4; p=0} of integer;
  xPipe_reg5loc : {t,p | p<=t<=(p+4,2p+2); 1<=p<=5} of integer;
  HPipeES1 : {t,p | -4<=t<=-1; p=0} of integer;
  HPipeES_reg4loc : {t,p | 2p-6<=t<=(p-1,2p-3); 1<=p} of integer;
  xPipeES1 : {t,p | -3<=t<=4; p=0} of integer;
  xPipeES_reg3loc : {t,p | 2p-5<=t<=p; 1<=p} | {t,p | 1<=t<=4; p=1} of integer;
  Y3 : {t,p | p+2<=t<=p+6; 2<=p<=4} of integer;
  xPipe3 : {t,p | p+1<=t<=p+5; 2<=p<=4} of integer;
  HPipeES3 : {t,p | 2p-4<=t<=p; 2<=p} of integer;
  xPipeES3 : {t,p | 2p-3<=t<=p+1; 2<=p} of integer;
  xPipe_ctl23 : {t,p | p+1<=t<=p+5; 2<=p<=4} of boolean;
  xPipe_ctl2_reg2loc : {t,p | p<=t<=p+4; 2<=p<=5} of boolean;
  HPipe_ctl13 : {t,p | p<=t<=p+4; 2<=p<=4} of boolean;
  HPipe_ctl1_reg1loc : {t,p | p-1<=t<=p+3; 2<=p<=5} of boolean;
  Y4 : {t,p | 3<=t<=7; p=1} of integer;
  xPipe4 : {t,p | 2<=t<=6; p=1} of integer;
  HPipeES4 : {t,p | -2<=t<=1; p=1} of integer;
  xPipeES4 : {t,p | -1<=t<=2; p=1} of integer;
  xPipe_ctl24 : {t,p | 2<=t<=6; p=1} of boolean;
  HPipe_ctl14 : {t,p | 1<=t<=5; p=1} of boolean;
  HPipe_ctl1_Init_In : {t,p | 1<=t<=5; p=1} of boolean;
  xPipe_ctl2_Init_In : {t,p | 2<=t<=6; p=1} of boolean;
let
  H_mirr1[t,p] = H_mirr1In[t,p];
  HPipe_ctl1_Init_In[t,p] = HPipe_ctl1_Init[t];
  HPipe_ctl1_reg1loc[t,p] = 
      case
        { | p-1<=t<=p+3; 3<=p<=5} : HPipe_ctl13[t,p-1];
        { | 1<=t<=5; p=2} : HPipe_ctl14[t,p-1];
      esac;
  HPipeES_reg4loc[t,p] = 
      case
        { | -4<=t<=-1; p=1} : HPipeES1[t,p-1];
        { | 2p-6<=t<=p-1; 3<=p} : HPipeES3[t,p-1];
        { | -2<=t<=1; p=2} : HPipeES4[t,p-1];
      esac;
  x_mirr1[t,p] = x_mirr1In[t,p];
  xPipe_ctl2_Init_In[t,p] = xPipe_ctl2_Init[t];
  xPipe_ctl2_reg2loc[t,p] = 
      case
        { | p<=t<=p+4; 3<=p<=5} : xPipe_ctl23[t,p-1];
        { | 2<=t<=6; p=2} : xPipe_ctl24[t,p-1];
      esac;
  xPipeES_reg3loc[t,p] = 
      case
        { | -3<=t<=4; p=1} : xPipeES1[t,p-1];
        { | 2p-5<=t<=p; 3<=p} : xPipeES3[t,p-1];
        { | -1<=t<=2; p=2} : xPipeES4[t,p-1];
      esac;
  xPipe_reg5loc[t,p] = 
      case
        { | 1<=t<=4; p=1} : xPipe1[t,p-1];
        { | p<=t<=p+4; 3<=p<=5} : xPipe3[t,p-1];
        { | 2<=t<=6; p=2} : xPipe4[t,p-1];
      esac;
  Y[t,p] = 
      case
        { | 2<=t<=6; p=0} : Y1[t,p];
        { | p+2<=t<=p+6; 2<=p<=4} : Y3[t,p];
        { | 3<=t<=7; p=1} : Y4[t,p];
      esac;
  YOut[t,p] = Y[t,p];
  Y_reg7loc[t,p] = 
      case
        { | 2<=t<=6; p=1} : Y1[t,p-1];
        { | p+1<=t<=p+5; 3<=p<=5} : Y3[t,p-1];
        { | 3<=t<=7; p=2} : Y4[t,p-1];
      esac;
  use  ControlfirModule[] () returns  (HPipe_ctl1_Init, xPipe_ctl2_Init) ;
  use {p | p=0} cellfirModule1[p] (H_mirr1, x_mirr1) returns  (Y1, xPipe1, HPipeES1, xPipeES1) ;
  use {p | 2<=p<=4} cellfirModule3[p] (Y_reg7loc, xPipe_reg5loc, HPipeES_reg4loc, xPipeES_reg3loc, xPipe_ctl2_reg2loc, HPipe_ctl1_reg1loc) returns  (Y3, xPipe3, HPipeES3, xPipeES3, xPipe_ctl23, HPipe_ctl13) ;
  use {p | p=1} cellfirModule4[p] (Y_reg7loc, xPipe_reg5loc, HPipeES_reg4loc, xPipeES_reg3loc, HPipe_ctl1_Init_In, xPipe_ctl2_Init_In) returns  (Y4, xPipe4, HPipeES4, xPipeES4, xPipe_ctl24, HPipe_ctl14) ;
tel;

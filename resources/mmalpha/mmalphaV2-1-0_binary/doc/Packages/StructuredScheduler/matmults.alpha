system dot :   {N | 1<=N}
               (a : {k | 1<=k<=N} of integer; 
                b : {k | 1<=k<=N} of integer)
       returns (c :  integer);
var
  Acc : {k | 0<=k<=N} of integer;
let
  Acc[k] = 
      case
        { | k=0} : 0[];
        { | 1<=k} : Acc[k-1] + a[k] * b[k];
      esac;
  c[] = Acc[N];
tel;

system matmult :{N | 2<=N}
               (a : {i,j | 1<=i<=N; 1<=j<=N} of integer; 
                b : {i,j | 1<=i<=N; 1<=j<=N} of integer)
       returns (c : {i,j | 1<=i<=N; 1<=j<=N} of integer);
var
  A : {k,i,j | 0<=k<=N; 1<=i<=N; 1<=j<=N} of integer;
  B : {k,i,j | 0<=k<=N; 1<=i<=N; 1<=j<=N} of integer;
let
  A[k,i,j] = 
      case
        { | k=0} : a[i,j];
        { | 1<=k; 2<=j} : A[i,j-1,k];
        { | 1<=k; j=1} : a[i,k];
      esac;
  B[k,i,j] = 
      case
        { | k=0} : b[i,j];
        { | 1<=k; 2<=i} : B[k,i-1,j];
        { | 1<=k; i=1} : b[j,k];
      esac;
  use {i,j | 1<=i<=N; 1<=j<=N} dot[N] (A, B) returns  (c) ;
tel;

system fir :   {N,M | 3<=N<=M-1}
               (x : {i | 1<=i<=M} of integer; 
                H : {n | 0<=n<=N-1} of integer)
       returns (res : {i | N<=i<=M} of integer);
var
  xPipeES : {t,p | 2p-N+2<=t<=p+1; 0<=p} | {t,p | 1<=t<=-N+M+1; p=0} of integer
  ;
  HPipeES : {t,p | 2p-N+2<=t<=p+1; 0<=p} of integer;
  xPipe : {t,p | p+1<=t<=p-N+M+1; 0<=p<=N-1} of integer;
  HPipe : {t,p | p+1<=t<=p-N+M+1; 0<=p<=N-1} of integer;
  Y : {t,p | p+2<=t<=p-N+M+2; -1<=p<=N-1} of integer;
let
  xPipeES[t,p] = 
      case
        {| p=0} : x[t-4p+N-1];
        {| 1<=p} : xPipeES[t-2,p-1];
      esac;
  HPipeES[t,p] = 
      case
        {| p=0} : H[-t+1];
        {| 1<=p} : HPipeES[t-2,p-1];
      esac;
  xPipe[t,p] = 
      case
        {| t=p+1} | {| p=0} : xPipeES;
        {| p+2<=t; 1<=p} : xPipe[t-2,p-1];
      esac;
  HPipe[t,p] = 
      case
        {| t=p+1} : HPipeES;
        {| p+2<=t} : HPipe[t-1,p];
      esac;
  Y[t,p] = 
      case
        {| p=-1} : 0[];
        {| 0<=p} : Y[t-1,p-1] + HPipe[t-1,p] * xPipe[t-1,p];
      esac;
  res[i] = Y[i+1,N-1];
tel;

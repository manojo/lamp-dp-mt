system ControlfirModule ( )
       returns          (ser1Xctl1 : {t | t=100} | {t | 101<=t<=104} of boolean);
let
  ser1Xctl1[t] = 
      case
        { | t=100} : True[];
        { | 101<=t} : False[];
      esac;
tel;

system cellfirModule1 :{p | p=2}
                      (HXMirr1 : {t | 101<=t<=104} of integer; 
                       xXMirr1 : {t | 3<=t<=102} of integer)
       returns        (pipeCx1 : {t | 3<=t<=102} of integer; 
                       pipeCH1 : {t | 101<=t<=104} of integer);
let
  pipeCx1[t] = xXMirr1[t];
  pipeCH1[t] = HXMirr1[t];
tel;

system cellfirModule2 :{p | 4<=p<=100}
                      (pipeCx1Reg2Xloc : {t | p<=t<=(p+99,104)} of integer; 
                       pipeCH1Reg1 : {t | 101<=t<=104} of integer; 
                       ser1Xctl1XIn : {t | 100<=t<=104} of boolean)
       returns        (pipeCx1 : {t | p+1<=t<=104} of integer; 
                       pipeCH1 : {t | 101<=t<=104} of integer; 
                       ser1 : {t | 100<=t<=104} of integer);
var
  ser1loc3 : {t | 100<=t<=104} of integer;
  pipeCx1Reg2 : {t | p+1<=t<=104} of integer;
  ser1Reg3 : {t | 101<=t<=104} of integer;
  TSep1 : {t | 101<=t<=104} of integer;
  TSep2 : {t | 101<=t<=104} of integer;
let
  ser1[t] = ser1loc3[t];
  pipeCH1[t] = pipeCH1Reg1[t];
  pipeCx1[t] = pipeCx1Reg2[t];
  pipeCx1Reg2[t] = pipeCx1Reg2Xloc[t-1];
  ser1Reg3[t] = ser1loc3[t-1];
  TSep1[t] = pipeCH1Reg1[t] * pipeCx1Reg2[t];
  TSep2[t] = ser1Reg3[t] + TSep1[t];
  ser1loc3[t] = 
      case
        { | t=100} : if (ser1Xctl1XIn[t]) then 0[] else 0[];
        { | 101<=t} : if (ser1Xctl1XIn[t]) then 0[] else TSep2[t];
      esac;
tel;

system cellfirModule4 :{p | p=3}
                      (pipeCx1Reg2Xloc : {t | p<=t<=p+99} of integer; 
                       pipeCH1Reg1 : {t | 101<=t<=104} of integer)
       returns        (pipeCx1 : {t | p+1<=t<=p+100} of integer; 
                       pipeCH1 : {t | 101<=t<=104} of integer);
var
  pipeCx1Reg2 : {t | p+1<=t<=p+100} of integer;
let
  pipeCx1Reg2[t] = pipeCx1Reg2Xloc[t-1];
  pipeCx1[t] = pipeCx1Reg2[t];
  pipeCH1[t] = pipeCH1Reg1[t];
tel;

system firModule (HXMirr1In : {t,p | 101<=t<=104; p=2} of integer; 
                  xXMirr1In : {t,p | 3<=t<=102; p=2} of integer)
       returns   (ser1Out : {t,p | 100<=t<=104; 4<=p<=100} of integer);
var
  ser1Xctl1 : {t | 100<=t<=104} of boolean;
  HXMirr1 : {t,p | 101<=t<=104; p=2} of integer;
  xXMirr1 : {t,p | 3<=t<=102; p=2} of integer;
  pipeCx11 : {t,p | 3<=t<=102; p=2} of integer;
  pipeCx1Reg2Xloc : {t,p | p<=t<=(p+99,104); 3<=p<=101} of integer;
  pipeCH11 : {t,p | 101<=t<=104; p=2} of integer;
  pipeCH1Reg1 : {t,p | 101<=t<=104; 3<=p<=100} of integer;
  pipeCx12 : {t,p | p+1<=t<=104; 4<=p<=100} of integer;
  pipeCH12 : {t,p | 101<=t<=104; 4<=p<=100} of integer;
  ser1Xctl1XIn : {t,p | 100<=t<=104; 4<=p<=100} of boolean;
  ser12 : {t,p | 100<=t<=104; 4<=p<=100} of integer;
  pipeCx14 : {t,p | 4<=t<=103; p=3} of integer;
  pipeCH14 : {t,p | 101<=t<=104; p=3} of integer;
let
  HXMirr1[t,p] = HXMirr1In[t,p];
  pipeCH1Reg1[t,p] = 
      case
        { | p=3} : pipeCH11[t,p-1];
        { | 5<=p} : pipeCH12[t,p-1];
        { | p=4} : pipeCH14[t,p-1];
      esac;
  pipeCx1Reg2Xloc[t,p] = 
      case
        { | p=3} : pipeCx11[t,p-1];
        { | 5<=p} : pipeCx12[t,p-1];
        { | p=4} : pipeCx14[t,p-1];
      esac;
  ser1Out[t,p] = ser12[t,p];
  ser1Xctl1XIn[t,p] = ser1Xctl1[t];
  xXMirr1[t,p] = xXMirr1In[t,p];
  use  ControlfirModule[] () returns  (ser1Xctl1) ;
  use {p | p=2} cellfirModule1[p] (HXMirr1, xXMirr1) returns  (pipeCx11, pipeCH11) ;
  use {p | 4<=p<=100} cellfirModule2[p] (pipeCx1Reg2Xloc, pipeCH1Reg1, ser1Xctl1XIn) returns  (pipeCx12, pipeCH12, ser12) ;
  use {p | p=3} cellfirModule4[p] (pipeCx1Reg2Xloc, pipeCH1Reg1) returns  (pipeCx14, pipeCH14) ;
tel;

system fir     (x : {i | 1<=i<=100} of integer; 
                H : {n | 0<=n<=3} of integer)
       returns (res : {i | 4<=i<=100} of integer);
var
  HXMirr1 : {t,p | 101<=t<=104; p=2} of integer;
  xXMirr1 : {t,p | 3<=t<=102; p=2} of integer;
  ser1 : {t,p | 100<=t<=104; 4<=p<=100} of integer;
let
  HXMirr1[t,p] = H[t-101];
  xXMirr1[t,p] = x[-t+103];
  res[i] = ser1[104,i];
  use  firModule[] (HXMirr1, xXMirr1) returns  (ser1) ;
tel;

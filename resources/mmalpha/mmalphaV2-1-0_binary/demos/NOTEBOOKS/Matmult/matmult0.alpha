system matmult :{M | 2<=M}
               (a : {i,j | 1<=i<=M; 1<=j<=M} of integer; 
                b : {i,j | 1<=i<=M; 1<=j<=M} of integer)
       returns (c : {i,j | 1<=i<=M; 1<=j<=M} of integer);
var
  bXMirr1 : {t,p1,p2 | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of integer;
  aXMirr1 : {t,p1,p2 | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of integer;
  TSep2 : {t,p1,p2 | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of integer;
  TSep1 : {t,p1,p2 | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of integer;
  CReg1 : {t,p1,p2 | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of integer;
  CXctl1XIn : {t,p1,p2 | 0<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} of boolean;
  C : {t,p1,p2 | 0<=t<=M; 1<=p1<=M; 1<=p2<=M} of integer;
  CXctl1 : {t | 0<=t<=M; 2<=M} of boolean;
let
  bXMirr1[t,p1,p2] = b[t,p1];
  aXMirr1[t,p1,p2] = a[p2,t];
  CReg1[t,p1,p2] = C[t-1,p1,p2];
  CXctl1XIn[t,p1,p2] = CXctl1[t];
  c[i,j] = C[M,j,i];
  CXctl1[t] = 
      case
        { | 0<=t<=M; 2<=M} : 
           case
             { | t=0; 2<=M} : True[];
             { | 1<=t<=M; 2<=M} : False[];
           esac;
      esac;
  TSep1[t,p1,p2] = aXMirr1 * bXMirr1;
  TSep2[t,p1,p2] = CReg1 + TSep1;
  C[t,p1,p2] = 
      case
        { | 0<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} : { | 0<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} : if (CXctl1XIn) then 
                  case
                    { | t=0; 1<=p1<=M; 1<=p2<=M; 2<=M} : 0[];
                    { | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} : 0[];
                  esac else 
              case
                { | t=0; 1<=p1<=M; 1<=p2<=M; 2<=M} : 0[];
                { | 1<=t<=M; 1<=p1<=M; 1<=p2<=M; 2<=M} : TSep2;
              esac;
      esac;
tel;

system sequence :{X,Y | 3<=X<=Y-1}
                (QS : {i | 1<=i<=X} of integer; 
                 DB : {j | 1<=j<=Y} of integer)
       returns  (res : {j | 1<=j<=Y} of integer);
var
  pipeCDB9 : {t,p | p<=t<=p+Y-1; 0<=p<=X} of integer;
  pipeCQS9 : {t,p | p<=t<=p+Y-1; 1<=p<=X} of integer;
  M : {t,p | p<=t<=p+Y; 0<=p<=X} of integer;
  MatchQ : {t,p | p<=t<=p+Y-1; 1<=p<=X} of integer;
let
  pipeCDB9[t,p] = 
      case
        { | 0<=t<=Y-1; p=0; 3<=X<=Y-1} : DB[t+1];
        { | p<=t<=p+Y-1; 1<=p<=X; 3<=X<=Y-1} : pipeCDB9[t-1,p-1];
      esac;
  pipeCQS9[t,p] = 
      case
        { | p<=t<=p+Y-1; 1<=p<=X; 3<=X<=Y-1} : 
           case
             { | t=p; 1<=p<=X; 3<=X<=Y-1} : QS[t];
             { | p+1<=t<=p+Y-1; 1<=p<=X; 3<=X<=Y-1} : pipeCQS9[t-1,p];
           esac;
      esac;
  M[t,p] = 
      case
        { | 0<=t<=Y; p=0; 3<=X<=Y-1} : 0[];
        { | p<=t<=p+Y; 1<=p<=X; 3<=X<=Y-1} : 
           case
             { | t=p; 1<=p<=X; 3<=X<=Y-1} : 0[];
             { | p+1<=t<=p+Y; 1<=p<=X; 3<=X<=Y-1} : max(max(0[], (M[t-1,p] - 8[])), max((M[t-1,p-1] - 8[]), (M[t-2,p-1] + MatchQ[t-1,p])));
           esac;
      esac;
  MatchQ[t,p] = if (pipeCQS9 = pipeCDB9) then 15[] else -12[];
  res[j] = M[j+X,X];
tel;

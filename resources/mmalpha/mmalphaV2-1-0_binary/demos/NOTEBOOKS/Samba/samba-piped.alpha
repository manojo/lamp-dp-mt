system sequence :{X,Y | 3<=X<=Y-1}
                (QS : {i | 1<=i<=X} of integer; 
                 DB : {j | 1<=j<=Y} of integer)
       returns  (res : {j | 1<=j<=Y} of integer);
var
  pipeCDB7 : {i,j | 1<=i<=X; 1<=j<=Y; 3<=X<=Y-1} of integer;
  pipeCQS7 : {i,j | 1<=i<=X; 1<=j<=Y; 3<=X<=Y-1} of integer;
  M : {i,j | 0<=i<=X; 0<=j<=Y} of integer;
  MatchQ : {i,j | 1<=i<=X; 1<=j<=Y} of integer;
let
  pipeCDB7[i,j] = 
      case
        { | i=1; 1<=j<=Y; 3<=X<=Y-1} : DB[j];
        { | 2<=i<=X; 1<=j<=Y; 3<=X<=Y-1} : pipeCDB7[i-1,j];
      esac;
  pipeCQS7[i,j] = 
      case
        { | 1<=i<=X; j=1; 3<=X<=Y-1} : QS[i];
        { | 1<=i<=X; 2<=j<=Y; 3<=X<=Y-1} : pipeCQS7[i,j-1];
      esac;
  M[i,j] = 
      case
        { | i=0} : 0[];
        { | 1<=i; j=0} : 0[];
        { | 1<=i; 1<=j} : max(max(0[], (M[i,j-1] - 8[])), max((M[i-1,j] - 8[]), (M[i-1,j-1] + MatchQ[i,j])));
      esac;
  MatchQ[i,j] = if (pipeCQS7 = pipeCDB7) then 15[] else -12[];
  res[j] = M[X,j];
tel;

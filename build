#!/bin/sh
cd `dirname $0`
if [ "$OSTYPE" = "darwin" ]; then md5_hash() { md5 -s $@; };
else md5_hash() { md5sum $@; }; fi

#YJP="/Applications/Tools/YourKit Java Profiler.app/bin/mac/libyjpagent.jnilib"

scalac2() {
	printf "Compiling %s ... " "$1"; shift; f=$1; shift; md5_hash $@ > bin/$f.tmp
	if diff "bin/$f.md5" "bin/$f.tmp" 1>/dev/null 2>/dev/null; then rm "bin/$f.tmp"; echo 'up to date.'; false
	else scalac -target:jvm-1.7 -optimise -unchecked -deprecation -classpath bin -d bin $@ || exit; mv "bin/$f.tmp" "bin/$f.md5"; echo 'done.'; true; fi
}

if [ "$1" = "clean" ]; then printf 'Cleaning ... '; rm -rf bin; echo 'done.'; exit; fi
if [ "$1" = "help" ]; then echo "Run ./build with one of the following arguments:";
	cat src/main/scala/v4/examples/* | grep object | grep App | sed 's/object /v4.examples./g' | sed 's/ .*//g'; exit
fi

printf 'LibRNA JNI: '; src/librna/make bin
scalac2 'LibRNA' _rna src/librna/*.scala
if scalac2 'Base parsers' _v4 src/main/scala/v4/*.scala; then rm bin/_ex.md5 2>/dev/null; fi
scalac2 'Examples' _ex src/main/scala/v4/examples/*.scala

scala2() {
	opts="-J-Xss64m -cp bin"
	if [ "$YJP" == "" ]; then scala $opts $@;
	else scala -J-agentpath:"$YJP"=sampling,onexit=snapshot,builtinprobes=all $opts $@; fi;
}

if [ "$1" ]; then
	echo
	echo "Running $1"; scala2 $1
else
	echo
	echo 'Running MatrixMultGen'; scala2 v4.examples.MatrixMultGen
	echo
	echo 'Running MatrixMultGen2'; scala2 v4.examples.MatrixMultGen2
	echo
	echo 'Running SeqAlignGen'; scala2 v4.examples.SeqAlignGen
fi
